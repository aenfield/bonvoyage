<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='BonVoyage' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Selected Airport' datatype='string' name='[Airport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tampa International Airport&quot;'>
        <calculation class='tableau' formula='&quot;Tampa International Airport&quot;' />
        <members>
          <member value='&quot;Aberdeen Regional Airport&quot;' />
          <member value='&quot;Abilene Regional Airport&quot;' />
          <member value='&quot;Abraham Lincoln Capital Airport&quot;' />
          <member value='&quot;Adak Airport&quot;' />
          <member value='&quot;Akron Canton Regional Airport&quot;' />
          <member value='&quot;Albany International Airport&quot;' />
          <member value='&quot;Albert J Ellis Airport&quot;' />
          <member value='&quot;Albuquerque International Sunport Airport&quot;' />
          <member value='&quot;Alexandria International Airport&quot;' />
          <member value='&quot;Alpena County Regional Airport&quot;' />
          <member value='&quot;Antonio B. Won Pat International Airport&quot;' />
          <member value='&quot;Appleton International Airport&quot;' />
          <member value='&quot;Arcata Airport&quot;' />
          <member value='&quot;Arnold Palmer Regional Airport&quot;' />
          <member value='&quot;Asheville Regional Airport&quot;' />
          <member value='&quot;Aspen-Pitkin Co/Sardy Field&quot;' />
          <member value='&quot;Atlantic City International Airport&quot;' />
          <member value='&quot;Augusta Regional At Bush Field&quot;' />
          <member value='&quot;Austin Bergstrom International Airport&quot;' />
          <member value='&quot;Austin Straubel International Airport&quot;' />
          <member value='&quot;Baltimore/Washington International Thurgood Marshall Airport&quot;' />
          <member value='&quot;Bangor International Airport&quot;' />
          <member value='&quot;Barkley Regional Airport&quot;' />
          <member value='&quot;Barnstable Municipal Boardman Polando Field&quot;' />
          <member value='&quot;Baton Rouge Metropolitan, Ryan Field&quot;' />
          <member value='&quot;Bellingham International Airport&quot;' />
          <member value='&quot;Bemidji Regional Airport&quot;' />
          <member value='&quot;Bert Mooney Airport&quot;' />
          <member value='&quot;Bethel Airport&quot;' />
          <member value='&quot;Bill &amp; Hillary Clinton National Airport/Adams Field&quot;' />
          <member value='&quot;Billings Logan International Airport&quot;' />
          <member value='&quot;Birmingham-Shuttlesworth International Airport&quot;' />
          <member value='&quot;Bishop International Airport&quot;' />
          <member value='&quot;Bismarck Municipal Airport&quot;' />
          <member value='&quot;Blue Grass Airport&quot;' />
          <member value='&quot;Bob Hope Airport&quot;' />
          <member value='&quot;Boise Air Terminal/Gowen field&quot;' />
          <member value='&quot;Bradley International Airport&quot;' />
          <member value='&quot;Brainerd Lakes Regional Airport&quot;' />
          <member value='&quot;Brownsville South Padre Island International Airport&quot;' />
          <member value='&quot;Brunswick Golden Isles Airport&quot;' />
          <member value='&quot;Buffalo Niagara International Airport&quot;' />
          <member value='&quot;Burlington International Airport&quot;' />
          <member value='&quot;Cape Girardeau Regional Airport&quot;' />
          <member value='&quot;Capital City Airport&quot;' />
          <member value='&quot;Casper-Natrona County International Airport&quot;' />
          <member value='&quot;Cedar City Regional Airport&quot;' />
          <member value='&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;' />
          <member value='&quot;Central Nebraska Regional Airport&quot;' />
          <member value='&quot;Central Wisconsin Airport&quot;' />
          <member value='&quot;Charles M. Schulz Sonoma County Airport&quot;' />
          <member value='&quot;Charleston Air Force Base-International Airport&quot;' />
          <member value='&quot;Charlotte County Airport&quot;' />
          <member value='&quot;Charlotte Douglas International Airport&quot;' />
          <member value='&quot;Charlottesville Albemarle Airport&quot;' />
          <member value='&quot;Cherry Capital Airport&quot;' />
          <member value='&quot;Chicago Midway International Airport&quot;' />
          <member value='&quot;Chicago O&apos;Hare International Airport&quot;' />
          <member value='&quot;Chippewa County International Airport&quot;' />
          <member value='&quot;Chippewa Valley Regional Airport&quot;' />
          <member value='&quot;Cincinnati Northern Kentucky International Airport&quot;' />
          <member value='&quot;City of Colorado Springs Municipal Airport&quot;' />
          <member value='&quot;Cleveland Hopkins International Airport&quot;' />
          <member value='&quot;Coastal Carolina Regional Airport&quot;' />
          <member value='&quot;Columbia Metropolitan Airport&quot;' />
          <member value='&quot;Columbia Regional Airport&quot;' />
          <member value='&quot;Columbus Metropolitan Airport&quot;' />
          <member value='&quot;Corpus Christi International Airport&quot;' />
          <member value='&quot;Cyril E. King Airport&quot;' />
          <member value='&quot;Dallas Fort Worth International Airport&quot;' />
          <member value='&quot;Dallas Love Field&quot;' />
          <member value='&quot;Dane County Regional Truax Field&quot;' />
          <member value='&quot;Daytona Beach International Airport&quot;' />
          <member value='&quot;Deadhorse Airport&quot;' />
          <member value='&quot;Delta County Airport&quot;' />
          <member value='&quot;Denver International Airport&quot;' />
          <member value='&quot;Des Moines International Airport&quot;' />
          <member value='&quot;Destin-Ft Walton Beach Airport&quot;' />
          <member value='&quot;Detroit Metropolitan Wayne County Airport&quot;' />
          <member value='&quot;Devils Lake Regional Airport&quot;' />
          <member value='&quot;Dillingham Airport&quot;' />
          <member value='&quot;Dothan Regional Airport&quot;' />
          <member value='&quot;Duluth International Airport&quot;' />
          <member value='&quot;Durango La Plata County Airport&quot;' />
          <member value='&quot;Eagle County Regional Airport&quot;' />
          <member value='&quot;East Texas Regional Airport&quot;' />
          <member value='&quot;Easterwood Field&quot;' />
          <member value='&quot;El Paso International Airport&quot;' />
          <member value='&quot;Elko Regional Airport&quot;' />
          <member value='&quot;Elmira Corning Regional Airport&quot;' />
          <member value='&quot;Eppley Airfield&quot;' />
          <member value='&quot;Erie International Tom Ridge Field&quot;' />
          <member value='&quot;Evansville Regional Airport&quot;' />
          <member value='&quot;Fairbanks International Airport&quot;' />
          <member value='&quot;Falls International Airport&quot;' />
          <member value='&quot;Fayetteville Regional Grannis Field&quot;' />
          <member value='&quot;Flagstaff Pulliam Airport&quot;' />
          <member value='&quot;Ford Airport&quot;' />
          <member value='&quot;Fort Collins Loveland Municipal Airport&quot;' />
          <member value='&quot;Fort Lauderdale Hollywood International Airport&quot;' />
          <member value='&quot;Fort Smith Regional Airport&quot;' />
          <member value='&quot;Fort Wayne International Airport&quot;' />
          <member value='&quot;Fresno Yosemite International Airport&quot;' />
          <member value='&quot;Friedman Memorial Airport&quot;' />
          <member value='&quot;Gainesville Regional Airport&quot;' />
          <member value='&quot;Gallatin Field&quot;' />
          <member value='&quot;Garden City Regional Airport&quot;' />
          <member value='&quot;General Edward Lawrence Logan International Airport&quot;' />
          <member value='&quot;General Mitchell International Airport&quot;' />
          <member value='&quot;General Wayne A. Downing Peoria International Airport&quot;' />
          <member value='&quot;George Bush Intercontinental Houston Airport&quot;' />
          <member value='&quot;Gerald R. Ford International Airport&quot;' />
          <member value='&quot;Gillette Campbell County Airport&quot;' />
          <member value='&quot;Glacier Park International Airport&quot;' />
          <member value='&quot;Golden Triangle Regional Airport&quot;' />
          <member value='&quot;Grand Forks International Airport&quot;' />
          <member value='&quot;Grand Junction Regional Airport&quot;' />
          <member value='&quot;Great Falls International Airport&quot;' />
          <member value='&quot;Greater Binghamton/Edwin A Link field&quot;' />
          <member value='&quot;Greater Rochester International Airport&quot;' />
          <member value='&quot;Greenville Spartanburg International Airport&quot;' />
          <member value='&quot;Gulfport Biloxi International Airport&quot;' />
          <member value='&quot;Gunnison Crested Butte Regional Airport&quot;' />
          <member value='&quot;Gustavus Airport&quot;' />
          <member value='&quot;Harrisburg International Airport&quot;' />
          <member value='&quot;Hartsfield Jackson Atlanta International Airport&quot;' />
          <member value='&quot;Hattiesburg Laurel Regional Airport&quot;' />
          <member value='&quot;Hays Regional Airport&quot;' />
          <member value='&quot;Hector International Airport&quot;' />
          <member value='&quot;Helena Regional Airport&quot;' />
          <member value='&quot;Henry E Rohlsen Airport&quot;' />
          <member value='&quot;Hilo International Airport&quot;' />
          <member value='&quot;Honolulu International Airport&quot;' />
          <member value='&quot;Houghton County Memorial Airport&quot;' />
          <member value='&quot;Huntsville International Carl T Jones Field&quot;' />
          <member value='&quot;Idaho Falls Regional Airport&quot;' />
          <member value='&quot;Indianapolis International Airport&quot;' />
          <member value='&quot;Ithaca Tompkins Regional Airport&quot;' />
          <member value='&quot;Jackson Hole Airport&quot;' />
          <member value='&quot;Jackson-Medgar Wiley Evers International Airport&quot;' />
          <member value='&quot;Jacksonville International Airport&quot;' />
          <member value='&quot;James M Cox Dayton International Airport&quot;' />
          <member value='&quot;Jamestown Regional Airport&quot;' />
          <member value='&quot;Joe Foss Field Airport&quot;' />
          <member value='&quot;John F Kennedy International Airport&quot;' />
          <member value='&quot;John Wayne Airport-Orange County Airport&quot;' />
          <member value='&quot;Joplin Regional Airport&quot;' />
          <member value='&quot;Joslin Field Magic Valley Regional Airport&quot;' />
          <member value='&quot;Juneau International Airport&quot;' />
          <member value='&quot;Kahului Airport&quot;' />
          <member value='&quot;Kalamazoo Battle Creek International Airport&quot;' />
          <member value='&quot;Kansas City International Airport&quot;' />
          <member value='&quot;Ketchikan International Airport&quot;' />
          <member value='&quot;Key Field&quot;' />
          <member value='&quot;Key West International Airport&quot;' />
          <member value='&quot;King Salmon Airport&quot;' />
          <member value='&quot;Kodiak Airport&quot;' />
          <member value='&quot;Kona International At Keahole Airport&quot;' />
          <member value='&quot;La Crosse Municipal Airport&quot;' />
          <member value='&quot;La Guardia Airport&quot;' />
          <member value='&quot;Lafayette Regional Airport&quot;' />
          <member value='&quot;Lake Charles Regional Airport&quot;' />
          <member value='&quot;Lambert St Louis International Airport&quot;' />
          <member value='&quot;Laramie Regional Airport&quot;' />
          <member value='&quot;Laredo International Airport&quot;' />
          <member value='&quot;Lawton Fort Sill Regional Airport&quot;' />
          <member value='&quot;Lea County Regional Airport&quot;' />
          <member value='&quot;Lehigh Valley International Airport&quot;' />
          <member value='&quot;Lewiston Nez Perce County Airport&quot;' />
          <member value='&quot;Lihue Airport&quot;' />
          <member value='&quot;Lincoln Airport&quot;' />
          <member value='&quot;Long Beach /Daugherty Field/ Airport&quot;' />
          <member value='&quot;Long Island Mac Arthur Airport&quot;' />
          <member value='&quot;Los Angeles International Airport&quot;' />
          <member value='&quot;Louis Armstrong New Orleans International Airport&quot;' />
          <member value='&quot;Louisville International Standiford Field&quot;' />
          <member value='&quot;Lovell Field&quot;' />
          <member value='&quot;Lubbock Preston Smith International Airport&quot;' />
          <member value='&quot;Luis Munoz Marin International Airport&quot;' />
          <member value='&quot;Mahlon Sweet Field&quot;' />
          <member value='&quot;Mammoth Yosemite Airport&quot;' />
          <member value='&quot;Manchester Airport&quot;' />
          <member value='&quot;Manhattan Regional Airport&quot;' />
          <member value='&quot;Martha&apos;s Vineyard Airport&quot;' />
          <member value='&quot;MBS International Airport&quot;' />
          <member value='&quot;Mc Allen Miller International Airport&quot;' />
          <member value='&quot;McCarran International Airport&quot;' />
          <member value='&quot;McGhee Tyson Airport&quot;' />
          <member value='&quot;Meadows Field&quot;' />
          <member value='&quot;Melbourne International Airport&quot;' />
          <member value='&quot;Memphis International Airport&quot;' />
          <member value='&quot;Mercedita Airport&quot;' />
          <member value='&quot;Merle K (Mudhole) Smith Airport&quot;' />
          <member value='&quot;Metropolitan Oakland International Airport&quot;' />
          <member value='&quot;Miami International Airport&quot;' />
          <member value='&quot;Midland International Airport&quot;' />
          <member value='&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;' />
          <member value='&quot;Minot International Airport&quot;' />
          <member value='&quot;Missoula International Airport&quot;' />
          <member value='&quot;Mobile Regional Airport&quot;' />
          <member value='&quot;Monroe Regional Airport&quot;' />
          <member value='&quot;Monterey Peninsula Airport&quot;' />
          <member value='&quot;Montgomery Regional (Dannelly Field) Airport&quot;' />
          <member value='&quot;Montrose Regional Airport&quot;' />
          <member value='&quot;Muskegon County Airport&quot;' />
          <member value='&quot;Myrtle Beach International Airport&quot;' />
          <member value='&quot;Nantucket Memorial Airport&quot;' />
          <member value='&quot;Nashville International Airport&quot;' />
          <member value='&quot;Newark Liberty International Airport&quot;' />
          <member value='&quot;Newport News Williamsburg International Airport&quot;' />
          <member value='&quot;Niagara Falls International Airport&quot;' />
          <member value='&quot;Nome Airport&quot;' />
          <member value='&quot;Norfolk International Airport&quot;' />
          <member value='&quot;Norman Y. Mineta San Jose International Airport&quot;' />
          <member value='&quot;North Central West Virginia Airport&quot;' />
          <member value='&quot;Northeast Florida Regional Airport&quot;' />
          <member value='&quot;Northwest Arkansas Regional Airport&quot;' />
          <member value='&quot;Northwest Florida Beaches International Airport&quot;' />
          <member value='&quot;Ontario International Airport&quot;' />
          <member value='&quot;Orlando International Airport&quot;' />
          <member value='&quot;Pago Pago International Airport&quot;' />
          <member value='&quot;Palm Beach International Airport&quot;' />
          <member value='&quot;Palm Springs International Airport&quot;' />
          <member value='&quot;Pellston Regional Airport of Emmet County Airport&quot;' />
          <member value='&quot;Pensacola Regional Airport&quot;' />
          <member value='&quot;Petersburg James A Johnson Airport&quot;' />
          <member value='&quot;Philadelphia International Airport&quot;' />
          <member value='&quot;Phoenix Sky Harbor International Airport&quot;' />
          <member value='&quot;Piedmont Triad International Airport&quot;' />
          <member value='&quot;Pittsburgh International Airport&quot;' />
          <member value='&quot;Plattsburgh International Airport&quot;' />
          <member value='&quot;Pocatello Regional Airport&quot;' />
          <member value='&quot;Port Columbus International Airport&quot;' />
          <member value='&quot;Portland International Airport&quot;' />
          <member value='&quot;Portland International Jetport Airport&quot;' />
          <member value='&quot;Pueblo Memorial Airport&quot;' />
          <member value='&quot;Quad City International Airport&quot;' />
          <member value='&quot;Quincy Regional Baldwin Field&quot;' />
          <member value='&quot;Rafael Hernandez Airport&quot;' />
          <member value='&quot;Raleigh Durham International Airport&quot;' />
          <member value='&quot;Ralph Wien Memorial Airport&quot;' />
          <member value='&quot;Range Regional Airport&quot;' />
          <member value='&quot;Rapid City Regional Airport&quot;' />
          <member value='&quot;Redding Municipal Airport&quot;' />
          <member value='&quot;Reno Tahoe International Airport&quot;' />
          <member value='&quot;Rhinelander Oneida County Airport&quot;' />
          <member value='&quot;Richmond International Airport&quot;' />
          <member value='&quot;Rick Husband Amarillo International Airport&quot;' />
          <member value='&quot;Roanoke–Blacksburg Regional Airport&quot;' />
          <member value='&quot;Robert Gray  Army Air Field Airport&quot;' />
          <member value='&quot;Roberts Field&quot;' />
          <member value='&quot;Rochester International Airport&quot;' />
          <member value='&quot;Rock Springs Sweetwater County Airport&quot;' />
          <member value='&quot;Rogue Valley International Medford Airport&quot;' />
          <member value='&quot;Ronald Reagan Washington National Airport&quot;' />
          <member value='&quot;Roswell International Air Center Airport&quot;' />
          <member value='&quot;Sacramento International Airport&quot;' />
          <member value='&quot;Salt Lake City International Airport&quot;' />
          <member value='&quot;San Angelo Regional Mathis Field&quot;' />
          <member value='&quot;San Antonio International Airport&quot;' />
          <member value='&quot;San Diego International Airport&quot;' />
          <member value='&quot;San Francisco International Airport&quot;' />
          <member value='&quot;San Luis County Regional Airport&quot;' />
          <member value='&quot;Santa Barbara Municipal Airport&quot;' />
          <member value='&quot;Santa Fe Municipal Airport&quot;' />
          <member value='&quot;Sarasota Bradenton International Airport&quot;' />
          <member value='&quot;Savannah Hilton Head International Airport&quot;' />
          <member value='&quot;Sawyer International Airport&quot;' />
          <member value='&quot;Seattle Tacoma International Airport&quot;' />
          <member value='&quot;Sheppard Air Force Base-Wichita Falls Municipal Airport&quot;' />
          <member value='&quot;Shreveport Regional Airport&quot;' />
          <member value='&quot;Sioux Gateway Col. Bud Day Field&quot;' />
          <member value='&quot;Sitka Rocky Gutierrez Airport&quot;' />
          <member value='&quot;Sloulin Field International Airport&quot;' />
          <member value='&quot;South Bend Regional Airport&quot;' />
          <member value='&quot;Southeast Texas Regional Airport&quot;' />
          <member value='&quot;Southwest Florida International Airport&quot;' />
          <member value='&quot;Southwest Georgia Regional Airport&quot;' />
          <member value='&quot;Southwest Oregon Regional Airport&quot;' />
          <member value='&quot;Spokane International Airport&quot;' />
          <member value='&quot;Springfield Branson National Airport&quot;' />
          <member value='&quot;St George Municipal Airport&quot;' />
          <member value='&quot;Stewart International Airport&quot;' />
          <member value='&quot;Syracuse Hancock International Airport&quot;' />
          <member value='&quot;Tallahassee Regional Airport&quot;' />
          <member value='&quot;Tampa International Airport&quot;' />
          <member value='&quot;Ted Stevens Anchorage International Airport&quot;' />
          <member value='&quot;Texarkana Regional Webb Field&quot;' />
          <member value='&quot;The Eastern Iowa Airport&quot;' />
          <member value='&quot;Theodore Francis Green State Airport&quot;' />
          <member value='&quot;Toledo Express Airport&quot;' />
          <member value='&quot;Trenton Mercer Airport&quot;' />
          <member value='&quot;Tri Cities Airport&quot;' />
          <member value='&quot;Tri Cities Regional Tn Va Airport&quot;' />
          <member value='&quot;Tucson International Airport&quot;' />
          <member value='&quot;Tulsa International Airport&quot;' />
          <member value='&quot;Tyler Pounds Regional Airport&quot;' />
          <member value='&quot;University Park Airport&quot;' />
          <member value='&quot;Valdosta Regional Airport&quot;' />
          <member value='&quot;Valley International Airport&quot;' />
          <member value='&quot;Waco Regional Airport&quot;' />
          <member value='&quot;Washington Dulles International Airport&quot;' />
          <member value='&quot;Waterloo Regional Airport&quot;' />
          <member value='&quot;Westchester County Airport&quot;' />
          <member value='&quot;Wichita Mid Continent Airport&quot;' />
          <member value='&quot;Wiley Post Will Rogers Memorial Airport&quot;' />
          <member value='&quot;Wilkes Barre Scranton International Airport&quot;' />
          <member value='&quot;Will Rogers World Airport&quot;' />
          <member value='&quot;William P Hobby Airport&quot;' />
          <member value='&quot;Wilmington International Airport&quot;' />
          <member value='&quot;Worcester Regional Airport&quot;' />
          <member value='&quot;Wrangell Airport&quot;' />
          <member value='&quot;Yakutat Airport&quot;' />
          <member value='&quot;Yampa Valley Airport&quot;' />
          <member value='&quot;Yeager Airport&quot;' />
          <member value='&quot;Yellowstone Airport&quot;' />
          <member value='&quot;Yellowstone Regional Airport&quot;' />
          <member value='&quot;Yuma MCAS/Yuma International Airport&quot;' />
        </members>
      </column>
      <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
        <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        <members>
          <member value='&quot;ABE - Allentown/Bethlehem/Easton, PA (Lehigh Valley International Airport)&quot;' />
          <member value='&quot;ABI - Abilene, TX (Abilene Regional Airport)&quot;' />
          <member value='&quot;ABQ - Albuquerque, NM (Albuquerque International Sunport Airport)&quot;' />
          <member value='&quot;ABR - Aberdeen, SD (Aberdeen Regional Airport)&quot;' />
          <member value='&quot;ABY - Albany, GA (Southwest Georgia Regional Airport)&quot;' />
          <member value='&quot;ACK - Nantucket, MA (Nantucket Memorial Airport)&quot;' />
          <member value='&quot;ACT - Waco, TX (Waco Regional Airport)&quot;' />
          <member value='&quot;ACV - Arcata/Eureka, CA (Arcata Airport)&quot;' />
          <member value='&quot;ACY - Atlantic City, NJ (Atlantic City International Airport)&quot;' />
          <member value='&quot;ADK - Adak Island, AK (Adak Airport)&quot;' />
          <member value='&quot;ADQ - Kodiak, AK (Kodiak Airport)&quot;' />
          <member value='&quot;AEX - Alexandria, LA (Alexandria International Airport)&quot;' />
          <member value='&quot;AGS - Augusta, GA (Augusta Regional At Bush Field)&quot;' />
          <member value='&quot;AKN - King Salmon, AK (King Salmon Airport)&quot;' />
          <member value='&quot;ALB - Albany, NY (Albany International Airport)&quot;' />
          <member value='&quot;ALO - Waterloo, IA (Waterloo Regional Airport)&quot;' />
          <member value='&quot;AMA - Amarillo, TX (Rick Husband Amarillo International Airport)&quot;' />
          <member value='&quot;ANC - Anchorage, AK (Ted Stevens Anchorage International Airport)&quot;' />
          <member value='&quot;APN - Alpena, MI (Alpena County Regional Airport)&quot;' />
          <member value='&quot;ASE - Aspen, CO (Aspen-Pitkin Co/Sardy Field)&quot;' />
          <member value='&quot;ATL - Atlanta, GA (Hartsfield Jackson Atlanta International Airport)&quot;' />
          <member value='&quot;ATW - Appleton, WI (Appleton International Airport)&quot;' />
          <member value='&quot;AUS - Austin, TX (Austin Bergstrom International Airport)&quot;' />
          <member value='&quot;AVL - Asheville, NC (Asheville Regional Airport)&quot;' />
          <member value='&quot;AVP - Scranton/Wilkes-Barre, PA (Wilkes Barre Scranton International Airport)&quot;' />
          <member value='&quot;AZO - Kalamazoo, MI (Kalamazoo Battle Creek International Airport)&quot;' />
          <member value='&quot;BDL - Hartford, CT (Bradley International Airport)&quot;' />
          <member value='&quot;BET - Bethel, AK (Bethel Airport)&quot;' />
          <member value='&quot;BFL - Bakersfield, CA (Meadows Field)&quot;' />
          <member value='&quot;BGM - Binghamton, NY (Greater Binghamton/Edwin A Link field)&quot;' />
          <member value='&quot;BGR - Bangor, ME (Bangor International Airport)&quot;' />
          <member value='&quot;BHM - Birmingham, AL (Birmingham-Shuttlesworth International Airport)&quot;' />
          <member value='&quot;BIL - Billings, MT (Billings Logan International Airport)&quot;' />
          <member value='&quot;BIS - Bismarck/Mandan, ND (Bismarck Municipal Airport)&quot;' />
          <member value='&quot;BJI - Bemidji, MN (Bemidji Regional Airport)&quot;' />
          <member value='&quot;BLI - Bellingham, WA (Bellingham International Airport)&quot;' />
          <member value='&quot;BMI - Bloomington/Normal, IL (Central Illinois Regional Airport at Bloomington-Normal)&quot;' />
          <member value='&quot;BNA - Nashville, TN (Nashville International Airport)&quot;' />
          <member value='&quot;BOI - Boise, ID (Boise Air Terminal/Gowen field)&quot;' />
          <member value='&quot;BOS - Boston, MA (General Edward Lawrence Logan International Airport)&quot;' />
          <member value='&quot;BPT - Beaumont/Port Arthur, TX (Southeast Texas Regional Airport)&quot;' />
          <member value='&quot;BQK - Brunswick, GA (Brunswick Golden Isles Airport)&quot;' />
          <member value='&quot;BQN - Aguadilla, PR (Rafael Hernandez Airport)&quot;' />
          <member value='&quot;BRD - Brainerd, MN (Brainerd Lakes Regional Airport)&quot;' />
          <member value='&quot;BRO - Brownsville, TX (Brownsville South Padre Island International Airport)&quot;' />
          <member value='&quot;BRW - Barrow, AK (Wiley Post Will Rogers Memorial Airport)&quot;' />
          <member value='&quot;BTM - Butte, MT (Bert Mooney Airport)&quot;' />
          <member value='&quot;BTR - Baton Rouge, LA (Baton Rouge Metropolitan, Ryan Field)&quot;' />
          <member value='&quot;BTV - Burlington, VT (Burlington International Airport)&quot;' />
          <member value='&quot;BUF - Buffalo, NY (Buffalo Niagara International Airport)&quot;' />
          <member value='&quot;BUR - Burbank, CA (Bob Hope Airport)&quot;' />
          <member value='&quot;BWI - Baltimore, MD (Baltimore/Washington International Thurgood Marshall Airport)&quot;' />
          <member value='&quot;BZN - Bozeman, MT (Gallatin Field)&quot;' />
          <member value='&quot;CAE - Columbia, SC (Columbia Metropolitan Airport)&quot;' />
          <member value='&quot;CAK - Akron, OH (Akron Canton Regional Airport)&quot;' />
          <member value='&quot;CDC - Cedar City, UT (Cedar City Regional Airport)&quot;' />
          <member value='&quot;CDV - Cordova, AK (Merle K (Mudhole) Smith Airport)&quot;' />
          <member value='&quot;CGI - Cape Girardeau, MO (Cape Girardeau Regional Airport)&quot;' />
          <member value='&quot;CHA - Chattanooga, TN (Lovell Field)&quot;' />
          <member value='&quot;CHO - Charlottesville, VA (Charlottesville Albemarle Airport)&quot;' />
          <member value='&quot;CHS - Charleston, SC (Charleston Air Force Base-International Airport)&quot;' />
          <member value='&quot;CID - Cedar Rapids/Iowa City, IA (The Eastern Iowa Airport)&quot;' />
          <member value='&quot;CIU - Sault Ste. Marie, MI (Chippewa County International Airport)&quot;' />
          <member value='&quot;CKB - Clarksburg/Fairmont, WV (North Central West Virginia Airport)&quot;' />
          <member value='&quot;CLE - Cleveland, OH (Cleveland Hopkins International Airport)&quot;' />
          <member value='&quot;CLL - College Station/Bryan, TX (Easterwood Field)&quot;' />
          <member value='&quot;CLT - Charlotte, NC (Charlotte Douglas International Airport)&quot;' />
          <member value='&quot;CMH - Columbus, OH (Port Columbus International Airport)&quot;' />
          <member value='&quot;CMX - Hancock/Houghton, MI (Houghton County Memorial Airport)&quot;' />
          <member value='&quot;COD - Cody, WY (Yellowstone Regional Airport)&quot;' />
          <member value='&quot;COS - Colorado Springs, CO (City of Colorado Springs Municipal Airport)&quot;' />
          <member value='&quot;COU - Columbia, MO (Columbia Regional Airport)&quot;' />
          <member value='&quot;CPR - Casper, WY (Casper-Natrona County International Airport)&quot;' />
          <member value='&quot;CRP - Corpus Christi, TX (Corpus Christi International Airport)&quot;' />
          <member value='&quot;CRW - Charleston/Dunbar, WV (Yeager Airport)&quot;' />
          <member value='&quot;CSG - Columbus, GA (Columbus Metropolitan Airport)&quot;' />
          <member value='&quot;CVG - Cincinnati, OH (Cincinnati Northern Kentucky International Airport)&quot;' />
          <member value='&quot;CWA - Mosinee, WI (Central Wisconsin Airport)&quot;' />
          <member value='&quot;DAB - Daytona Beach, FL (Daytona Beach International Airport)&quot;' />
          <member value='&quot;DAL - Dallas, TX (Dallas Love Field)&quot;' />
          <member value='&quot;DAY - Dayton, OH (James M Cox Dayton International Airport)&quot;' />
          <member value='&quot;DCA - Washington, DC (Ronald Reagan Washington National Airport)&quot;' />
          <member value='&quot;DEN - Denver, CO (Denver International Airport)&quot;' />
          <member value='&quot;DFW - Dallas/Fort Worth, TX (Dallas Fort Worth International Airport)&quot;' />
          <member value='&quot;DHN - Dothan, AL (Dothan Regional Airport)&quot;' />
          <member value='&quot;DLG - Dillingham, AK (Dillingham Airport)&quot;' />
          <member value='&quot;DLH - Duluth, MN (Duluth International Airport)&quot;' />
          <member value='&quot;DRO - Durango, CO (Durango La Plata County Airport)&quot;' />
          <member value='&quot;DSM - Des Moines, IA (Des Moines International Airport)&quot;' />
          <member value='&quot;DTW - Detroit, MI (Detroit Metropolitan Wayne County Airport)&quot;' />
          <member value='&quot;DVL - Devils Lake, ND (Devils Lake Regional Airport)&quot;' />
          <member value='&quot;EAU - Eau Claire, WI (Chippewa Valley Regional Airport)&quot;' />
          <member value='&quot;ECP - Panama City, FL (Northwest Florida Beaches International Airport)&quot;' />
          <member value='&quot;EGE - Eagle, CO (Eagle County Regional Airport)&quot;' />
          <member value='&quot;EKO - Elko, NV (Elko Regional Airport)&quot;' />
          <member value='&quot;ELM - Elmira/Corning, NY (Elmira Corning Regional Airport)&quot;' />
          <member value='&quot;ELP - El Paso, TX (El Paso International Airport)&quot;' />
          <member value='&quot;ERI - Erie, PA (Erie International Tom Ridge Field)&quot;' />
          <member value='&quot;ESC - Escanaba, MI (Delta County Airport)&quot;' />
          <member value='&quot;EUG - Eugene, OR (Mahlon Sweet Field)&quot;' />
          <member value='&quot;EVV - Evansville, IN (Evansville Regional Airport)&quot;' />
          <member value='&quot;EWN - New Bern/Morehead/Beaufort, NC (Coastal Carolina Regional Airport)&quot;' />
          <member value='&quot;EWR - Newark, NJ (Newark Liberty International Airport)&quot;' />
          <member value='&quot;EYW - Key West, FL (Key West International Airport)&quot;' />
          <member value='&quot;FAI - Fairbanks, AK (Fairbanks International Airport)&quot;' />
          <member value='&quot;FAR - Fargo, ND (Hector International Airport)&quot;' />
          <member value='&quot;FAT - Fresno, CA (Fresno Yosemite International Airport)&quot;' />
          <member value='&quot;FAY - Fayetteville, NC (Fayetteville Regional Grannis Field)&quot;' />
          <member value='&quot;FCA - Kalispell, MT (Glacier Park International Airport)&quot;' />
          <member value='&quot;FLG - Flagstaff, AZ (Flagstaff Pulliam Airport)&quot;' />
          <member value='&quot;FLL - Fort Lauderdale, FL (Fort Lauderdale Hollywood International Airport)&quot;' />
          <member value='&quot;FNL - Fort Collins/Loveland, CO (Fort Collins Loveland Municipal Airport)&quot;' />
          <member value='&quot;FNT - Flint, MI (Bishop International Airport)&quot;' />
          <member value='&quot;FSD - Sioux Falls, SD (Joe Foss Field Airport)&quot;' />
          <member value='&quot;FSM - Fort Smith, AR (Fort Smith Regional Airport)&quot;' />
          <member value='&quot;FWA - Fort Wayne, IN (Fort Wayne International Airport)&quot;' />
          <member value='&quot;GCC - Gillette, WY (Gillette Campbell County Airport)&quot;' />
          <member value='&quot;GCK - Garden City, KS (Garden City Regional Airport)&quot;' />
          <member value='&quot;GEG - Spokane, WA (Spokane International Airport)&quot;' />
          <member value='&quot;GFK - Grand Forks, ND (Grand Forks International Airport)&quot;' />
          <member value='&quot;GGG - Longview, TX (East Texas Regional Airport)&quot;' />
          <member value='&quot;GJT - Grand Junction, CO (Grand Junction Regional Airport)&quot;' />
          <member value='&quot;GNV - Gainesville, FL (Gainesville Regional Airport)&quot;' />
          <member value='&quot;GPT - Gulfport/Biloxi, MS (Gulfport Biloxi International Airport)&quot;' />
          <member value='&quot;GRB - Green Bay, WI (Austin Straubel International Airport)&quot;' />
          <member value='&quot;GRI - Grand Island, NE (Central Nebraska Regional Airport)&quot;' />
          <member value='&quot;GRK - Killeen, TX (Robert Gray  Army Air Field Airport)&quot;' />
          <member value='&quot;GRR - Grand Rapids, MI (Gerald R. Ford International Airport)&quot;' />
          <member value='&quot;GSO - Greensboro/High Point, NC (Piedmont Triad International Airport)&quot;' />
          <member value='&quot;GSP - Greer, SC (Greenville Spartanburg International Airport)&quot;' />
          <member value='&quot;GST - Gustavus, AK (Gustavus Airport)&quot;' />
          <member value='&quot;GTF - Great Falls, MT (Great Falls International Airport)&quot;' />
          <member value='&quot;GTR - Columbus, MS (Golden Triangle Regional Airport)&quot;' />
          <member value='&quot;GUC - Gunnison, CO (Gunnison Crested Butte Regional Airport)&quot;' />
          <member value='&quot;GUM - Guam, TT (Antonio B. Won Pat International Airport)&quot;' />
          <member value='&quot;HDN - Hayden, CO (Yampa Valley Airport)&quot;' />
          <member value='&quot;HIB - Hibbing, MN (Range Regional Airport)&quot;' />
          <member value='&quot;HLN - Helena, MT (Helena Regional Airport)&quot;' />
          <member value='&quot;HNL - Honolulu, HI (Honolulu International Airport)&quot;' />
          <member value='&quot;HOB - Hobbs, NM (Lea County Regional Airport)&quot;' />
          <member value='&quot;HOU - Houston, TX (William P Hobby Airport)&quot;' />
          <member value='&quot;HPN - White Plains, NY (Westchester County Airport)&quot;' />
          <member value='&quot;HRL - Harlingen/San Benito, TX (Valley International Airport)&quot;' />
          <member value='&quot;HSV - Huntsville, AL (Huntsville International Carl T Jones Field)&quot;' />
          <member value='&quot;HYA - Hyannis, MA (Barnstable Municipal Boardman Polando Field)&quot;' />
          <member value='&quot;HYS - Hays, KS (Hays Regional Airport)&quot;' />
          <member value='&quot;IAD - Washington, DC (Washington Dulles International Airport)&quot;' />
          <member value='&quot;IAG - Niagara Falls, NY (Niagara Falls International Airport)&quot;' />
          <member value='&quot;IAH - Houston, TX (George Bush Intercontinental Houston Airport)&quot;' />
          <member value='&quot;ICT - Wichita, KS (Wichita Mid Continent Airport)&quot;' />
          <member value='&quot;IDA - Idaho Falls, ID (Idaho Falls Regional Airport)&quot;' />
          <member value='&quot;ILM - Wilmington, NC (Wilmington International Airport)&quot;' />
          <member value='&quot;IMT - Iron Mountain/Kingsfd, MI (Ford Airport)&quot;' />
          <member value='&quot;IND - Indianapolis, IN (Indianapolis International Airport)&quot;' />
          <member value='&quot;INL - International Falls, MN (Falls International Airport)&quot;' />
          <member value='&quot;ISN - Williston, ND (Sloulin Field International Airport)&quot;' />
          <member value='&quot;ISP - Islip, NY (Long Island Mac Arthur Airport)&quot;' />
          <member value='&quot;ITH - Ithaca/Cortland, NY (Ithaca Tompkins Regional Airport)&quot;' />
          <member value='&quot;ITO - Hilo, HI (Hilo International Airport)&quot;' />
          <member value='&quot;JAC - Jackson, WY (Jackson Hole Airport)&quot;' />
          <member value='&quot;JAN - Jackson/Vicksburg, MS (Jackson-Medgar Wiley Evers International Airport)&quot;' />
          <member value='&quot;JAX - Jacksonville, FL (Jacksonville International Airport)&quot;' />
          <member value='&quot;JFK - New York, NY (John F Kennedy International Airport)&quot;' />
          <member value='&quot;JLN - Joplin, MO (Joplin Regional Airport)&quot;' />
          <member value='&quot;JMS - Jamestown, ND (Jamestown Regional Airport)&quot;' />
          <member value='&quot;JNU - Juneau, AK (Juneau International Airport)&quot;' />
          <member value='&quot;KOA - Kona, HI (Kona International At Keahole Airport)&quot;' />
          <member value='&quot;KTN - Ketchikan, AK (Ketchikan International Airport)&quot;' />
          <member value='&quot;LAN - Lansing, MI (Capital City Airport)&quot;' />
          <member value='&quot;LAR - Laramie, WY (Laramie Regional Airport)&quot;' />
          <member value='&quot;LAS - Las Vegas, NV (McCarran International Airport)&quot;' />
          <member value='&quot;LAW - Lawton/Fort Sill, OK (Lawton Fort Sill Regional Airport)&quot;' />
          <member value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
          <member value='&quot;LBB - Lubbock, TX (Lubbock Preston Smith International Airport)&quot;' />
          <member value='&quot;LBE - Latrobe, PA (Arnold Palmer Regional Airport)&quot;' />
          <member value='&quot;LCH - Lake Charles, LA (Lake Charles Regional Airport)&quot;' />
          <member value='&quot;LEX - Lexington, KY (Blue Grass Airport)&quot;' />
          <member value='&quot;LFT - Lafayette, LA (Lafayette Regional Airport)&quot;' />
          <member value='&quot;LGA - New York, NY (La Guardia Airport)&quot;' />
          <member value='&quot;LGB - Long Beach, CA (Long Beach /Daugherty Field/ Airport)&quot;' />
          <member value='&quot;LIH - Lihue, HI (Lihue Airport)&quot;' />
          <member value='&quot;LIT - Little Rock, AR (Bill &amp; Hillary Clinton National Airport/Adams Field)&quot;' />
          <member value='&quot;LNK - Lincoln, NE (Lincoln Airport)&quot;' />
          <member value='&quot;LRD - Laredo, TX (Laredo International Airport)&quot;' />
          <member value='&quot;LSE - La Crosse, WI (La Crosse Municipal Airport)&quot;' />
          <member value='&quot;LWS - Lewiston, ID (Lewiston Nez Perce County Airport)&quot;' />
          <member value='&quot;MAF - Midland/Odessa, TX (Midland International Airport)&quot;' />
          <member value='&quot;MBS - Saginaw/Bay City/Midland, MI (MBS International Airport)&quot;' />
          <member value='&quot;MCI - Kansas City, MO (Kansas City International Airport)&quot;' />
          <member value='&quot;MCO - Orlando, FL (Orlando International Airport)&quot;' />
          <member value='&quot;MDT - Harrisburg, PA (Harrisburg International Airport)&quot;' />
          <member value='&quot;MDW - Chicago, IL (Chicago Midway International Airport)&quot;' />
          <member value='&quot;MEI - Meridian, MS (Key Field)&quot;' />
          <member value='&quot;MEM - Memphis, TN (Memphis International Airport)&quot;' />
          <member value='&quot;MFE - Mission/McAllen/Edinburg, TX (Mc Allen Miller International Airport)&quot;' />
          <member value='&quot;MFR - Medford, OR (Rogue Valley International Medford Airport)&quot;' />
          <member value='&quot;MGM - Montgomery, AL (Montgomery Regional (Dannelly Field) Airport)&quot;' />
          <member value='&quot;MHK - Manhattan/Ft. Riley, KS (Manhattan Regional Airport)&quot;' />
          <member value='&quot;MHT - Manchester, NH (Manchester Airport)&quot;' />
          <member value='&quot;MIA - Miami, FL (Miami International Airport)&quot;' />
          <member value='&quot;MKE - Milwaukee, WI (General Mitchell International Airport)&quot;' />
          <member value='&quot;MKG - Muskegon, MI (Muskegon County Airport)&quot;' />
          <member value='&quot;MLB - Melbourne, FL (Melbourne International Airport)&quot;' />
          <member value='&quot;MLI - Moline, IL (Quad City International Airport)&quot;' />
          <member value='&quot;MLU - Monroe, LA (Monroe Regional Airport)&quot;' />
          <member value='&quot;MMH - Mammoth Lakes, CA (Mammoth Yosemite Airport)&quot;' />
          <member value='&quot;MOB - Mobile, AL (Mobile Regional Airport)&quot;' />
          <member value='&quot;MOT - Minot, ND (Minot International Airport)&quot;' />
          <member value='&quot;MQT - Marquette, MI (Sawyer International Airport)&quot;' />
          <member value='&quot;MRY - Monterey, CA (Monterey Peninsula Airport)&quot;' />
          <member value='&quot;MSN - Madison, WI (Dane County Regional Truax Field)&quot;' />
          <member value='&quot;MSO - Missoula, MT (Missoula International Airport)&quot;' />
          <member value='&quot;MSP - Minneapolis, MN (Minneapolis-St Paul International/Wold-Chamberlain Airport)&quot;' />
          <member value='&quot;MSY - New Orleans, LA (Louis Armstrong New Orleans International Airport)&quot;' />
          <member value='&quot;MTJ - Montrose/Delta, CO (Montrose Regional Airport)&quot;' />
          <member value='&quot;MVY - Martha&apos;s Vineyard, MA (Martha&apos;s Vineyard Airport)&quot;' />
          <member value='&quot;MYR - Myrtle Beach, SC (Myrtle Beach International Airport)&quot;' />
          <member value='&quot;OAJ - Jacksonville/Camp Lejeune, NC (Albert J Ellis Airport)&quot;' />
          <member value='&quot;OAK - Oakland, CA (Metropolitan Oakland International Airport)&quot;' />
          <member value='&quot;OGG - Kahului, HI (Kahului Airport)&quot;' />
          <member value='&quot;OKC - Oklahoma City, OK (Will Rogers World Airport)&quot;' />
          <member value='&quot;OMA - Omaha, NE (Eppley Airfield)&quot;' />
          <member value='&quot;OME - Nome, AK (Nome Airport)&quot;' />
          <member value='&quot;ONT - Ontario, CA (Ontario International Airport)&quot;' />
          <member value='&quot;ORD - Chicago, IL (Chicago O&apos;Hare International Airport)&quot;' />
          <member value='&quot;ORF - Norfolk, VA (Norfolk International Airport)&quot;' />
          <member value='&quot;ORH - Worcester, MA (Worcester Regional Airport)&quot;' />
          <member value='&quot;OTH - North Bend/Coos Bay, OR (Southwest Oregon Regional Airport)&quot;' />
          <member value='&quot;OTZ - Kotzebue, AK (Ralph Wien Memorial Airport)&quot;' />
          <member value='&quot;PAH - Paducah, KY (Barkley Regional Airport)&quot;' />
          <member value='&quot;PBG - Plattsburgh, NY (Plattsburgh International Airport)&quot;' />
          <member value='&quot;PBI - West Palm Beach/Palm Beach, FL (Palm Beach International Airport)&quot;' />
          <member value='&quot;PDX - Portland, OR (Portland International Airport)&quot;' />
          <member value='&quot;PGD - Punta Gorda, FL (Charlotte County Airport)&quot;' />
          <member value='&quot;PHF - Newport News/Williamsburg, VA (Newport News Williamsburg International Airport)&quot;' />
          <member value='&quot;PHL - Philadelphia, PA (Philadelphia International Airport)&quot;' />
          <member value='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' />
          <member value='&quot;PIA - Peoria, IL (General Wayne A. Downing Peoria International Airport)&quot;' />
          <member value='&quot;PIB - Hattiesburg/Laurel, MS (Hattiesburg Laurel Regional Airport)&quot;' />
          <member value='&quot;PIH - Pocatello, ID (Pocatello Regional Airport)&quot;' />
          <member value='&quot;PIT - Pittsburgh, PA (Pittsburgh International Airport)&quot;' />
          <member value='&quot;PLN - Pellston, MI (Pellston Regional Airport of Emmet County Airport)&quot;' />
          <member value='&quot;PNS - Pensacola, FL (Pensacola Regional Airport)&quot;' />
          <member value='&quot;PPG - Pago Pago, TT (Pago Pago International Airport)&quot;' />
          <member value='&quot;PSC - Pasco/Kennewick/Richland, WA (Tri Cities Airport)&quot;' />
          <member value='&quot;PSE - Ponce, PR (Mercedita Airport)&quot;' />
          <member value='&quot;PSG - Petersburg, AK (Petersburg James A Johnson Airport)&quot;' />
          <member value='&quot;PSP - Palm Springs, CA (Palm Springs International Airport)&quot;' />
          <member value='&quot;PUB - Pueblo, CO (Pueblo Memorial Airport)&quot;' />
          <member value='&quot;PVD - Providence, RI (Theodore Francis Green State Airport)&quot;' />
          <member value='&quot;PWM - Portland, ME (Portland International Jetport Airport)&quot;' />
          <member value='&quot;RAP - Rapid City, SD (Rapid City Regional Airport)&quot;' />
          <member value='&quot;RDD - Redding, CA (Redding Municipal Airport)&quot;' />
          <member value='&quot;RDM - Bend/Redmond, OR (Roberts Field)&quot;' />
          <member value='&quot;RDU - Raleigh/Durham, NC (Raleigh Durham International Airport)&quot;' />
          <member value='&quot;RHI - Rhinelander, WI (Rhinelander Oneida County Airport)&quot;' />
          <member value='&quot;RIC - Richmond, VA (Richmond International Airport)&quot;' />
          <member value='&quot;RKS - Rock Springs, WY (Rock Springs Sweetwater County Airport)&quot;' />
          <member value='&quot;RNO - Reno, NV (Reno Tahoe International Airport)&quot;' />
          <member value='&quot;ROA - Roanoke, VA (Roanoke–Blacksburg Regional Airport)&quot;' />
          <member value='&quot;ROC - Rochester, NY (Greater Rochester International Airport)&quot;' />
          <member value='&quot;ROW - Roswell, NM (Roswell International Air Center Airport)&quot;' />
          <member value='&quot;RST - Rochester, MN (Rochester International Airport)&quot;' />
          <member value='&quot;RSW - Fort Myers, FL (Southwest Florida International Airport)&quot;' />
          <member value='&quot;SAF - Santa Fe, NM (Santa Fe Municipal Airport)&quot;' />
          <member value='&quot;SAN - San Diego, CA (San Diego International Airport)&quot;' />
          <member value='&quot;SAT - San Antonio, TX (San Antonio International Airport)&quot;' />
          <member value='&quot;SAV - Savannah, GA (Savannah Hilton Head International Airport)&quot;' />
          <member value='&quot;SBA - Santa Barbara, CA (Santa Barbara Municipal Airport)&quot;' />
          <member value='&quot;SBN - South Bend, IN (South Bend Regional Airport)&quot;' />
          <member value='&quot;SBP - San Luis Obispo, CA (San Luis County Regional Airport)&quot;' />
          <member value='&quot;SCC - Deadhorse, AK (Deadhorse Airport)&quot;' />
          <member value='&quot;SCE - State College, PA (University Park Airport)&quot;' />
          <member value='&quot;SDF - Louisville, KY (Louisville International Standiford Field)&quot;' />
          <member value='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' />
          <member value='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' />
          <member value='&quot;SGF - Springfield, MO (Springfield Branson National Airport)&quot;' />
          <member value='&quot;SGU - St. George, UT (St George Municipal Airport)&quot;' />
          <member value='&quot;SHV - Shreveport, LA (Shreveport Regional Airport)&quot;' />
          <member value='&quot;SIT - Sitka, AK (Sitka Rocky Gutierrez Airport)&quot;' />
          <member value='&quot;SJC - San Jose, CA (Norman Y. Mineta San Jose International Airport)&quot;' />
          <member value='&quot;SJT - San Angelo, TX (San Angelo Regional Mathis Field)&quot;' />
          <member value='&quot;SJU - San Juan, PR (Luis Munoz Marin International Airport)&quot;' />
          <member value='&quot;SLC - Salt Lake City, UT (Salt Lake City International Airport)&quot;' />
          <member value='&quot;SMF - Sacramento, CA (Sacramento International Airport)&quot;' />
          <member value='&quot;SNA - Santa Ana, CA (John Wayne Airport-Orange County Airport)&quot;' />
          <member value='&quot;SPI - Springfield, IL (Abraham Lincoln Capital Airport)&quot;' />
          <member value='&quot;SPS - Wichita Falls, TX (Sheppard Air Force Base-Wichita Falls Municipal Airport)&quot;' />
          <member value='&quot;SRQ - Sarasota/Bradenton, FL (Sarasota Bradenton International Airport)&quot;' />
          <member value='&quot;STL - St. Louis, MO (Lambert St Louis International Airport)&quot;' />
          <member value='&quot;STS - Santa Rosa, CA (Charles M. Schulz Sonoma County Airport)&quot;' />
          <member value='&quot;STT - Charlotte Amalie, VI (Cyril E. King Airport)&quot;' />
          <member value='&quot;STX - Christiansted, VI (Henry E Rohlsen Airport)&quot;' />
          <member value='&quot;SUN - Sun Valley/Hailey/Ketchum, ID (Friedman Memorial Airport)&quot;' />
          <member value='&quot;SUX - Sioux City, IA (Sioux Gateway Col. Bud Day Field)&quot;' />
          <member value='&quot;SWF - Newburgh/Poughkeepsie, NY (Stewart International Airport)&quot;' />
          <member value='&quot;SYR - Syracuse, NY (Syracuse Hancock International Airport)&quot;' />
          <member value='&quot;TLH - Tallahassee, FL (Tallahassee Regional Airport)&quot;' />
          <member value='&quot;TOL - Toledo, OH (Toledo Express Airport)&quot;' />
          <member value='&quot;TPA - Tampa, FL (Tampa International Airport)&quot;' />
          <member value='&quot;TRI - Bristol/Johnson City/Kingsport, TN (Tri Cities Regional Tn Va Airport)&quot;' />
          <member value='&quot;TTN - Trenton, NJ (Trenton Mercer Airport)&quot;' />
          <member value='&quot;TUL - Tulsa, OK (Tulsa International Airport)&quot;' />
          <member value='&quot;TUS - Tucson, AZ (Tucson International Airport)&quot;' />
          <member value='&quot;TVC - Traverse City, MI (Cherry Capital Airport)&quot;' />
          <member value='&quot;TWF - Twin Falls, ID (Joslin Field Magic Valley Regional Airport)&quot;' />
          <member value='&quot;TXK - Texarkana, AR (Texarkana Regional Webb Field)&quot;' />
          <member value='&quot;TYR - Tyler, TX (Tyler Pounds Regional Airport)&quot;' />
          <member value='&quot;TYS - Knoxville, TN (McGhee Tyson Airport)&quot;' />
          <member value='&quot;UIN - Quincy, IL (Quincy Regional Baldwin Field)&quot;' />
          <member value='&quot;UST - St. Augustine, FL (Northeast Florida Regional Airport)&quot;' />
          <member value='&quot;VLD - Valdosta, GA (Valdosta Regional Airport)&quot;' />
          <member value='&quot;VPS - Valparaiso, FL (Destin-Ft Walton Beach Airport)&quot;' />
          <member value='&quot;WRG - Wrangell, AK (Wrangell Airport)&quot;' />
          <member value='&quot;WYS - West Yellowstone, MT (Yellowstone Airport)&quot;' />
          <member value='&quot;XNA - Fayetteville, AR (Northwest Arkansas Regional Airport)&quot;' />
          <member value='&quot;YAK - Yakutat, AK (Yakutat Airport)&quot;' />
          <member value='&quot;YUM - Yuma, AZ (Yuma MCAS/Yuma International Airport)&quot;' />
        </members>
      </column>
      <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
        <calculation class='tableau' formula='100.0' />
        <range granularity='5.0' max='200.0' min='0.0' />
      </column>
      <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
        <calculation class='tableau' formula='&quot;Departure&quot;' />
        <members>
          <member value='&quot;Arrival&quot;' />
          <member value='&quot;Departure&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Airport Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meadows Field&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mercedita Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Central West Virginia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle Tacoma International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampa International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tri Cities Airport&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Wichita Mid Continent Airport&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South Bend Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Springfield Branson National Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Pounds Regional Airport&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;The Eastern Iowa Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane International Airport&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Theodore Francis Green State Airport&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='airport_delays' inline='true' name='federated.0pfv4211ega3oh17lckf50a9x4eu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airport_delays' name='textscan.1mz03xn162phb810hklkc1o1bxv0'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='airport_delays.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1mz03xn162phb810hklkc1o1bxv0' name='airport_delays.csv' table='[airport_delays#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airport' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='string' name='Carrier' ordinal='5' />
            <column datatype='string' name='FlightDateDay' ordinal='6' />
            <column datatype='real' name='Hour' ordinal='7' />
            <column datatype='real' name='DepartureDelay' ordinal='8' />
            <column datatype='real' name='ArrivalDelay' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDateDay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FlightDateDay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>FlightDateDay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
      <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
      <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
      <column caption='Flight Date Day' datatype='string' name='[FlightDateDay]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Sum' name='[sum:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Airport)' hidden='true' name='[Action (Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Airport]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/airport_delays.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/10/2018 12:13:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='165091' timestamp-start='2018-08-10 00:13:45.543' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport</remote-alias>
              <ordinal>0</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>5</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDateDay</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FlightDateDay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDateDay</remote-alias>
              <ordinal>6</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>7</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>8</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>9</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1328</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.29868' measure-ordering='alphabetic' measure-percentage='0.506601' parameter-percentage='0.194719' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>2</bucket>
            </map>
            <map to='asterisk'>
              <bucket>92</bucket>
            </map>
            <map to='asterisk'>
              <bucket>130</bucket>
            </map>
            <map to='asterisk'>
              <bucket>168</bucket>
            </map>
            <map to='asterisk'>
              <bucket>218</bucket>
            </map>
            <map to='asterisk'>
              <bucket>254</bucket>
            </map>
            <map to='asterisk'>
              <bucket>300</bucket>
            </map>
            <map to='asterisk'>
              <bucket>352</bucket>
            </map>
            <map to='asterisk'>
              <bucket>398</bucket>
            </map>
            <map to='asterisk'>
              <bucket>436</bucket>
            </map>
            <map to='asterisk'>
              <bucket>474</bucket>
            </map>
            <map to='asterisk'>
              <bucket>554</bucket>
            </map>
            <map to='asterisk'>
              <bucket>606</bucket>
            </map>
            <map to='asterisk'>
              <bucket>690</bucket>
            </map>
            <map to='asterisk'>
              <bucket>758</bucket>
            </map>
            <map to='asterisk'>
              <bucket>844</bucket>
            </map>
            <map to='asterisk'>
              <bucket>916</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1076</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1382</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1564</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1842</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2092</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2336</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2692</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2940</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3212</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3480</bucket>
            </map>
            <map to='circle'>
              <bucket>70</bucket>
            </map>
            <map to='circle'>
              <bucket>112</bucket>
            </map>
            <map to='circle'>
              <bucket>146</bucket>
            </map>
            <map to='circle'>
              <bucket>208</bucket>
            </map>
            <map to='circle'>
              <bucket>238</bucket>
            </map>
            <map to='circle'>
              <bucket>278</bucket>
            </map>
            <map to='circle'>
              <bucket>336</bucket>
            </map>
            <map to='circle'>
              <bucket>376</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='circle'>
              <bucket>422</bucket>
            </map>
            <map to='circle'>
              <bucket>456</bucket>
            </map>
            <map to='circle'>
              <bucket>530</bucket>
            </map>
            <map to='circle'>
              <bucket>584</bucket>
            </map>
            <map to='circle'>
              <bucket>680</bucket>
            </map>
            <map to='circle'>
              <bucket>730</bucket>
            </map>
            <map to='circle'>
              <bucket>824</bucket>
            </map>
            <map to='circle'>
              <bucket>894</bucket>
            </map>
            <map to='circle'>
              <bucket>1020</bucket>
            </map>
            <map to='circle'>
              <bucket>1268</bucket>
            </map>
            <map to='circle'>
              <bucket>1490</bucket>
            </map>
            <map to='circle'>
              <bucket>1706</bucket>
            </map>
            <map to='circle'>
              <bucket>2040</bucket>
            </map>
            <map to='circle'>
              <bucket>2170</bucket>
            </map>
            <map to='circle'>
              <bucket>2574</bucket>
            </map>
            <map to='circle'>
              <bucket>2818</bucket>
            </map>
            <map to='circle'>
              <bucket>3162</bucket>
            </map>
            <map to='circle'>
              <bucket>3426</bucket>
            </map>
            <map to='circle'>
              <bucket>3774</bucket>
            </map>
            <map to='diamond'>
              <bucket>14</bucket>
            </map>
            <map to='diamond'>
              <bucket>96</bucket>
            </map>
            <map to='diamond'>
              <bucket>136</bucket>
            </map>
            <map to='diamond'>
              <bucket>172</bucket>
            </map>
            <map to='diamond'>
              <bucket>220</bucket>
            </map>
            <map to='diamond'>
              <bucket>262</bucket>
            </map>
            <map to='diamond'>
              <bucket>302</bucket>
            </map>
            <map to='diamond'>
              <bucket>358</bucket>
            </map>
            <map to='diamond'>
              <bucket>400</bucket>
            </map>
            <map to='diamond'>
              <bucket>444</bucket>
            </map>
            <map to='diamond'>
              <bucket>478</bucket>
            </map>
            <map to='diamond'>
              <bucket>558</bucket>
            </map>
            <map to='diamond'>
              <bucket>607</bucket>
            </map>
            <map to='diamond'>
              <bucket>692</bucket>
            </map>
            <map to='diamond'>
              <bucket>762</bucket>
            </map>
            <map to='diamond'>
              <bucket>846</bucket>
            </map>
            <map to='diamond'>
              <bucket>950</bucket>
            </map>
            <map to='diamond'>
              <bucket>1106</bucket>
            </map>
            <map to='diamond'>
              <bucket>1386</bucket>
            </map>
            <map to='diamond'>
              <bucket>1568</bucket>
            </map>
            <map to='diamond'>
              <bucket>1858</bucket>
            </map>
            <map to='diamond'>
              <bucket>2108</bucket>
            </map>
            <map to='diamond'>
              <bucket>2362</bucket>
            </map>
            <map to='diamond'>
              <bucket>2710</bucket>
            </map>
            <map to='diamond'>
              <bucket>3034</bucket>
            </map>
            <map to='diamond'>
              <bucket>3308</bucket>
            </map>
            <map to='diamond'>
              <bucket>3518</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>36</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>46</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>104</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>140</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>194</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>224</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>266</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>314</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>366</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>410</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>450</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>492</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>570</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>710</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>786</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>868</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>988</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1152</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1436</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1582</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1892</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2122</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2400</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2788</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3050</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3332</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3562</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>38</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>56</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>108</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>142</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>200</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>226</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>268</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>324</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>368</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>414</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>452</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>494</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>574</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>662</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>714</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>812</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>880</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>996</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1162</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1446</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1592</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1994</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2150</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2410</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2794</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3140</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3704</bucket>
            </map>
            <map to='plus'>
              <bucket>76</bucket>
            </map>
            <map to='plus'>
              <bucket>122</bucket>
            </map>
            <map to='plus'>
              <bucket>164</bucket>
            </map>
            <map to='plus'>
              <bucket>214</bucket>
            </map>
            <map to='plus'>
              <bucket>250</bucket>
            </map>
            <map to='plus'>
              <bucket>292</bucket>
            </map>
            <map to='plus'>
              <bucket>344</bucket>
            </map>
            <map to='plus'>
              <bucket>382</bucket>
            </map>
            <map to='plus'>
              <bucket>430</bucket>
            </map>
            <map to='plus'>
              <bucket>466</bucket>
            </map>
            <map to='plus'>
              <bucket>548</bucket>
            </map>
            <map to='plus'>
              <bucket>590</bucket>
            </map>
            <map to='plus'>
              <bucket>684</bucket>
            </map>
            <map to='plus'>
              <bucket>742</bucket>
            </map>
            <map to='plus'>
              <bucket>834</bucket>
            </map>
            <map to='plus'>
              <bucket>908</bucket>
            </map>
            <map to='plus'>
              <bucket>1054</bucket>
            </map>
            <map to='plus'>
              <bucket>1344</bucket>
            </map>
            <map to='plus'>
              <bucket>1544</bucket>
            </map>
            <map to='plus'>
              <bucket>1770</bucket>
            </map>
            <map to='plus'>
              <bucket>2066</bucket>
            </map>
            <map to='plus'>
              <bucket>2202</bucket>
            </map>
            <map to='plus'>
              <bucket>2628</bucket>
            </map>
            <map to='plus'>
              <bucket>2894</bucket>
            </map>
            <map to='plus'>
              <bucket>3172</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='plus'>
              <bucket>3474</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>42</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>66</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>110</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>144</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>206</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>232</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>274</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>330</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>370</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>418</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>454</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>582</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>724</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>814</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>884</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1014</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1234</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1488</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2024</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2166</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2796</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3154</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3390</bucket>
            </map>
            <map to='square'>
              <bucket>74</bucket>
            </map>
            <map to='square'>
              <bucket>118</bucket>
            </map>
            <map to='square'>
              <bucket>154</bucket>
            </map>
            <map to='square'>
              <bucket>212</bucket>
            </map>
            <map to='square'>
              <bucket>242</bucket>
            </map>
            <map to='square'>
              <bucket>290</bucket>
            </map>
            <map to='square'>
              <bucket>338</bucket>
            </map>
            <map to='square'>
              <bucket>378</bucket>
            </map>
            <map to='square'>
              <bucket>424</bucket>
            </map>
            <map to='square'>
              <bucket>464</bucket>
            </map>
            <map to='square'>
              <bucket>538</bucket>
            </map>
            <map to='square'>
              <bucket>588</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='square'>
              <bucket>682</bucket>
            </map>
            <map to='square'>
              <bucket>734</bucket>
            </map>
            <map to='square'>
              <bucket>791</bucket>
            </map>
            <map to='square'>
              <bucket>832</bucket>
            </map>
            <map to='square'>
              <bucket>900</bucket>
            </map>
            <map to='square'>
              <bucket>1026</bucket>
            </map>
            <map to='square'>
              <bucket>1288</bucket>
            </map>
            <map to='square'>
              <bucket>1516</bucket>
            </map>
            <map to='square'>
              <bucket>1736</bucket>
            </map>
            <map to='square'>
              <bucket>2054</bucket>
            </map>
            <map to='square'>
              <bucket>2172</bucket>
            </map>
            <map to='square'>
              <bucket>2582</bucket>
            </map>
            <map to='square'>
              <bucket>2878</bucket>
            </map>
            <map to='square'>
              <bucket>3166</bucket>
            </map>
            <map to='square'>
              <bucket>3446</bucket>
            </map>
            <map to='times'>
              <bucket>78</bucket>
            </map>
            <map to='times'>
              <bucket>124</bucket>
            </map>
            <map to='times'>
              <bucket>166</bucket>
            </map>
            <map to='times'>
              <bucket>216</bucket>
            </map>
            <map to='times'>
              <bucket>252</bucket>
            </map>
            <map to='times'>
              <bucket>298</bucket>
            </map>
            <map to='times'>
              <bucket>346</bucket>
            </map>
            <map to='times'>
              <bucket>386</bucket>
            </map>
            <map to='times'>
              <bucket>432</bucket>
            </map>
            <map to='times'>
              <bucket>470</bucket>
            </map>
            <map to='times'>
              <bucket>550</bucket>
            </map>
            <map to='times'>
              <bucket>598</bucket>
            </map>
            <map to='times'>
              <bucket>688</bucket>
            </map>
            <map to='times'>
              <bucket>756</bucket>
            </map>
            <map to='times'>
              <bucket>838</bucket>
            </map>
            <map to='times'>
              <bucket>914</bucket>
            </map>
            <map to='times'>
              <bucket>1072</bucket>
            </map>
            <map to='times'>
              <bucket>1356</bucket>
            </map>
            <map to='times'>
              <bucket>1546</bucket>
            </map>
            <map to='times'>
              <bucket>1816</bucket>
            </map>
            <map to='times'>
              <bucket>2072</bucket>
            </map>
            <map to='times'>
              <bucket>2274</bucket>
            </map>
            <map to='times'>
              <bucket>2650</bucket>
            </map>
            <map to='times'>
              <bucket>2934</bucket>
            </map>
            <map to='times'>
              <bucket>3202</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
            <map to='times'>
              <bucket>3706</bucket>
            </map>
            <map to='triangle'>
              <bucket>16</bucket>
            </map>
            <map to='triangle'>
              <bucket>44</bucket>
            </map>
            <map to='triangle'>
              <bucket>98</bucket>
            </map>
            <map to='triangle'>
              <bucket>138</bucket>
            </map>
            <map to='triangle'>
              <bucket>192</bucket>
            </map>
            <map to='triangle'>
              <bucket>222</bucket>
            </map>
            <map to='triangle'>
              <bucket>264</bucket>
            </map>
            <map to='triangle'>
              <bucket>306</bucket>
            </map>
            <map to='triangle'>
              <bucket>364</bucket>
            </map>
            <map to='triangle'>
              <bucket>448</bucket>
            </map>
            <map to='triangle'>
              <bucket>484</bucket>
            </map>
            <map to='triangle'>
              <bucket>560</bucket>
            </map>
            <map to='triangle'>
              <bucket>612</bucket>
            </map>
            <map to='triangle'>
              <bucket>706</bucket>
            </map>
            <map to='triangle'>
              <bucket>764</bucket>
            </map>
            <map to='triangle'>
              <bucket>850</bucket>
            </map>
            <map to='triangle'>
              <bucket>958</bucket>
            </map>
            <map to='triangle'>
              <bucket>1146</bucket>
            </map>
            <map to='triangle'>
              <bucket>1432</bucket>
            </map>
            <map to='triangle'>
              <bucket>1578</bucket>
            </map>
            <map to='triangle'>
              <bucket>1882</bucket>
            </map>
            <map to='triangle'>
              <bucket>2116</bucket>
            </map>
            <map to='triangle'>
              <bucket>2394</bucket>
            </map>
            <map to='triangle'>
              <bucket>2732</bucket>
            </map>
            <map to='triangle'>
              <bucket>3046</bucket>
            </map>
            <map to='triangle'>
              <bucket>3360</bucket>
            </map>
            <map to='triangle'>
              <bucket>3556</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[min:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>1</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>2</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Airport' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Calculation_4686839867435659276' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='FlightDateDay' />
        <field-sort-custom-order field='Hour' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='Calculation_4577416469211852804' />
        <field-sort-custom-order field='Calculation_4577416469212676102' />
        <field-sort-custom-order field='Calculation_4686839866503639046' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
          <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        </column>
        <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
          <calculation class='tableau' formula='100.0' />
          <range granularity='5.0' max='200.0' min='0.0' />
        </column>
        <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
          <calculation class='tableau' formula='&quot;Departure&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='flights' inline='true' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.11sx92m094fgux1366mhm0wdq491'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='flights.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11sx92m094fgux1366mhm0wdq491' name='flights.csv' table='[flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='FlightDate' ordinal='0' />
            <column datatype='string' name='OriginCode' ordinal='1' />
            <column datatype='string' name='OriginCity' ordinal='2' />
            <column datatype='string' name='DestinationCode' ordinal='3' />
            <column datatype='string' name='DestinationCity' ordinal='4' />
            <column datatype='integer' name='DepartureTimeScheduled' ordinal='5' />
            <column datatype='real' name='DepartureTimeActual' ordinal='6' />
            <column datatype='real' name='DepartureDelay' ordinal='7' />
            <column datatype='real' name='DepartureDelayCapped' ordinal='8' />
            <column datatype='integer' name='ArrivalTimeScheduled' ordinal='9' />
            <column datatype='real' name='ArrivalTimeActual' ordinal='10' />
            <column datatype='real' name='ArrivalDelay' ordinal='11' />
            <column datatype='real' name='ArrivalDelayCapped' ordinal='12' />
            <column datatype='real' name='Cancelled' ordinal='13' />
            <column datatype='real' name='Diverted' ordinal='14' />
            <column datatype='real' name='TotalTimeScheduled' ordinal='15' />
            <column datatype='real' name='TotalTimeActual' ordinal='16' />
            <column datatype='string' name='OriginAirport' ordinal='17' />
            <column datatype='real' name='OriginLatitude' ordinal='18' />
            <column datatype='real' name='OriginLongitude' ordinal='19' />
            <column datatype='string' name='DestinationAirport' ordinal='20' />
            <column datatype='real' name='DestinationLatitude' ordinal='21' />
            <column datatype='real' name='DestinationLongitude' ordinal='22' />
            <column datatype='string' name='Carrier' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeScheduled</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeActual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelayCapped</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeScheduled</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeActual</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelayCapped</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeScheduled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeScheduled</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeActual</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginAirport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLatitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLongitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationAirport</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLatitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLongitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='*0000' name='[ArrivalTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[ArrivalTimeScheduled]' role='measure' type='quantitative' />
      <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
      </column>
      <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
      </column>
      <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
      </column>
      <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
      </column>
      <column caption='ArrivalTimeActualDateTime' datatype='datetime' name='[Calculation_3516959494379470854]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([ArrivalTimeActual]), 4))' />
      </column>
      <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
      <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[DepartureTimeScheduled]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
      <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
      <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='OriginLatitude' datatype='real' name='[OriginLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='OriginLongitude' datatype='real' name='[OriginLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='TotalTimeActual' datatype='real' name='[TotalTimeActual]' role='measure' type='quantitative' />
      <column caption='TotalTimeScheduled' datatype='real' name='[TotalTimeScheduled]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(DepartureTimeActualDateTime),Carrier)' hidden='true' name='[Action (HOUR(DepartureTimeActualDateTime),Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/flights.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCode</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCity</remote-alias>
              <ordinal>2</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCode</remote-alias>
              <ordinal>3</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCity</remote-alias>
              <ordinal>4</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepartureTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeScheduled</remote-alias>
              <ordinal>5</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>393</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeActual</remote-alias>
              <ordinal>6</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1037</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>7</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelayCapped</remote-alias>
              <ordinal>8</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrivalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeScheduled</remote-alias>
              <ordinal>9</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>736</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeActual</remote-alias>
              <ordinal>10</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1162</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>11</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelayCapped</remote-alias>
              <ordinal>12</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>13</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>14</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeScheduled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeScheduled</remote-alias>
              <ordinal>15</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeActual</remote-alias>
              <ordinal>16</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirport</remote-alias>
              <ordinal>17</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLatitude</remote-alias>
              <ordinal>18</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLongitude</remote-alias>
              <ordinal>19</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationAirport</remote-alias>
              <ordinal>20</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLatitude</remote-alias>
              <ordinal>21</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLongitude</remote-alias>
              <ordinal>22</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>23</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.480198' measure-ordering='alphabetic' measure-percentage='0.381188' parameter-percentage='0.138614' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Carrier:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ExpressJet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SkyWest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;JetBlue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spirit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='FlightDate' />
        <field-sort-custom-order field='Calculation_3516959494370541571' />
        <field-sort-custom-order field='OriginCode' />
        <field-sort-custom-order field='OriginCity' />
        <field-sort-custom-order field='Calculation_3516959494367801346' />
        <field-sort-custom-order field='DestinationCode' />
        <field-sort-custom-order field='DestinationCity' />
        <field-sort-custom-order field='Calculation_3516959494367354881' />
        <field-sort-custom-order field='DepartureTimeScheduled' />
        <field-sort-custom-order field='DepartureTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494374559748' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='DepartureDelayCapped' />
        <field-sort-custom-order field='ArrivalTimeScheduled' />
        <field-sort-custom-order field='ArrivalTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494379470854' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='ArrivalDelayCapped' />
        <field-sort-custom-order field='Cancelled' />
        <field-sort-custom-order field='Diverted' />
        <field-sort-custom-order field='TotalTimeScheduled' />
        <field-sort-custom-order field='TotalTimeActual' />
        <field-sort-custom-order field='OriginAirport' />
        <field-sort-custom-order field='OriginLatitude' />
        <field-sort-custom-order field='OriginLongitude' />
        <field-sort-custom-order field='DestinationAirport' />
        <field-sort-custom-order field='DestinationLatitude' />
        <field-sort-custom-order field='DestinationLongitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='DepDelay' />
        <field-sort-custom-order field='DestCity' />
        <field-sort-custom-order field='Flights' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AirportArrivalDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average arrival delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ArrivalDelay]' derivation='Avg' name='[avg:ArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' scope='cols' value='Average arrival delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average arrival delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AirportDepartureDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='ASC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day of week'>
              <formatted-text>
                <run>Day of week</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='rows' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='MapWithRadiusFilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
            <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
              <calculation class='tableau' formula='&quot;Departure&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_4686839867444486165]' derivation='Avg' name='[avg:Calculation_4686839867444486165:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Code]' derivation='Min' name='[min:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4577416469212676102]' derivation='User' name='[usr:Calculation_4577416469212676102:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' value='Average delay (minutes)'>
              <formatted-text>
                <run>Average delay (minutes)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' />
              <shape column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:ok]' />
              <tooltip column='[Parameters].[Parameter 2]' />
              <tooltip column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]' />
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Code:nk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Delay Type:&#9;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distance from selected airport:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]&gt; miles</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SelectedAirport'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='271' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='DESC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='cols' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt; flights</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='rows' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BestAirport'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_19' value='bottom' />
          <format attr='vertical-align' id='dash-text_20' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82560' id='5' param='horz' type='layout-flow' w='98476' x='762' y='16800'>
            <zone h='82560' id='3' type='layout-basic' w='80476' x='762' y='16800'>
              <zone h='19270' id='11' name='AirportDepartureDelays' w='80476' x='762' y='60973'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19117' id='14' name='AirportArrivalDelays' w='80476' x='762' y='80243'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44173' id='15' name='MapWithRadiusFilter' show-title='false' w='80476' x='762' y='16800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='189' h='82560' id='4' is-fixed='true' param='vert' type='layout-flow' w='18000' x='81238' y='16800'>
              <zone custom-title='true' fixed-size='45' h='4240' id='17' is-fixed='true' mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='paramctrl' w='18000' x='81238' y='16800'>
                <formatted-text>
                  <run>Airport</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='68' h='6080' id='13' is-fixed='true' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='18000' x='81238' y='21040'>
                <formatted-text>
                  <run>Dist. from airport (miles)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='41' h='3920' id='18' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='18000' x='81238' y='27120'>
                <formatted-text>
                  <run>Type of delay (color)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='701' h='56720' id='16' is-fixed='true' name='MapWithRadiusFilter' pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' w='18000' x='81238' y='31040'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11520' id='19' type='text' w='18000' x='81238' y='87760'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000'>Data</run>
                  <run> Airline On-Time Performance Data - </run>
                  <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000'>Source</run>
                  <run> US Department of Transportation Bureau of Transportation Statistics&#10;</run>
                  <run bold='true' fontcolor='#000000'>Dates</run>
                  <run> All flights in 2017</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='16160' id='20' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the best airport</run>
              <run>&#10;&#10;Different airports have different on-time performance. &#10;&#10;To use this visualization, choose the airport you&apos;d normally use. The map automatically updates to show all airports within the specified distance. The color of the airport circle shows the average delay in minutes for that airport (either departure or arrival depending on the choice in the </run>
              <run bold='true'>Type of delay</run>
              <run> drop down). The average departure and arrival delay is shown in bar charts below the map.&#10;&#10;</run>
              <run bold='true'>Note</run>
              <run>: If the map doesn&apos;t change when you choose a different airport or distance, make sure the push pin image that appears on the left side of the map when the cursor is in the map does not contain an X. If it does, click the push pin. (The X indicates that the map is &apos;fixed&apos; and won&apos;t change when different selections are made.)&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bon Voyage' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Book' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='178' />
        </style-rule>
      </style>
      <size maxheight='1450' maxwidth='1075' minheight='1450' minwidth='1075' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98896' id='10' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='552'>
            <zone h='3311' id='11' type='title' w='98512' x='744' y='552'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='95585' id='8' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
              <zone h='95585' id='1' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
                <zone h='6966' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98512' x='744' y='3863' />
                <zone h='88619' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98512' x='744' y='10829'>
                  <flipboard active-id='1' nav-type='caption' show-nav-arrows='false'>
                    <story-points>
                      <story-point caption='Find the optimal flight' captured-sheet='OptimalFlight' id='1' />
                      <story-point caption='Find the best airport' captured-sheet='BestAirport' id='2'>
                        <capturedDeltas>
                          <worksheet name='MapRadiusFilter'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <datasource name='Parameters'>
                            <column name='[Airport Parameter]' value='&quot;Seattle Tacoma International Airport&quot;' />
                          </datasource>
                        </capturedDeltas>
                      </story-point>
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='OptimalFlight'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_18' value='bottom' />
          <format attr='vertical-align' id='dash-text_17' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
        <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
        </column>
        <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
        </column>
        <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
        </column>
        <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='87680' id='10' param='horz' type='layout-flow' w='98476' x='762' y='11680'>
            <zone h='87680' id='5' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='80476' x='762' y='11680'>
              <zone h='87680' id='3' type='layout-basic' w='80476' x='762' y='11680'>
                <zone h='21916' id='1' name='AvgDepDelayByCarrier' w='80476' x='762' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22566' id='8' name='TotalFlightsByCarrier' w='80476' x='762' y='55516'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21920' id='14' name='AvgDepDelayByHour' w='80476' x='762' y='33596'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21278' id='16' name='TotalFlightsByHour' w='80476' x='762' y='78082'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='189' h='87680' id='19' is-fixed='true' type='layout-basic' w='18000' x='81238' y='11680'>
              <zone h='72400' id='9' param='vert' type='layout-flow' w='18000' x='81238' y='11680'>
                <zone h='4160' id='11' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' type='filter' values='relevant' w='18000' x='81238' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='12' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' type='filter' values='relevant' w='18000' x='81238' y='15840'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='13' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' type='filter' values='database' w='18000' x='81238' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='470' h='38240' id='15' is-fixed='true' name='AvgDepDelayByHour' pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' w='18000' x='81238' y='24160'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='15280' id='20' param='vert' type='layout-flow' w='18000' x='81238' y='84080'>
                <zone fixed-size='208' forceUpdate='true' h='15280' id='18' is-fixed='true' type='text' w='18000' x='81238' y='84080'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000'>Data</run>
                    <run> Airline On-Time Performance Data - </run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000'>Source</run>
                    <run> US Department of Transportation Bureau of Transportation Statistics&#10;</run>
                    <run bold='true' fontcolor='#000000'>Dates</run>
                    <run> All flights in 2017</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='11040' id='17' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the optimal flight</run>
              <run>&#10;&#10;Different airlines and different times of the day have different on-time performance, even at the same airports. There are different numbers of flights at different hours of the day. &#10;&#10;To use this visualization, choose the origin and destination airport. The charts will update automatically to show the average departure delay and number of flights. You can optionally choose to only show the results from a particular day of the week.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='AvgDepDelayByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgDepDelayByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='OptimalFlight'>
      <viewpoints>
        <viewpoint name='AvgDepDelayByCarrier' />
        <viewpoint name='AvgDepDelayByHour'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalFlightsByCarrier' />
        <viewpoint name='TotalFlightsByHour'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
    </window>
    <window class='dashboard' maximized='true' name='BestAirport'>
      <viewpoints>
        <viewpoint name='AirportArrivalDelays' />
        <viewpoint name='AirportDepartureDelays' />
        <viewpoint name='MapWithRadiusFilter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Bon Voyage'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='MapWithRadiusFilter'>
      <cards>
        <edge name='left'>
          <strip size='295'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Code:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportDepartureDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportArrivalDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SelectedAirport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='278' name='AirportArrivalDelays' width='384'>
      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
      BYCIXBQz7bOx2ZJ7u8yTkx2kpGXgziuirP15Hq5swF9XyYEbdlKUMU2l6tyndEYgQv9pOPbL
      Upkxyl2Mp109ravZ/jA1w+49wtkxNGckCgARuUiGnt+e5l7B6kUHqW6L0HkyDBlT9QKHARxu
      tlZVTXAn429XVmEJeak2zgyx33AslfTRJtEoKABE5JJ02ewkGHAl/scgUbt6IiNvWTmlmdNX
      lvUcgIhceqI+XmyOT5mc2jf4TLOE7XJw3ZIsAGr/5cAw9w8QDYWITuLpKABE5JIRi4bpaD/A
      jgd34ANgETe4PpszgfoaqV2uZbfGh519NTzydBOhgduHu2h6/knu2/jfOTyJr8b4I4pWEfks
      aazcyCG7nUgE7HaIRAZ299ip2HA3Q/WINFZupDHhEju3b/57lmdO3nv3x2Jc7UrL5/sVh9he
      20bAU81Gz6/JLVzK/Jmn+eCDd2nz9UwrdTIzwRjAcB1lwy1TAIjItLI5knp/7ymOfWukPTWL
      62+5ldLifNIT1fARq1aErlNRSDijfupMtF3Zpffx46x97KqqwR+x8Hoa+iy148ov5baKYrL7
      bDuj+5+xIGPuoP2NZtnnzp8/f360DRQRkakWI9TVxcenYthsNmbNmk3KvBSSp+ByXQEgImIo
      DQKLiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhK
      ASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQA
      IiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG
      UgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG+v+ZxPEl
      SyKLJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='278' name='AirportDepartureDelays' width='384'>
      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
      BYCIXBQz7bOx2ZJ7u8yTkx2kpGXgziuirP15Hq5swF9XyYEbdlKUMU2l6tyndEYgQv9pOPbL
      Upkxyl2Mp109ravZ/jA1w+49wtkxNGckCgARuUiGnt+e5l7B6kUHqW6L0HkyDBlT9QKHARxu
      tlZVTXAn429XVmEJeak2zgyx33AslfTRJtEoKABE5JJ02ewkGHAl/scgUbt6IiNvWTmlmdNX
      lvUcgIhceqI+XmyOT5mc2jf4TLOE7XJw3ZIsAGr/5cAw9w8QDYWITuLpKABE5JIRi4bpaD/A
      jgd34ANgETe4PpszgfoaqV2uZbfGh519NTzydBOhgduHu2h6/knu2/jfOTyJr8b4I4pWEfks
      aazcyCG7nUgE7HaIRAZ299ip2HA3Q/WINFZupDHhEju3b/57lmdO3nv3x2Jc7UrL5/sVh9he
      20bAU81Gz6/JLVzK/Jmn+eCDd2nz9UwrdTIzwRjAcB1lwy1TAIjItLI5knp/7ymOfWukPTWL
      62+5ldLifNIT1fARq1aErlNRSDijfupMtF3Zpffx46x97KqqwR+x8Hoa+iy148ov5baKYrL7
      bDuj+5+xIGPuoP2NZtnnzp8/f360DRQRkakWI9TVxcenYthsNmbNmk3KvBSSp+ByXQEgImIo
      DQKLiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhK
      ASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQA
      IiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG
      UgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG+v+ZxPEl
      SyKLJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='358' name='AvgDepDelayByCarrier' width='384'>
      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
      JM5gj594f+zKNEmEW56nqskAoCD/pnEuzdVPASAyVmKfEAOwXsO0IVa7MecOAHT+emlaDz3H
      uh31AFjzV/D5rNRxLtHVT0PkImMk8u7bBIDu+Z6D0afy0sTa2V/1I2q9iRfWmruE768q0ss4
      DHqNRGTCCrUc4J92VCeCFchdspZ/KMtRxTZMep1ExkjKXziwAtGL9O1M0cdyGGI0Pfdjdndf
      EOZkxWOPDjE7SAaid5rIGLGk25kFDH0NK3xw8p0xKM1EFuPQrm+z15Po8nEULuObjyxGN9C4
      dBoEFhkr5+OJQeDA67w96FVecdp8JwC4zn7tGBVsYvHt/3F35Z//4GM8qcr/sikARMZK2o3M
      cwAEePWNQeb4x9v5z87KLffTmWNWtIki3n6A7bWJNlTussdYVaJ7Jl0JBYDImEnnroUuAJp+
      VctA16m2HarBC2AtJC9TPbR9Nf+2Z5rnP+iGeVdMASAyhrIWfAEHgOHmf+06kHS/n1Dz82yu
      9gLgKvsC/e4UYXpBPMcSF3nNL5mjAcwRoLuBioyx0NHneLzKnfjF5qK4YDacPoG767sBnOU8
      taECzWfpI9LM9761s3vK58XkP7iRVSW6JfRQ1AIQGWMZBQ+xeWVp4kpfw4e7oaG78rflL1Pl
      P5iUmVx3Cau3t58dtaJMFmoBiIyXWIgW79t8Yp1J/MxHTM+6A1emqn4ZOwoAERGTUheQiIhJ
      KQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJS
      CgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiU
      AkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIial
      ABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkp
      AERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIK
      ABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZP6/wHMPRDM
      EEVnpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='AvgDepDelayByHour' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='BestAirport' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Bon Voyage' width='384'>
      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
      HJ1/wQV66snHVNcYlCQ11G7XE9Oe0bjzL9y7lONo0g8v1xt/f05zl+XpvKxhLfN8Pp8qyisV
      2v1CdVVFmV55a8be0SNj9MOLz9Evb79Vc+Yv0Zqvv9ITj07VrGW5LfswNmusXn5umgpLKluO
      1pZNeXrj7X/9B/fbJp4BACeggrVLlHHWUEmS67rqkNRJZ2WO0q3/dYMcR4qIbqdHpv6P7vrV
      PXo9pYsct1GFxTs19eFH1Say+ZKN4/HqgD/rleQc5nHf6DFZGj/5RqVnnq/20fufIi6bfIPy
      Cu7RxRePV89TOytv3ToNHXOJJl0yZr/leg0erY6exxU/dKzaRe3dxpkjxurlv7+ly6+4Uont
      YrW1uELnnj1U2rSjZe+uuuUuxSb9XW++/JzC3kiNGnOeRp6+tmUbp428QJPzN+raKycotcvJ
      aqqvVW29dMMtd/7bxxfNHNd13cMvBuBEFGxqUG5OrsKOT2m90hTp8x5+pcNxw6qo3K5AVJRi
      oqMPnO26KiveoqLiUqV0PVUdO7Q7yDJh3faTK3TZbVM1PL3bNzYf1vq8dQp7/OrWrat8nm8P
      kuuGdcvky3XVL/+gIf27tkxvamxQWdk2RQai1aF9/MFah8PgGQDwPeaL8Ktv/wFHd6OOR+3b
      tz/0bMdRUnKqkpJTD5jX/HjS1dwPXldRMFEZA7sduL7Hox5ph36Xz0vPTtMp/c7QgH69pWC9
      Zrz5ivJ2+NS35/7jRUT6lZJ64D7g30cAABw1odpSnfODSerYtbt+9+Bv5T2CR+Unn9JV77z+
      oh7/Q7Fcx6NTuvfSn5/6k9r4j8KzG+yHS0AAYBTvAgIAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACj+CgItBrV1dVqamo63rvRqsXGxiocDiscDh9+YRwxv98vz2E+JO9o
      IABoNWpqalRbW3u8d6NVCwQCCgaDCgaDx3tXWrXIyMhjMg6XgADAKAIAAEYRAAAwigAAgFEE
      ANitob5e3/x6jHAoqMamY/uCZ92uXS0/u+GQSoqL1dBQr2Do4O+8aWxoOGC/T2SNDY0HTAuH
      goe8f1Lz10I2HePfgwUEAK1aQ1WZpj7yiF577TWt31SkBYsWHnLZ9999XY3h5hPpisWLFXal
      4pyv9MWKgiMef+GyZZKkyuJNyskv+rfWeW3GjJafX3/1RX25KkeLZr2rLTvrtHjxQoXC+5/s
      33ljhur3OXnuGfNYqt9Rqvc/+kSLFi1SxY5q5ebmHnLZ5Su+3P2Tq4L8fEnS1k3rtXVb1SHX
      qS3fopxNWw+7H+FQUBs3bjr4TNdV7rp1h93GQVZUQf6GI1jvxMfbQNG6hUPq2T9d488/R5K0
      MT9PFZvz9LdX3lWs36dhYy+Sp3aT5i9fp/yiAl04QaouL9FLLzyv5dn5Gj7gVH309uvKWRCr
      4edNkLs9X0uzNyg6NkGTLr9QblO9/vb0NAXD0shxE7Xpq/kq2V6nqoZGjT9/lKZPn66C/AJd
      MOJ0VdeG9P4/XlXp9lqVlGxTx46JijwpQWOH9NX7n8xVTW2Dbrzpejm7v928rqpcCxcvVvoZ
      fsV0iJAk7aprfrT/1vPPqLQurA6JCfI07NQz055RQ3WDLho/VtOnT9fGDZt0xcRL5TlG35Tu
      hkPqfGoPDex5ilzXVUlxWBUlhVq+Ol9ehdTv9CGqKduoovIqle/YIUmq3l6hpV8uVcm2SiUn
      tNHK5Uu0PtKr/mcMUVVxgYorq9Qmrr3S+/eS5GjdmpUq35SntAGDpF3lWr+5RJH+NurRpYNW
      5WxQICZOyfFRWrpslap3Nah/n56qqdymFdnrFGwK6qzMTIWbgtq1vUxr8gtV1yjFxzjaUVOv
      xqaQMjPP0uJ58xVyw+reZ6Cqy0tVW7tDvsgYrcvNUVnFdp0xeNARfc3liYpnAGj15n76kR5/
      /HGtKypXUVmpGmuqNWjUOE25ZqI2bM7Toq/W6Gc3XKeM9D6SpNgOHZUxdKiuueZKxQR8OvfS
      y/WTq8Zr/cYc/evz+UpL66EN+StV3xTSulVL1XPIebrxphu05NOZqgs2aPI1kzWoa5yaAgka
      mpGhKy+fqHBDlbZXVKkuGNTka6eoR+dOunbKFIWraxXXNl4nxUZrZ0m2infs/TuGqLgOyhyW
      oat+PEn+3WedrWWlqt9epJrYFN18009VXb5R8sdpyvU/1ZABiYpKPFlDMzI06bLxx+zkv8f6
      tWs0b9487ayp186qKjXU1alHn3QNSe+t4vJyFZZWakTmMCUntGs+zu3aq2vnLjpr6GD5HEcD
      ThusMwf2VMm2cq3bWKjkTp20uaiwZfs9+/XXyJGZKsjP1dqcPKUmJ2tHaZEqd+6U641Q91NP
      VkqXk3VK11PUv09PSZI/po1iovyqr92p8u01qtq5Q8HGem2ratDwjDNUW9ukjGHD1CWxrdZ+
      vUrtO3fXiBHDVbB+vSq3bVFi5x5KTx+grp27aMiZrevkL/EMAAaMyDqv5RnAgt3THI/T/Ejb
      cRQMhhV2Xe2q2XvybQw1KrT7r10dj6f5nyP5HZ+6ntJNExM6KMLjKBAIqHJzpRpq4hX0REhu
      SK6kLSXl6hEVqcZd9Qrvc33ecVzJkfacRzweR++9+bYyL7lMUe6hL4HsyxsR0Lat+dpaVKia
      hrDaxjpyHMnxNH9pesOuPa9lNE8/Vrr37tvyDGCP5kPcvBPhUEiu66qxYe9faweDwZblHWfP
      76T5kWnbk9ppYL8+ewdwpZrqnfJ4I+V4PIqJbat+Awcorl17paZKs2d/oaxzRqsp2CS5ruQ4
      ylm1XMndBirKt/eYS81fPL/ntuu6qqqqUlx8onbs2qVgY71cV/L545TaKUGSq2CwSa7rttyX
      1sL7wAMPPHC8dwI4Gmpqag7yURCOvBGR6hAfL0nyOI6SEhIVGR2rdnHR8kVEqUdqkmZ88KHi
      OnRSn7Se8jiOogM+vf3eLKX17q3YuJPULjZK3gi/hgzsrU9mzVJ1XZN69eyh+IRO2rh6oRZ/
      naOLJkxQ9pdf6Muv1iglbZAGpJ0sb0OlZi9coT69eysQ3VbtTopRQmKSHMejxKSOkqR+fbvo
      448+USiijfr366voyAglJSa23IPExCQ5ctQ2PkFRkRHqmNJVibF+5RUUaltFjYYOHqyEjgny
      Oo5Oik+Qv7FSny9ZpX590o76CevbPgrCG+FXm+hAy3GOi41VZCBGAb9PvsiA2sX4tXLNWsW1
      T1DHhA6SHPk8Ia1ak6dOqamKCkTL7/fJFxFQ547tlZu3XmEnQkkJ7SW52liwQeWV1Tr9tIHq
      lNBeubm5qm9yFRvwam3uOsUndVRyUpKqdpSrpLJKSQkdFB0drZzsbLmeCHVK7qRAZITi4uLk
      iwwoJsqvwg15KizaoriEFPXs0U3bSwpVUFisAenp8kf4FNs2To4cOW6TsnM3qFNKijzHoAGB
      QOCYfBSE436f3j4AfIvi4uLj/lEQC+bN0ZkZI+X7Ls8SbpNee+EVVYeaNGzMOPU5Jfm7G+sb
      kpOTW9VHQeSuzVGP3r1OuGvhbdu2ldfr/c7HIQBoNU6EALR2rS0AJ6pjFYATLXwAgGOEAACA
      UQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjfMd7B4CjpU2bNvL7/cd7N1q1iIgIeb1e
      RUREHO9dadUcxzk247iu6x6TkQAAJxQuAQGAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCK
      AACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQA
      AIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADA
      KAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwi
      AABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIA
      AEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABg
      FAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADDq/wF7J5ToTRCV3QAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='MapWithRadiusFilter' width='384'>
      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
      Ael32aAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='OptimalFlight' width='384'>
      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
      dHR0psD/ByXGMOkeAFYQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='SelectedAirport' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='358' name='TotalFlightsByCarrier' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='TotalFlightsByHour' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
