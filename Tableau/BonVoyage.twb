<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='BonVoyage' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Selected Airport' datatype='string' name='[Airport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tampa International Airport&quot;'>
        <calculation class='tableau' formula='&quot;Tampa International Airport&quot;' />
        <members>
          <member value='&quot;Aberdeen Regional Airport&quot;' />
          <member value='&quot;Abilene Regional Airport&quot;' />
          <member value='&quot;Abraham Lincoln Capital Airport&quot;' />
          <member value='&quot;Adak Airport&quot;' />
          <member value='&quot;Akron Canton Regional Airport&quot;' />
          <member value='&quot;Albany International Airport&quot;' />
          <member value='&quot;Albert J Ellis Airport&quot;' />
          <member value='&quot;Albuquerque International Sunport Airport&quot;' />
          <member value='&quot;Alexandria International Airport&quot;' />
          <member value='&quot;Alpena County Regional Airport&quot;' />
          <member value='&quot;Antonio B. Won Pat International Airport&quot;' />
          <member value='&quot;Appleton International Airport&quot;' />
          <member value='&quot;Arcata Airport&quot;' />
          <member value='&quot;Arnold Palmer Regional Airport&quot;' />
          <member value='&quot;Asheville Regional Airport&quot;' />
          <member value='&quot;Aspen-Pitkin Co/Sardy Field&quot;' />
          <member value='&quot;Atlantic City International Airport&quot;' />
          <member value='&quot;Augusta Regional At Bush Field&quot;' />
          <member value='&quot;Austin Bergstrom International Airport&quot;' />
          <member value='&quot;Austin Straubel International Airport&quot;' />
          <member value='&quot;Baltimore/Washington International Thurgood Marshall Airport&quot;' />
          <member value='&quot;Bangor International Airport&quot;' />
          <member value='&quot;Barkley Regional Airport&quot;' />
          <member value='&quot;Barnstable Municipal Boardman Polando Field&quot;' />
          <member value='&quot;Baton Rouge Metropolitan, Ryan Field&quot;' />
          <member value='&quot;Bellingham International Airport&quot;' />
          <member value='&quot;Bemidji Regional Airport&quot;' />
          <member value='&quot;Bert Mooney Airport&quot;' />
          <member value='&quot;Bethel Airport&quot;' />
          <member value='&quot;Bill &amp; Hillary Clinton National Airport/Adams Field&quot;' />
          <member value='&quot;Billings Logan International Airport&quot;' />
          <member value='&quot;Birmingham-Shuttlesworth International Airport&quot;' />
          <member value='&quot;Bishop International Airport&quot;' />
          <member value='&quot;Bismarck Municipal Airport&quot;' />
          <member value='&quot;Blue Grass Airport&quot;' />
          <member value='&quot;Bob Hope Airport&quot;' />
          <member value='&quot;Boise Air Terminal/Gowen field&quot;' />
          <member value='&quot;Bradley International Airport&quot;' />
          <member value='&quot;Brainerd Lakes Regional Airport&quot;' />
          <member value='&quot;Brownsville South Padre Island International Airport&quot;' />
          <member value='&quot;Brunswick Golden Isles Airport&quot;' />
          <member value='&quot;Buffalo Niagara International Airport&quot;' />
          <member value='&quot;Burlington International Airport&quot;' />
          <member value='&quot;Cape Girardeau Regional Airport&quot;' />
          <member value='&quot;Capital City Airport&quot;' />
          <member value='&quot;Casper-Natrona County International Airport&quot;' />
          <member value='&quot;Cedar City Regional Airport&quot;' />
          <member value='&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;' />
          <member value='&quot;Central Nebraska Regional Airport&quot;' />
          <member value='&quot;Central Wisconsin Airport&quot;' />
          <member value='&quot;Charles M. Schulz Sonoma County Airport&quot;' />
          <member value='&quot;Charleston Air Force Base-International Airport&quot;' />
          <member value='&quot;Charlotte County Airport&quot;' />
          <member value='&quot;Charlotte Douglas International Airport&quot;' />
          <member value='&quot;Charlottesville Albemarle Airport&quot;' />
          <member value='&quot;Cherry Capital Airport&quot;' />
          <member value='&quot;Chicago Midway International Airport&quot;' />
          <member value='&quot;Chicago O&apos;Hare International Airport&quot;' />
          <member value='&quot;Chippewa County International Airport&quot;' />
          <member value='&quot;Chippewa Valley Regional Airport&quot;' />
          <member value='&quot;Cincinnati Northern Kentucky International Airport&quot;' />
          <member value='&quot;City of Colorado Springs Municipal Airport&quot;' />
          <member value='&quot;Cleveland Hopkins International Airport&quot;' />
          <member value='&quot;Coastal Carolina Regional Airport&quot;' />
          <member value='&quot;Columbia Metropolitan Airport&quot;' />
          <member value='&quot;Columbia Regional Airport&quot;' />
          <member value='&quot;Columbus Metropolitan Airport&quot;' />
          <member value='&quot;Corpus Christi International Airport&quot;' />
          <member value='&quot;Cyril E. King Airport&quot;' />
          <member value='&quot;Dallas Fort Worth International Airport&quot;' />
          <member value='&quot;Dallas Love Field&quot;' />
          <member value='&quot;Dane County Regional Truax Field&quot;' />
          <member value='&quot;Daytona Beach International Airport&quot;' />
          <member value='&quot;Deadhorse Airport&quot;' />
          <member value='&quot;Delta County Airport&quot;' />
          <member value='&quot;Denver International Airport&quot;' />
          <member value='&quot;Des Moines International Airport&quot;' />
          <member value='&quot;Destin-Ft Walton Beach Airport&quot;' />
          <member value='&quot;Detroit Metropolitan Wayne County Airport&quot;' />
          <member value='&quot;Devils Lake Regional Airport&quot;' />
          <member value='&quot;Dillingham Airport&quot;' />
          <member value='&quot;Dothan Regional Airport&quot;' />
          <member value='&quot;Duluth International Airport&quot;' />
          <member value='&quot;Durango La Plata County Airport&quot;' />
          <member value='&quot;Eagle County Regional Airport&quot;' />
          <member value='&quot;East Texas Regional Airport&quot;' />
          <member value='&quot;Easterwood Field&quot;' />
          <member value='&quot;El Paso International Airport&quot;' />
          <member value='&quot;Elko Regional Airport&quot;' />
          <member value='&quot;Elmira Corning Regional Airport&quot;' />
          <member value='&quot;Eppley Airfield&quot;' />
          <member value='&quot;Erie International Tom Ridge Field&quot;' />
          <member value='&quot;Evansville Regional Airport&quot;' />
          <member value='&quot;Fairbanks International Airport&quot;' />
          <member value='&quot;Falls International Airport&quot;' />
          <member value='&quot;Fayetteville Regional Grannis Field&quot;' />
          <member value='&quot;Flagstaff Pulliam Airport&quot;' />
          <member value='&quot;Ford Airport&quot;' />
          <member value='&quot;Fort Collins Loveland Municipal Airport&quot;' />
          <member value='&quot;Fort Lauderdale Hollywood International Airport&quot;' />
          <member value='&quot;Fort Smith Regional Airport&quot;' />
          <member value='&quot;Fort Wayne International Airport&quot;' />
          <member value='&quot;Fresno Yosemite International Airport&quot;' />
          <member value='&quot;Friedman Memorial Airport&quot;' />
          <member value='&quot;Gainesville Regional Airport&quot;' />
          <member value='&quot;Gallatin Field&quot;' />
          <member value='&quot;Garden City Regional Airport&quot;' />
          <member value='&quot;General Edward Lawrence Logan International Airport&quot;' />
          <member value='&quot;General Mitchell International Airport&quot;' />
          <member value='&quot;General Wayne A. Downing Peoria International Airport&quot;' />
          <member value='&quot;George Bush Intercontinental Houston Airport&quot;' />
          <member value='&quot;Gerald R. Ford International Airport&quot;' />
          <member value='&quot;Gillette Campbell County Airport&quot;' />
          <member value='&quot;Glacier Park International Airport&quot;' />
          <member value='&quot;Golden Triangle Regional Airport&quot;' />
          <member value='&quot;Grand Forks International Airport&quot;' />
          <member value='&quot;Grand Junction Regional Airport&quot;' />
          <member value='&quot;Great Falls International Airport&quot;' />
          <member value='&quot;Greater Binghamton/Edwin A Link field&quot;' />
          <member value='&quot;Greater Rochester International Airport&quot;' />
          <member value='&quot;Greenville Spartanburg International Airport&quot;' />
          <member value='&quot;Gulfport Biloxi International Airport&quot;' />
          <member value='&quot;Gunnison Crested Butte Regional Airport&quot;' />
          <member value='&quot;Gustavus Airport&quot;' />
          <member value='&quot;Harrisburg International Airport&quot;' />
          <member value='&quot;Hartsfield Jackson Atlanta International Airport&quot;' />
          <member value='&quot;Hattiesburg Laurel Regional Airport&quot;' />
          <member value='&quot;Hays Regional Airport&quot;' />
          <member value='&quot;Hector International Airport&quot;' />
          <member value='&quot;Helena Regional Airport&quot;' />
          <member value='&quot;Henry E Rohlsen Airport&quot;' />
          <member value='&quot;Hilo International Airport&quot;' />
          <member value='&quot;Honolulu International Airport&quot;' />
          <member value='&quot;Houghton County Memorial Airport&quot;' />
          <member value='&quot;Huntsville International Carl T Jones Field&quot;' />
          <member value='&quot;Idaho Falls Regional Airport&quot;' />
          <member value='&quot;Indianapolis International Airport&quot;' />
          <member value='&quot;Ithaca Tompkins Regional Airport&quot;' />
          <member value='&quot;Jackson Hole Airport&quot;' />
          <member value='&quot;Jackson-Medgar Wiley Evers International Airport&quot;' />
          <member value='&quot;Jacksonville International Airport&quot;' />
          <member value='&quot;James M Cox Dayton International Airport&quot;' />
          <member value='&quot;Jamestown Regional Airport&quot;' />
          <member value='&quot;Joe Foss Field Airport&quot;' />
          <member value='&quot;John F Kennedy International Airport&quot;' />
          <member value='&quot;John Wayne Airport-Orange County Airport&quot;' />
          <member value='&quot;Joplin Regional Airport&quot;' />
          <member value='&quot;Joslin Field Magic Valley Regional Airport&quot;' />
          <member value='&quot;Juneau International Airport&quot;' />
          <member value='&quot;Kahului Airport&quot;' />
          <member value='&quot;Kalamazoo Battle Creek International Airport&quot;' />
          <member value='&quot;Kansas City International Airport&quot;' />
          <member value='&quot;Ketchikan International Airport&quot;' />
          <member value='&quot;Key Field&quot;' />
          <member value='&quot;Key West International Airport&quot;' />
          <member value='&quot;King Salmon Airport&quot;' />
          <member value='&quot;Kodiak Airport&quot;' />
          <member value='&quot;Kona International At Keahole Airport&quot;' />
          <member value='&quot;La Crosse Municipal Airport&quot;' />
          <member value='&quot;La Guardia Airport&quot;' />
          <member value='&quot;Lafayette Regional Airport&quot;' />
          <member value='&quot;Lake Charles Regional Airport&quot;' />
          <member value='&quot;Lambert St Louis International Airport&quot;' />
          <member value='&quot;Laramie Regional Airport&quot;' />
          <member value='&quot;Laredo International Airport&quot;' />
          <member value='&quot;Lawton Fort Sill Regional Airport&quot;' />
          <member value='&quot;Lea County Regional Airport&quot;' />
          <member value='&quot;Lehigh Valley International Airport&quot;' />
          <member value='&quot;Lewiston Nez Perce County Airport&quot;' />
          <member value='&quot;Lihue Airport&quot;' />
          <member value='&quot;Lincoln Airport&quot;' />
          <member value='&quot;Long Beach /Daugherty Field/ Airport&quot;' />
          <member value='&quot;Long Island Mac Arthur Airport&quot;' />
          <member value='&quot;Los Angeles International Airport&quot;' />
          <member value='&quot;Louis Armstrong New Orleans International Airport&quot;' />
          <member value='&quot;Louisville International Standiford Field&quot;' />
          <member value='&quot;Lovell Field&quot;' />
          <member value='&quot;Lubbock Preston Smith International Airport&quot;' />
          <member value='&quot;Luis Munoz Marin International Airport&quot;' />
          <member value='&quot;Mahlon Sweet Field&quot;' />
          <member value='&quot;Mammoth Yosemite Airport&quot;' />
          <member value='&quot;Manchester Airport&quot;' />
          <member value='&quot;Manhattan Regional Airport&quot;' />
          <member value='&quot;Martha&apos;s Vineyard Airport&quot;' />
          <member value='&quot;MBS International Airport&quot;' />
          <member value='&quot;Mc Allen Miller International Airport&quot;' />
          <member value='&quot;McCarran International Airport&quot;' />
          <member value='&quot;McGhee Tyson Airport&quot;' />
          <member value='&quot;Meadows Field&quot;' />
          <member value='&quot;Melbourne International Airport&quot;' />
          <member value='&quot;Memphis International Airport&quot;' />
          <member value='&quot;Mercedita Airport&quot;' />
          <member value='&quot;Merle K (Mudhole) Smith Airport&quot;' />
          <member value='&quot;Metropolitan Oakland International Airport&quot;' />
          <member value='&quot;Miami International Airport&quot;' />
          <member value='&quot;Midland International Airport&quot;' />
          <member value='&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;' />
          <member value='&quot;Minot International Airport&quot;' />
          <member value='&quot;Missoula International Airport&quot;' />
          <member value='&quot;Mobile Regional Airport&quot;' />
          <member value='&quot;Monroe Regional Airport&quot;' />
          <member value='&quot;Monterey Peninsula Airport&quot;' />
          <member value='&quot;Montgomery Regional (Dannelly Field) Airport&quot;' />
          <member value='&quot;Montrose Regional Airport&quot;' />
          <member value='&quot;Muskegon County Airport&quot;' />
          <member value='&quot;Myrtle Beach International Airport&quot;' />
          <member value='&quot;Nantucket Memorial Airport&quot;' />
          <member value='&quot;Nashville International Airport&quot;' />
          <member value='&quot;Newark Liberty International Airport&quot;' />
          <member value='&quot;Newport News Williamsburg International Airport&quot;' />
          <member value='&quot;Niagara Falls International Airport&quot;' />
          <member value='&quot;Nome Airport&quot;' />
          <member value='&quot;Norfolk International Airport&quot;' />
          <member value='&quot;Norman Y. Mineta San Jose International Airport&quot;' />
          <member value='&quot;North Central West Virginia Airport&quot;' />
          <member value='&quot;Northeast Florida Regional Airport&quot;' />
          <member value='&quot;Northwest Arkansas Regional Airport&quot;' />
          <member value='&quot;Northwest Florida Beaches International Airport&quot;' />
          <member value='&quot;Ontario International Airport&quot;' />
          <member value='&quot;Orlando International Airport&quot;' />
          <member value='&quot;Pago Pago International Airport&quot;' />
          <member value='&quot;Palm Beach International Airport&quot;' />
          <member value='&quot;Palm Springs International Airport&quot;' />
          <member value='&quot;Pellston Regional Airport of Emmet County Airport&quot;' />
          <member value='&quot;Pensacola Regional Airport&quot;' />
          <member value='&quot;Petersburg James A Johnson Airport&quot;' />
          <member value='&quot;Philadelphia International Airport&quot;' />
          <member value='&quot;Phoenix Sky Harbor International Airport&quot;' />
          <member value='&quot;Piedmont Triad International Airport&quot;' />
          <member value='&quot;Pittsburgh International Airport&quot;' />
          <member value='&quot;Plattsburgh International Airport&quot;' />
          <member value='&quot;Pocatello Regional Airport&quot;' />
          <member value='&quot;Port Columbus International Airport&quot;' />
          <member value='&quot;Portland International Airport&quot;' />
          <member value='&quot;Portland International Jetport Airport&quot;' />
          <member value='&quot;Pueblo Memorial Airport&quot;' />
          <member value='&quot;Quad City International Airport&quot;' />
          <member value='&quot;Quincy Regional Baldwin Field&quot;' />
          <member value='&quot;Rafael Hernandez Airport&quot;' />
          <member value='&quot;Raleigh Durham International Airport&quot;' />
          <member value='&quot;Ralph Wien Memorial Airport&quot;' />
          <member value='&quot;Range Regional Airport&quot;' />
          <member value='&quot;Rapid City Regional Airport&quot;' />
          <member value='&quot;Redding Municipal Airport&quot;' />
          <member value='&quot;Reno Tahoe International Airport&quot;' />
          <member value='&quot;Rhinelander Oneida County Airport&quot;' />
          <member value='&quot;Richmond International Airport&quot;' />
          <member value='&quot;Rick Husband Amarillo International Airport&quot;' />
          <member value='&quot;Roanoke–Blacksburg Regional Airport&quot;' />
          <member value='&quot;Robert Gray  Army Air Field Airport&quot;' />
          <member value='&quot;Roberts Field&quot;' />
          <member value='&quot;Rochester International Airport&quot;' />
          <member value='&quot;Rock Springs Sweetwater County Airport&quot;' />
          <member value='&quot;Rogue Valley International Medford Airport&quot;' />
          <member value='&quot;Ronald Reagan Washington National Airport&quot;' />
          <member value='&quot;Roswell International Air Center Airport&quot;' />
          <member value='&quot;Sacramento International Airport&quot;' />
          <member value='&quot;Salt Lake City International Airport&quot;' />
          <member value='&quot;San Angelo Regional Mathis Field&quot;' />
          <member value='&quot;San Antonio International Airport&quot;' />
          <member value='&quot;San Diego International Airport&quot;' />
          <member value='&quot;San Francisco International Airport&quot;' />
          <member value='&quot;San Luis County Regional Airport&quot;' />
          <member value='&quot;Santa Barbara Municipal Airport&quot;' />
          <member value='&quot;Santa Fe Municipal Airport&quot;' />
          <member value='&quot;Sarasota Bradenton International Airport&quot;' />
          <member value='&quot;Savannah Hilton Head International Airport&quot;' />
          <member value='&quot;Sawyer International Airport&quot;' />
          <member value='&quot;Seattle Tacoma International Airport&quot;' />
          <member value='&quot;Sheppard Air Force Base-Wichita Falls Municipal Airport&quot;' />
          <member value='&quot;Shreveport Regional Airport&quot;' />
          <member value='&quot;Sioux Gateway Col. Bud Day Field&quot;' />
          <member value='&quot;Sitka Rocky Gutierrez Airport&quot;' />
          <member value='&quot;Sloulin Field International Airport&quot;' />
          <member value='&quot;South Bend Regional Airport&quot;' />
          <member value='&quot;Southeast Texas Regional Airport&quot;' />
          <member value='&quot;Southwest Florida International Airport&quot;' />
          <member value='&quot;Southwest Georgia Regional Airport&quot;' />
          <member value='&quot;Southwest Oregon Regional Airport&quot;' />
          <member value='&quot;Spokane International Airport&quot;' />
          <member value='&quot;Springfield Branson National Airport&quot;' />
          <member value='&quot;St George Municipal Airport&quot;' />
          <member value='&quot;Stewart International Airport&quot;' />
          <member value='&quot;Syracuse Hancock International Airport&quot;' />
          <member value='&quot;Tallahassee Regional Airport&quot;' />
          <member value='&quot;Tampa International Airport&quot;' />
          <member value='&quot;Ted Stevens Anchorage International Airport&quot;' />
          <member value='&quot;Texarkana Regional Webb Field&quot;' />
          <member value='&quot;The Eastern Iowa Airport&quot;' />
          <member value='&quot;Theodore Francis Green State Airport&quot;' />
          <member value='&quot;Toledo Express Airport&quot;' />
          <member value='&quot;Trenton Mercer Airport&quot;' />
          <member value='&quot;Tri Cities Airport&quot;' />
          <member value='&quot;Tri Cities Regional Tn Va Airport&quot;' />
          <member value='&quot;Tucson International Airport&quot;' />
          <member value='&quot;Tulsa International Airport&quot;' />
          <member value='&quot;Tyler Pounds Regional Airport&quot;' />
          <member value='&quot;University Park Airport&quot;' />
          <member value='&quot;Valdosta Regional Airport&quot;' />
          <member value='&quot;Valley International Airport&quot;' />
          <member value='&quot;Waco Regional Airport&quot;' />
          <member value='&quot;Washington Dulles International Airport&quot;' />
          <member value='&quot;Waterloo Regional Airport&quot;' />
          <member value='&quot;Westchester County Airport&quot;' />
          <member value='&quot;Wichita Mid Continent Airport&quot;' />
          <member value='&quot;Wiley Post Will Rogers Memorial Airport&quot;' />
          <member value='&quot;Wilkes Barre Scranton International Airport&quot;' />
          <member value='&quot;Will Rogers World Airport&quot;' />
          <member value='&quot;William P Hobby Airport&quot;' />
          <member value='&quot;Wilmington International Airport&quot;' />
          <member value='&quot;Worcester Regional Airport&quot;' />
          <member value='&quot;Wrangell Airport&quot;' />
          <member value='&quot;Yakutat Airport&quot;' />
          <member value='&quot;Yampa Valley Airport&quot;' />
          <member value='&quot;Yeager Airport&quot;' />
          <member value='&quot;Yellowstone Airport&quot;' />
          <member value='&quot;Yellowstone Regional Airport&quot;' />
          <member value='&quot;Yuma MCAS/Yuma International Airport&quot;' />
        </members>
      </column>
      <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
        <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        <members>
          <member value='&quot;ABE - Allentown/Bethlehem/Easton, PA (Lehigh Valley International Airport)&quot;' />
          <member value='&quot;ABI - Abilene, TX (Abilene Regional Airport)&quot;' />
          <member value='&quot;ABQ - Albuquerque, NM (Albuquerque International Sunport Airport)&quot;' />
          <member value='&quot;ABR - Aberdeen, SD (Aberdeen Regional Airport)&quot;' />
          <member value='&quot;ABY - Albany, GA (Southwest Georgia Regional Airport)&quot;' />
          <member value='&quot;ACK - Nantucket, MA (Nantucket Memorial Airport)&quot;' />
          <member value='&quot;ACT - Waco, TX (Waco Regional Airport)&quot;' />
          <member value='&quot;ACV - Arcata/Eureka, CA (Arcata Airport)&quot;' />
          <member value='&quot;ACY - Atlantic City, NJ (Atlantic City International Airport)&quot;' />
          <member value='&quot;ADK - Adak Island, AK (Adak Airport)&quot;' />
          <member value='&quot;ADQ - Kodiak, AK (Kodiak Airport)&quot;' />
          <member value='&quot;AEX - Alexandria, LA (Alexandria International Airport)&quot;' />
          <member value='&quot;AGS - Augusta, GA (Augusta Regional At Bush Field)&quot;' />
          <member value='&quot;AKN - King Salmon, AK (King Salmon Airport)&quot;' />
          <member value='&quot;ALB - Albany, NY (Albany International Airport)&quot;' />
          <member value='&quot;ALO - Waterloo, IA (Waterloo Regional Airport)&quot;' />
          <member value='&quot;AMA - Amarillo, TX (Rick Husband Amarillo International Airport)&quot;' />
          <member value='&quot;ANC - Anchorage, AK (Ted Stevens Anchorage International Airport)&quot;' />
          <member value='&quot;APN - Alpena, MI (Alpena County Regional Airport)&quot;' />
          <member value='&quot;ASE - Aspen, CO (Aspen-Pitkin Co/Sardy Field)&quot;' />
          <member value='&quot;ATL - Atlanta, GA (Hartsfield Jackson Atlanta International Airport)&quot;' />
          <member value='&quot;ATW - Appleton, WI (Appleton International Airport)&quot;' />
          <member value='&quot;AUS - Austin, TX (Austin Bergstrom International Airport)&quot;' />
          <member value='&quot;AVL - Asheville, NC (Asheville Regional Airport)&quot;' />
          <member value='&quot;AVP - Scranton/Wilkes-Barre, PA (Wilkes Barre Scranton International Airport)&quot;' />
          <member value='&quot;AZO - Kalamazoo, MI (Kalamazoo Battle Creek International Airport)&quot;' />
          <member value='&quot;BDL - Hartford, CT (Bradley International Airport)&quot;' />
          <member value='&quot;BET - Bethel, AK (Bethel Airport)&quot;' />
          <member value='&quot;BFL - Bakersfield, CA (Meadows Field)&quot;' />
          <member value='&quot;BGM - Binghamton, NY (Greater Binghamton/Edwin A Link field)&quot;' />
          <member value='&quot;BGR - Bangor, ME (Bangor International Airport)&quot;' />
          <member value='&quot;BHM - Birmingham, AL (Birmingham-Shuttlesworth International Airport)&quot;' />
          <member value='&quot;BIL - Billings, MT (Billings Logan International Airport)&quot;' />
          <member value='&quot;BIS - Bismarck/Mandan, ND (Bismarck Municipal Airport)&quot;' />
          <member value='&quot;BJI - Bemidji, MN (Bemidji Regional Airport)&quot;' />
          <member value='&quot;BLI - Bellingham, WA (Bellingham International Airport)&quot;' />
          <member value='&quot;BMI - Bloomington/Normal, IL (Central Illinois Regional Airport at Bloomington-Normal)&quot;' />
          <member value='&quot;BNA - Nashville, TN (Nashville International Airport)&quot;' />
          <member value='&quot;BOI - Boise, ID (Boise Air Terminal/Gowen field)&quot;' />
          <member value='&quot;BOS - Boston, MA (General Edward Lawrence Logan International Airport)&quot;' />
          <member value='&quot;BPT - Beaumont/Port Arthur, TX (Southeast Texas Regional Airport)&quot;' />
          <member value='&quot;BQK - Brunswick, GA (Brunswick Golden Isles Airport)&quot;' />
          <member value='&quot;BQN - Aguadilla, PR (Rafael Hernandez Airport)&quot;' />
          <member value='&quot;BRD - Brainerd, MN (Brainerd Lakes Regional Airport)&quot;' />
          <member value='&quot;BRO - Brownsville, TX (Brownsville South Padre Island International Airport)&quot;' />
          <member value='&quot;BRW - Barrow, AK (Wiley Post Will Rogers Memorial Airport)&quot;' />
          <member value='&quot;BTM - Butte, MT (Bert Mooney Airport)&quot;' />
          <member value='&quot;BTR - Baton Rouge, LA (Baton Rouge Metropolitan, Ryan Field)&quot;' />
          <member value='&quot;BTV - Burlington, VT (Burlington International Airport)&quot;' />
          <member value='&quot;BUF - Buffalo, NY (Buffalo Niagara International Airport)&quot;' />
          <member value='&quot;BUR - Burbank, CA (Bob Hope Airport)&quot;' />
          <member value='&quot;BWI - Baltimore, MD (Baltimore/Washington International Thurgood Marshall Airport)&quot;' />
          <member value='&quot;BZN - Bozeman, MT (Gallatin Field)&quot;' />
          <member value='&quot;CAE - Columbia, SC (Columbia Metropolitan Airport)&quot;' />
          <member value='&quot;CAK - Akron, OH (Akron Canton Regional Airport)&quot;' />
          <member value='&quot;CDC - Cedar City, UT (Cedar City Regional Airport)&quot;' />
          <member value='&quot;CDV - Cordova, AK (Merle K (Mudhole) Smith Airport)&quot;' />
          <member value='&quot;CGI - Cape Girardeau, MO (Cape Girardeau Regional Airport)&quot;' />
          <member value='&quot;CHA - Chattanooga, TN (Lovell Field)&quot;' />
          <member value='&quot;CHO - Charlottesville, VA (Charlottesville Albemarle Airport)&quot;' />
          <member value='&quot;CHS - Charleston, SC (Charleston Air Force Base-International Airport)&quot;' />
          <member value='&quot;CID - Cedar Rapids/Iowa City, IA (The Eastern Iowa Airport)&quot;' />
          <member value='&quot;CIU - Sault Ste. Marie, MI (Chippewa County International Airport)&quot;' />
          <member value='&quot;CKB - Clarksburg/Fairmont, WV (North Central West Virginia Airport)&quot;' />
          <member value='&quot;CLE - Cleveland, OH (Cleveland Hopkins International Airport)&quot;' />
          <member value='&quot;CLL - College Station/Bryan, TX (Easterwood Field)&quot;' />
          <member value='&quot;CLT - Charlotte, NC (Charlotte Douglas International Airport)&quot;' />
          <member value='&quot;CMH - Columbus, OH (Port Columbus International Airport)&quot;' />
          <member value='&quot;CMX - Hancock/Houghton, MI (Houghton County Memorial Airport)&quot;' />
          <member value='&quot;COD - Cody, WY (Yellowstone Regional Airport)&quot;' />
          <member value='&quot;COS - Colorado Springs, CO (City of Colorado Springs Municipal Airport)&quot;' />
          <member value='&quot;COU - Columbia, MO (Columbia Regional Airport)&quot;' />
          <member value='&quot;CPR - Casper, WY (Casper-Natrona County International Airport)&quot;' />
          <member value='&quot;CRP - Corpus Christi, TX (Corpus Christi International Airport)&quot;' />
          <member value='&quot;CRW - Charleston/Dunbar, WV (Yeager Airport)&quot;' />
          <member value='&quot;CSG - Columbus, GA (Columbus Metropolitan Airport)&quot;' />
          <member value='&quot;CVG - Cincinnati, OH (Cincinnati Northern Kentucky International Airport)&quot;' />
          <member value='&quot;CWA - Mosinee, WI (Central Wisconsin Airport)&quot;' />
          <member value='&quot;DAB - Daytona Beach, FL (Daytona Beach International Airport)&quot;' />
          <member value='&quot;DAL - Dallas, TX (Dallas Love Field)&quot;' />
          <member value='&quot;DAY - Dayton, OH (James M Cox Dayton International Airport)&quot;' />
          <member value='&quot;DCA - Washington, DC (Ronald Reagan Washington National Airport)&quot;' />
          <member value='&quot;DEN - Denver, CO (Denver International Airport)&quot;' />
          <member value='&quot;DFW - Dallas/Fort Worth, TX (Dallas Fort Worth International Airport)&quot;' />
          <member value='&quot;DHN - Dothan, AL (Dothan Regional Airport)&quot;' />
          <member value='&quot;DLG - Dillingham, AK (Dillingham Airport)&quot;' />
          <member value='&quot;DLH - Duluth, MN (Duluth International Airport)&quot;' />
          <member value='&quot;DRO - Durango, CO (Durango La Plata County Airport)&quot;' />
          <member value='&quot;DSM - Des Moines, IA (Des Moines International Airport)&quot;' />
          <member value='&quot;DTW - Detroit, MI (Detroit Metropolitan Wayne County Airport)&quot;' />
          <member value='&quot;DVL - Devils Lake, ND (Devils Lake Regional Airport)&quot;' />
          <member value='&quot;EAU - Eau Claire, WI (Chippewa Valley Regional Airport)&quot;' />
          <member value='&quot;ECP - Panama City, FL (Northwest Florida Beaches International Airport)&quot;' />
          <member value='&quot;EGE - Eagle, CO (Eagle County Regional Airport)&quot;' />
          <member value='&quot;EKO - Elko, NV (Elko Regional Airport)&quot;' />
          <member value='&quot;ELM - Elmira/Corning, NY (Elmira Corning Regional Airport)&quot;' />
          <member value='&quot;ELP - El Paso, TX (El Paso International Airport)&quot;' />
          <member value='&quot;ERI - Erie, PA (Erie International Tom Ridge Field)&quot;' />
          <member value='&quot;ESC - Escanaba, MI (Delta County Airport)&quot;' />
          <member value='&quot;EUG - Eugene, OR (Mahlon Sweet Field)&quot;' />
          <member value='&quot;EVV - Evansville, IN (Evansville Regional Airport)&quot;' />
          <member value='&quot;EWN - New Bern/Morehead/Beaufort, NC (Coastal Carolina Regional Airport)&quot;' />
          <member value='&quot;EWR - Newark, NJ (Newark Liberty International Airport)&quot;' />
          <member value='&quot;EYW - Key West, FL (Key West International Airport)&quot;' />
          <member value='&quot;FAI - Fairbanks, AK (Fairbanks International Airport)&quot;' />
          <member value='&quot;FAR - Fargo, ND (Hector International Airport)&quot;' />
          <member value='&quot;FAT - Fresno, CA (Fresno Yosemite International Airport)&quot;' />
          <member value='&quot;FAY - Fayetteville, NC (Fayetteville Regional Grannis Field)&quot;' />
          <member value='&quot;FCA - Kalispell, MT (Glacier Park International Airport)&quot;' />
          <member value='&quot;FLG - Flagstaff, AZ (Flagstaff Pulliam Airport)&quot;' />
          <member value='&quot;FLL - Fort Lauderdale, FL (Fort Lauderdale Hollywood International Airport)&quot;' />
          <member value='&quot;FNL - Fort Collins/Loveland, CO (Fort Collins Loveland Municipal Airport)&quot;' />
          <member value='&quot;FNT - Flint, MI (Bishop International Airport)&quot;' />
          <member value='&quot;FSD - Sioux Falls, SD (Joe Foss Field Airport)&quot;' />
          <member value='&quot;FSM - Fort Smith, AR (Fort Smith Regional Airport)&quot;' />
          <member value='&quot;FWA - Fort Wayne, IN (Fort Wayne International Airport)&quot;' />
          <member value='&quot;GCC - Gillette, WY (Gillette Campbell County Airport)&quot;' />
          <member value='&quot;GCK - Garden City, KS (Garden City Regional Airport)&quot;' />
          <member value='&quot;GEG - Spokane, WA (Spokane International Airport)&quot;' />
          <member value='&quot;GFK - Grand Forks, ND (Grand Forks International Airport)&quot;' />
          <member value='&quot;GGG - Longview, TX (East Texas Regional Airport)&quot;' />
          <member value='&quot;GJT - Grand Junction, CO (Grand Junction Regional Airport)&quot;' />
          <member value='&quot;GNV - Gainesville, FL (Gainesville Regional Airport)&quot;' />
          <member value='&quot;GPT - Gulfport/Biloxi, MS (Gulfport Biloxi International Airport)&quot;' />
          <member value='&quot;GRB - Green Bay, WI (Austin Straubel International Airport)&quot;' />
          <member value='&quot;GRI - Grand Island, NE (Central Nebraska Regional Airport)&quot;' />
          <member value='&quot;GRK - Killeen, TX (Robert Gray  Army Air Field Airport)&quot;' />
          <member value='&quot;GRR - Grand Rapids, MI (Gerald R. Ford International Airport)&quot;' />
          <member value='&quot;GSO - Greensboro/High Point, NC (Piedmont Triad International Airport)&quot;' />
          <member value='&quot;GSP - Greer, SC (Greenville Spartanburg International Airport)&quot;' />
          <member value='&quot;GST - Gustavus, AK (Gustavus Airport)&quot;' />
          <member value='&quot;GTF - Great Falls, MT (Great Falls International Airport)&quot;' />
          <member value='&quot;GTR - Columbus, MS (Golden Triangle Regional Airport)&quot;' />
          <member value='&quot;GUC - Gunnison, CO (Gunnison Crested Butte Regional Airport)&quot;' />
          <member value='&quot;GUM - Guam, TT (Antonio B. Won Pat International Airport)&quot;' />
          <member value='&quot;HDN - Hayden, CO (Yampa Valley Airport)&quot;' />
          <member value='&quot;HIB - Hibbing, MN (Range Regional Airport)&quot;' />
          <member value='&quot;HLN - Helena, MT (Helena Regional Airport)&quot;' />
          <member value='&quot;HNL - Honolulu, HI (Honolulu International Airport)&quot;' />
          <member value='&quot;HOB - Hobbs, NM (Lea County Regional Airport)&quot;' />
          <member value='&quot;HOU - Houston, TX (William P Hobby Airport)&quot;' />
          <member value='&quot;HPN - White Plains, NY (Westchester County Airport)&quot;' />
          <member value='&quot;HRL - Harlingen/San Benito, TX (Valley International Airport)&quot;' />
          <member value='&quot;HSV - Huntsville, AL (Huntsville International Carl T Jones Field)&quot;' />
          <member value='&quot;HYA - Hyannis, MA (Barnstable Municipal Boardman Polando Field)&quot;' />
          <member value='&quot;HYS - Hays, KS (Hays Regional Airport)&quot;' />
          <member value='&quot;IAD - Washington, DC (Washington Dulles International Airport)&quot;' />
          <member value='&quot;IAG - Niagara Falls, NY (Niagara Falls International Airport)&quot;' />
          <member value='&quot;IAH - Houston, TX (George Bush Intercontinental Houston Airport)&quot;' />
          <member value='&quot;ICT - Wichita, KS (Wichita Mid Continent Airport)&quot;' />
          <member value='&quot;IDA - Idaho Falls, ID (Idaho Falls Regional Airport)&quot;' />
          <member value='&quot;ILM - Wilmington, NC (Wilmington International Airport)&quot;' />
          <member value='&quot;IMT - Iron Mountain/Kingsfd, MI (Ford Airport)&quot;' />
          <member value='&quot;IND - Indianapolis, IN (Indianapolis International Airport)&quot;' />
          <member value='&quot;INL - International Falls, MN (Falls International Airport)&quot;' />
          <member value='&quot;ISN - Williston, ND (Sloulin Field International Airport)&quot;' />
          <member value='&quot;ISP - Islip, NY (Long Island Mac Arthur Airport)&quot;' />
          <member value='&quot;ITH - Ithaca/Cortland, NY (Ithaca Tompkins Regional Airport)&quot;' />
          <member value='&quot;ITO - Hilo, HI (Hilo International Airport)&quot;' />
          <member value='&quot;JAC - Jackson, WY (Jackson Hole Airport)&quot;' />
          <member value='&quot;JAN - Jackson/Vicksburg, MS (Jackson-Medgar Wiley Evers International Airport)&quot;' />
          <member value='&quot;JAX - Jacksonville, FL (Jacksonville International Airport)&quot;' />
          <member value='&quot;JFK - New York, NY (John F Kennedy International Airport)&quot;' />
          <member value='&quot;JLN - Joplin, MO (Joplin Regional Airport)&quot;' />
          <member value='&quot;JMS - Jamestown, ND (Jamestown Regional Airport)&quot;' />
          <member value='&quot;JNU - Juneau, AK (Juneau International Airport)&quot;' />
          <member value='&quot;KOA - Kona, HI (Kona International At Keahole Airport)&quot;' />
          <member value='&quot;KTN - Ketchikan, AK (Ketchikan International Airport)&quot;' />
          <member value='&quot;LAN - Lansing, MI (Capital City Airport)&quot;' />
          <member value='&quot;LAR - Laramie, WY (Laramie Regional Airport)&quot;' />
          <member value='&quot;LAS - Las Vegas, NV (McCarran International Airport)&quot;' />
          <member value='&quot;LAW - Lawton/Fort Sill, OK (Lawton Fort Sill Regional Airport)&quot;' />
          <member value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
          <member value='&quot;LBB - Lubbock, TX (Lubbock Preston Smith International Airport)&quot;' />
          <member value='&quot;LBE - Latrobe, PA (Arnold Palmer Regional Airport)&quot;' />
          <member value='&quot;LCH - Lake Charles, LA (Lake Charles Regional Airport)&quot;' />
          <member value='&quot;LEX - Lexington, KY (Blue Grass Airport)&quot;' />
          <member value='&quot;LFT - Lafayette, LA (Lafayette Regional Airport)&quot;' />
          <member value='&quot;LGA - New York, NY (La Guardia Airport)&quot;' />
          <member value='&quot;LGB - Long Beach, CA (Long Beach /Daugherty Field/ Airport)&quot;' />
          <member value='&quot;LIH - Lihue, HI (Lihue Airport)&quot;' />
          <member value='&quot;LIT - Little Rock, AR (Bill &amp; Hillary Clinton National Airport/Adams Field)&quot;' />
          <member value='&quot;LNK - Lincoln, NE (Lincoln Airport)&quot;' />
          <member value='&quot;LRD - Laredo, TX (Laredo International Airport)&quot;' />
          <member value='&quot;LSE - La Crosse, WI (La Crosse Municipal Airport)&quot;' />
          <member value='&quot;LWS - Lewiston, ID (Lewiston Nez Perce County Airport)&quot;' />
          <member value='&quot;MAF - Midland/Odessa, TX (Midland International Airport)&quot;' />
          <member value='&quot;MBS - Saginaw/Bay City/Midland, MI (MBS International Airport)&quot;' />
          <member value='&quot;MCI - Kansas City, MO (Kansas City International Airport)&quot;' />
          <member value='&quot;MCO - Orlando, FL (Orlando International Airport)&quot;' />
          <member value='&quot;MDT - Harrisburg, PA (Harrisburg International Airport)&quot;' />
          <member value='&quot;MDW - Chicago, IL (Chicago Midway International Airport)&quot;' />
          <member value='&quot;MEI - Meridian, MS (Key Field)&quot;' />
          <member value='&quot;MEM - Memphis, TN (Memphis International Airport)&quot;' />
          <member value='&quot;MFE - Mission/McAllen/Edinburg, TX (Mc Allen Miller International Airport)&quot;' />
          <member value='&quot;MFR - Medford, OR (Rogue Valley International Medford Airport)&quot;' />
          <member value='&quot;MGM - Montgomery, AL (Montgomery Regional (Dannelly Field) Airport)&quot;' />
          <member value='&quot;MHK - Manhattan/Ft. Riley, KS (Manhattan Regional Airport)&quot;' />
          <member value='&quot;MHT - Manchester, NH (Manchester Airport)&quot;' />
          <member value='&quot;MIA - Miami, FL (Miami International Airport)&quot;' />
          <member value='&quot;MKE - Milwaukee, WI (General Mitchell International Airport)&quot;' />
          <member value='&quot;MKG - Muskegon, MI (Muskegon County Airport)&quot;' />
          <member value='&quot;MLB - Melbourne, FL (Melbourne International Airport)&quot;' />
          <member value='&quot;MLI - Moline, IL (Quad City International Airport)&quot;' />
          <member value='&quot;MLU - Monroe, LA (Monroe Regional Airport)&quot;' />
          <member value='&quot;MMH - Mammoth Lakes, CA (Mammoth Yosemite Airport)&quot;' />
          <member value='&quot;MOB - Mobile, AL (Mobile Regional Airport)&quot;' />
          <member value='&quot;MOT - Minot, ND (Minot International Airport)&quot;' />
          <member value='&quot;MQT - Marquette, MI (Sawyer International Airport)&quot;' />
          <member value='&quot;MRY - Monterey, CA (Monterey Peninsula Airport)&quot;' />
          <member value='&quot;MSN - Madison, WI (Dane County Regional Truax Field)&quot;' />
          <member value='&quot;MSO - Missoula, MT (Missoula International Airport)&quot;' />
          <member value='&quot;MSP - Minneapolis, MN (Minneapolis-St Paul International/Wold-Chamberlain Airport)&quot;' />
          <member value='&quot;MSY - New Orleans, LA (Louis Armstrong New Orleans International Airport)&quot;' />
          <member value='&quot;MTJ - Montrose/Delta, CO (Montrose Regional Airport)&quot;' />
          <member value='&quot;MVY - Martha&apos;s Vineyard, MA (Martha&apos;s Vineyard Airport)&quot;' />
          <member value='&quot;MYR - Myrtle Beach, SC (Myrtle Beach International Airport)&quot;' />
          <member value='&quot;OAJ - Jacksonville/Camp Lejeune, NC (Albert J Ellis Airport)&quot;' />
          <member value='&quot;OAK - Oakland, CA (Metropolitan Oakland International Airport)&quot;' />
          <member value='&quot;OGG - Kahului, HI (Kahului Airport)&quot;' />
          <member value='&quot;OKC - Oklahoma City, OK (Will Rogers World Airport)&quot;' />
          <member value='&quot;OMA - Omaha, NE (Eppley Airfield)&quot;' />
          <member value='&quot;OME - Nome, AK (Nome Airport)&quot;' />
          <member value='&quot;ONT - Ontario, CA (Ontario International Airport)&quot;' />
          <member value='&quot;ORD - Chicago, IL (Chicago O&apos;Hare International Airport)&quot;' />
          <member value='&quot;ORF - Norfolk, VA (Norfolk International Airport)&quot;' />
          <member value='&quot;ORH - Worcester, MA (Worcester Regional Airport)&quot;' />
          <member value='&quot;OTH - North Bend/Coos Bay, OR (Southwest Oregon Regional Airport)&quot;' />
          <member value='&quot;OTZ - Kotzebue, AK (Ralph Wien Memorial Airport)&quot;' />
          <member value='&quot;PAH - Paducah, KY (Barkley Regional Airport)&quot;' />
          <member value='&quot;PBG - Plattsburgh, NY (Plattsburgh International Airport)&quot;' />
          <member value='&quot;PBI - West Palm Beach/Palm Beach, FL (Palm Beach International Airport)&quot;' />
          <member value='&quot;PDX - Portland, OR (Portland International Airport)&quot;' />
          <member value='&quot;PGD - Punta Gorda, FL (Charlotte County Airport)&quot;' />
          <member value='&quot;PHF - Newport News/Williamsburg, VA (Newport News Williamsburg International Airport)&quot;' />
          <member value='&quot;PHL - Philadelphia, PA (Philadelphia International Airport)&quot;' />
          <member value='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' />
          <member value='&quot;PIA - Peoria, IL (General Wayne A. Downing Peoria International Airport)&quot;' />
          <member value='&quot;PIB - Hattiesburg/Laurel, MS (Hattiesburg Laurel Regional Airport)&quot;' />
          <member value='&quot;PIH - Pocatello, ID (Pocatello Regional Airport)&quot;' />
          <member value='&quot;PIT - Pittsburgh, PA (Pittsburgh International Airport)&quot;' />
          <member value='&quot;PLN - Pellston, MI (Pellston Regional Airport of Emmet County Airport)&quot;' />
          <member value='&quot;PNS - Pensacola, FL (Pensacola Regional Airport)&quot;' />
          <member value='&quot;PPG - Pago Pago, TT (Pago Pago International Airport)&quot;' />
          <member value='&quot;PSC - Pasco/Kennewick/Richland, WA (Tri Cities Airport)&quot;' />
          <member value='&quot;PSE - Ponce, PR (Mercedita Airport)&quot;' />
          <member value='&quot;PSG - Petersburg, AK (Petersburg James A Johnson Airport)&quot;' />
          <member value='&quot;PSP - Palm Springs, CA (Palm Springs International Airport)&quot;' />
          <member value='&quot;PUB - Pueblo, CO (Pueblo Memorial Airport)&quot;' />
          <member value='&quot;PVD - Providence, RI (Theodore Francis Green State Airport)&quot;' />
          <member value='&quot;PWM - Portland, ME (Portland International Jetport Airport)&quot;' />
          <member value='&quot;RAP - Rapid City, SD (Rapid City Regional Airport)&quot;' />
          <member value='&quot;RDD - Redding, CA (Redding Municipal Airport)&quot;' />
          <member value='&quot;RDM - Bend/Redmond, OR (Roberts Field)&quot;' />
          <member value='&quot;RDU - Raleigh/Durham, NC (Raleigh Durham International Airport)&quot;' />
          <member value='&quot;RHI - Rhinelander, WI (Rhinelander Oneida County Airport)&quot;' />
          <member value='&quot;RIC - Richmond, VA (Richmond International Airport)&quot;' />
          <member value='&quot;RKS - Rock Springs, WY (Rock Springs Sweetwater County Airport)&quot;' />
          <member value='&quot;RNO - Reno, NV (Reno Tahoe International Airport)&quot;' />
          <member value='&quot;ROA - Roanoke, VA (Roanoke–Blacksburg Regional Airport)&quot;' />
          <member value='&quot;ROC - Rochester, NY (Greater Rochester International Airport)&quot;' />
          <member value='&quot;ROW - Roswell, NM (Roswell International Air Center Airport)&quot;' />
          <member value='&quot;RST - Rochester, MN (Rochester International Airport)&quot;' />
          <member value='&quot;RSW - Fort Myers, FL (Southwest Florida International Airport)&quot;' />
          <member value='&quot;SAF - Santa Fe, NM (Santa Fe Municipal Airport)&quot;' />
          <member value='&quot;SAN - San Diego, CA (San Diego International Airport)&quot;' />
          <member value='&quot;SAT - San Antonio, TX (San Antonio International Airport)&quot;' />
          <member value='&quot;SAV - Savannah, GA (Savannah Hilton Head International Airport)&quot;' />
          <member value='&quot;SBA - Santa Barbara, CA (Santa Barbara Municipal Airport)&quot;' />
          <member value='&quot;SBN - South Bend, IN (South Bend Regional Airport)&quot;' />
          <member value='&quot;SBP - San Luis Obispo, CA (San Luis County Regional Airport)&quot;' />
          <member value='&quot;SCC - Deadhorse, AK (Deadhorse Airport)&quot;' />
          <member value='&quot;SCE - State College, PA (University Park Airport)&quot;' />
          <member value='&quot;SDF - Louisville, KY (Louisville International Standiford Field)&quot;' />
          <member value='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' />
          <member value='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' />
          <member value='&quot;SGF - Springfield, MO (Springfield Branson National Airport)&quot;' />
          <member value='&quot;SGU - St. George, UT (St George Municipal Airport)&quot;' />
          <member value='&quot;SHV - Shreveport, LA (Shreveport Regional Airport)&quot;' />
          <member value='&quot;SIT - Sitka, AK (Sitka Rocky Gutierrez Airport)&quot;' />
          <member value='&quot;SJC - San Jose, CA (Norman Y. Mineta San Jose International Airport)&quot;' />
          <member value='&quot;SJT - San Angelo, TX (San Angelo Regional Mathis Field)&quot;' />
          <member value='&quot;SJU - San Juan, PR (Luis Munoz Marin International Airport)&quot;' />
          <member value='&quot;SLC - Salt Lake City, UT (Salt Lake City International Airport)&quot;' />
          <member value='&quot;SMF - Sacramento, CA (Sacramento International Airport)&quot;' />
          <member value='&quot;SNA - Santa Ana, CA (John Wayne Airport-Orange County Airport)&quot;' />
          <member value='&quot;SPI - Springfield, IL (Abraham Lincoln Capital Airport)&quot;' />
          <member value='&quot;SPS - Wichita Falls, TX (Sheppard Air Force Base-Wichita Falls Municipal Airport)&quot;' />
          <member value='&quot;SRQ - Sarasota/Bradenton, FL (Sarasota Bradenton International Airport)&quot;' />
          <member value='&quot;STL - St. Louis, MO (Lambert St Louis International Airport)&quot;' />
          <member value='&quot;STS - Santa Rosa, CA (Charles M. Schulz Sonoma County Airport)&quot;' />
          <member value='&quot;STT - Charlotte Amalie, VI (Cyril E. King Airport)&quot;' />
          <member value='&quot;STX - Christiansted, VI (Henry E Rohlsen Airport)&quot;' />
          <member value='&quot;SUN - Sun Valley/Hailey/Ketchum, ID (Friedman Memorial Airport)&quot;' />
          <member value='&quot;SUX - Sioux City, IA (Sioux Gateway Col. Bud Day Field)&quot;' />
          <member value='&quot;SWF - Newburgh/Poughkeepsie, NY (Stewart International Airport)&quot;' />
          <member value='&quot;SYR - Syracuse, NY (Syracuse Hancock International Airport)&quot;' />
          <member value='&quot;TLH - Tallahassee, FL (Tallahassee Regional Airport)&quot;' />
          <member value='&quot;TOL - Toledo, OH (Toledo Express Airport)&quot;' />
          <member value='&quot;TPA - Tampa, FL (Tampa International Airport)&quot;' />
          <member value='&quot;TRI - Bristol/Johnson City/Kingsport, TN (Tri Cities Regional Tn Va Airport)&quot;' />
          <member value='&quot;TTN - Trenton, NJ (Trenton Mercer Airport)&quot;' />
          <member value='&quot;TUL - Tulsa, OK (Tulsa International Airport)&quot;' />
          <member value='&quot;TUS - Tucson, AZ (Tucson International Airport)&quot;' />
          <member value='&quot;TVC - Traverse City, MI (Cherry Capital Airport)&quot;' />
          <member value='&quot;TWF - Twin Falls, ID (Joslin Field Magic Valley Regional Airport)&quot;' />
          <member value='&quot;TXK - Texarkana, AR (Texarkana Regional Webb Field)&quot;' />
          <member value='&quot;TYR - Tyler, TX (Tyler Pounds Regional Airport)&quot;' />
          <member value='&quot;TYS - Knoxville, TN (McGhee Tyson Airport)&quot;' />
          <member value='&quot;UIN - Quincy, IL (Quincy Regional Baldwin Field)&quot;' />
          <member value='&quot;UST - St. Augustine, FL (Northeast Florida Regional Airport)&quot;' />
          <member value='&quot;VLD - Valdosta, GA (Valdosta Regional Airport)&quot;' />
          <member value='&quot;VPS - Valparaiso, FL (Destin-Ft Walton Beach Airport)&quot;' />
          <member value='&quot;WRG - Wrangell, AK (Wrangell Airport)&quot;' />
          <member value='&quot;WYS - West Yellowstone, MT (Yellowstone Airport)&quot;' />
          <member value='&quot;XNA - Fayetteville, AR (Northwest Arkansas Regional Airport)&quot;' />
          <member value='&quot;YAK - Yakutat, AK (Yakutat Airport)&quot;' />
          <member value='&quot;YUM - Yuma, AZ (Yuma MCAS/Yuma International Airport)&quot;' />
        </members>
      </column>
      <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
        <calculation class='tableau' formula='100.0' />
        <range granularity='5.0' max='200.0' min='0.0' />
      </column>
      <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
        <calculation class='tableau' formula='&quot;Departure&quot;' />
        <members>
          <member value='&quot;Arrival&quot;' />
          <member value='&quot;Departure&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Airport Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meadows Field&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mercedita Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Central West Virginia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle Tacoma International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampa International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tri Cities Airport&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Wichita Mid Continent Airport&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South Bend Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Springfield Branson National Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Pounds Regional Airport&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;The Eastern Iowa Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane International Airport&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Theodore Francis Green State Airport&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='airport_delays' inline='true' name='federated.0pfv4211ega3oh17lckf50a9x4eu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airport_delays' name='textscan.1mz03xn162phb810hklkc1o1bxv0'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='airport_delays.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1mz03xn162phb810hklkc1o1bxv0' name='airport_delays.csv' table='[airport_delays#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airport' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='string' name='Carrier' ordinal='5' />
            <column datatype='string' name='FlightDateDay' ordinal='6' />
            <column datatype='real' name='Hour' ordinal='7' />
            <column datatype='real' name='DepartureDelay' ordinal='8' />
            <column datatype='real' name='ArrivalDelay' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDateDay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FlightDateDay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>FlightDateDay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
      <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
      <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
      <column caption='Flight Date Day' datatype='string' name='[FlightDateDay]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Sum' name='[sum:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Airport)' hidden='true' name='[Action (Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Airport]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/airport_delays.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/10/2018 12:13:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='165091' timestamp-start='2018-08-10 00:13:45.543' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport</remote-alias>
              <ordinal>0</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>5</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDateDay</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FlightDateDay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDateDay</remote-alias>
              <ordinal>6</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>7</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>8</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>9</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1328</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.29868' measure-ordering='alphabetic' measure-percentage='0.506601' parameter-percentage='0.194719' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>2</bucket>
            </map>
            <map to='asterisk'>
              <bucket>92</bucket>
            </map>
            <map to='asterisk'>
              <bucket>130</bucket>
            </map>
            <map to='asterisk'>
              <bucket>168</bucket>
            </map>
            <map to='asterisk'>
              <bucket>218</bucket>
            </map>
            <map to='asterisk'>
              <bucket>254</bucket>
            </map>
            <map to='asterisk'>
              <bucket>300</bucket>
            </map>
            <map to='asterisk'>
              <bucket>352</bucket>
            </map>
            <map to='asterisk'>
              <bucket>398</bucket>
            </map>
            <map to='asterisk'>
              <bucket>436</bucket>
            </map>
            <map to='asterisk'>
              <bucket>474</bucket>
            </map>
            <map to='asterisk'>
              <bucket>554</bucket>
            </map>
            <map to='asterisk'>
              <bucket>606</bucket>
            </map>
            <map to='asterisk'>
              <bucket>690</bucket>
            </map>
            <map to='asterisk'>
              <bucket>758</bucket>
            </map>
            <map to='asterisk'>
              <bucket>844</bucket>
            </map>
            <map to='asterisk'>
              <bucket>916</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1076</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1382</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1564</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1842</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2092</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2336</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2692</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2940</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3212</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3480</bucket>
            </map>
            <map to='circle'>
              <bucket>70</bucket>
            </map>
            <map to='circle'>
              <bucket>112</bucket>
            </map>
            <map to='circle'>
              <bucket>146</bucket>
            </map>
            <map to='circle'>
              <bucket>208</bucket>
            </map>
            <map to='circle'>
              <bucket>238</bucket>
            </map>
            <map to='circle'>
              <bucket>278</bucket>
            </map>
            <map to='circle'>
              <bucket>336</bucket>
            </map>
            <map to='circle'>
              <bucket>376</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='circle'>
              <bucket>422</bucket>
            </map>
            <map to='circle'>
              <bucket>456</bucket>
            </map>
            <map to='circle'>
              <bucket>530</bucket>
            </map>
            <map to='circle'>
              <bucket>584</bucket>
            </map>
            <map to='circle'>
              <bucket>680</bucket>
            </map>
            <map to='circle'>
              <bucket>730</bucket>
            </map>
            <map to='circle'>
              <bucket>824</bucket>
            </map>
            <map to='circle'>
              <bucket>894</bucket>
            </map>
            <map to='circle'>
              <bucket>1020</bucket>
            </map>
            <map to='circle'>
              <bucket>1268</bucket>
            </map>
            <map to='circle'>
              <bucket>1490</bucket>
            </map>
            <map to='circle'>
              <bucket>1706</bucket>
            </map>
            <map to='circle'>
              <bucket>2040</bucket>
            </map>
            <map to='circle'>
              <bucket>2170</bucket>
            </map>
            <map to='circle'>
              <bucket>2574</bucket>
            </map>
            <map to='circle'>
              <bucket>2818</bucket>
            </map>
            <map to='circle'>
              <bucket>3162</bucket>
            </map>
            <map to='circle'>
              <bucket>3426</bucket>
            </map>
            <map to='circle'>
              <bucket>3774</bucket>
            </map>
            <map to='diamond'>
              <bucket>14</bucket>
            </map>
            <map to='diamond'>
              <bucket>96</bucket>
            </map>
            <map to='diamond'>
              <bucket>136</bucket>
            </map>
            <map to='diamond'>
              <bucket>172</bucket>
            </map>
            <map to='diamond'>
              <bucket>220</bucket>
            </map>
            <map to='diamond'>
              <bucket>262</bucket>
            </map>
            <map to='diamond'>
              <bucket>302</bucket>
            </map>
            <map to='diamond'>
              <bucket>358</bucket>
            </map>
            <map to='diamond'>
              <bucket>400</bucket>
            </map>
            <map to='diamond'>
              <bucket>444</bucket>
            </map>
            <map to='diamond'>
              <bucket>478</bucket>
            </map>
            <map to='diamond'>
              <bucket>558</bucket>
            </map>
            <map to='diamond'>
              <bucket>607</bucket>
            </map>
            <map to='diamond'>
              <bucket>692</bucket>
            </map>
            <map to='diamond'>
              <bucket>762</bucket>
            </map>
            <map to='diamond'>
              <bucket>846</bucket>
            </map>
            <map to='diamond'>
              <bucket>950</bucket>
            </map>
            <map to='diamond'>
              <bucket>1106</bucket>
            </map>
            <map to='diamond'>
              <bucket>1386</bucket>
            </map>
            <map to='diamond'>
              <bucket>1568</bucket>
            </map>
            <map to='diamond'>
              <bucket>1858</bucket>
            </map>
            <map to='diamond'>
              <bucket>2108</bucket>
            </map>
            <map to='diamond'>
              <bucket>2362</bucket>
            </map>
            <map to='diamond'>
              <bucket>2710</bucket>
            </map>
            <map to='diamond'>
              <bucket>3034</bucket>
            </map>
            <map to='diamond'>
              <bucket>3308</bucket>
            </map>
            <map to='diamond'>
              <bucket>3518</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>36</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>46</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>104</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>140</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>194</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>224</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>266</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>314</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>366</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>410</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>450</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>492</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>570</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>710</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>786</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>868</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>988</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1152</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1436</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1582</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1892</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2122</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2400</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2788</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3050</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3332</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3562</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>38</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>56</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>108</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>142</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>200</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>226</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>268</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>324</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>368</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>414</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>452</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>494</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>574</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>662</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>714</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>812</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>880</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>996</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1162</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1446</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1592</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1994</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2150</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2410</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2794</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3140</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3704</bucket>
            </map>
            <map to='plus'>
              <bucket>76</bucket>
            </map>
            <map to='plus'>
              <bucket>122</bucket>
            </map>
            <map to='plus'>
              <bucket>164</bucket>
            </map>
            <map to='plus'>
              <bucket>214</bucket>
            </map>
            <map to='plus'>
              <bucket>250</bucket>
            </map>
            <map to='plus'>
              <bucket>292</bucket>
            </map>
            <map to='plus'>
              <bucket>344</bucket>
            </map>
            <map to='plus'>
              <bucket>382</bucket>
            </map>
            <map to='plus'>
              <bucket>430</bucket>
            </map>
            <map to='plus'>
              <bucket>466</bucket>
            </map>
            <map to='plus'>
              <bucket>548</bucket>
            </map>
            <map to='plus'>
              <bucket>590</bucket>
            </map>
            <map to='plus'>
              <bucket>684</bucket>
            </map>
            <map to='plus'>
              <bucket>742</bucket>
            </map>
            <map to='plus'>
              <bucket>834</bucket>
            </map>
            <map to='plus'>
              <bucket>908</bucket>
            </map>
            <map to='plus'>
              <bucket>1054</bucket>
            </map>
            <map to='plus'>
              <bucket>1344</bucket>
            </map>
            <map to='plus'>
              <bucket>1544</bucket>
            </map>
            <map to='plus'>
              <bucket>1770</bucket>
            </map>
            <map to='plus'>
              <bucket>2066</bucket>
            </map>
            <map to='plus'>
              <bucket>2202</bucket>
            </map>
            <map to='plus'>
              <bucket>2628</bucket>
            </map>
            <map to='plus'>
              <bucket>2894</bucket>
            </map>
            <map to='plus'>
              <bucket>3172</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='plus'>
              <bucket>3474</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>42</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>66</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>110</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>144</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>206</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>232</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>274</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>330</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>370</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>418</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>454</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>582</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>724</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>814</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>884</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1014</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1234</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1488</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2024</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2166</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2796</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3154</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3390</bucket>
            </map>
            <map to='square'>
              <bucket>74</bucket>
            </map>
            <map to='square'>
              <bucket>118</bucket>
            </map>
            <map to='square'>
              <bucket>154</bucket>
            </map>
            <map to='square'>
              <bucket>212</bucket>
            </map>
            <map to='square'>
              <bucket>242</bucket>
            </map>
            <map to='square'>
              <bucket>290</bucket>
            </map>
            <map to='square'>
              <bucket>338</bucket>
            </map>
            <map to='square'>
              <bucket>378</bucket>
            </map>
            <map to='square'>
              <bucket>424</bucket>
            </map>
            <map to='square'>
              <bucket>464</bucket>
            </map>
            <map to='square'>
              <bucket>538</bucket>
            </map>
            <map to='square'>
              <bucket>588</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='square'>
              <bucket>682</bucket>
            </map>
            <map to='square'>
              <bucket>734</bucket>
            </map>
            <map to='square'>
              <bucket>791</bucket>
            </map>
            <map to='square'>
              <bucket>832</bucket>
            </map>
            <map to='square'>
              <bucket>900</bucket>
            </map>
            <map to='square'>
              <bucket>1026</bucket>
            </map>
            <map to='square'>
              <bucket>1288</bucket>
            </map>
            <map to='square'>
              <bucket>1516</bucket>
            </map>
            <map to='square'>
              <bucket>1736</bucket>
            </map>
            <map to='square'>
              <bucket>2054</bucket>
            </map>
            <map to='square'>
              <bucket>2172</bucket>
            </map>
            <map to='square'>
              <bucket>2582</bucket>
            </map>
            <map to='square'>
              <bucket>2878</bucket>
            </map>
            <map to='square'>
              <bucket>3166</bucket>
            </map>
            <map to='square'>
              <bucket>3446</bucket>
            </map>
            <map to='times'>
              <bucket>78</bucket>
            </map>
            <map to='times'>
              <bucket>124</bucket>
            </map>
            <map to='times'>
              <bucket>166</bucket>
            </map>
            <map to='times'>
              <bucket>216</bucket>
            </map>
            <map to='times'>
              <bucket>252</bucket>
            </map>
            <map to='times'>
              <bucket>298</bucket>
            </map>
            <map to='times'>
              <bucket>346</bucket>
            </map>
            <map to='times'>
              <bucket>386</bucket>
            </map>
            <map to='times'>
              <bucket>432</bucket>
            </map>
            <map to='times'>
              <bucket>470</bucket>
            </map>
            <map to='times'>
              <bucket>550</bucket>
            </map>
            <map to='times'>
              <bucket>598</bucket>
            </map>
            <map to='times'>
              <bucket>688</bucket>
            </map>
            <map to='times'>
              <bucket>756</bucket>
            </map>
            <map to='times'>
              <bucket>838</bucket>
            </map>
            <map to='times'>
              <bucket>914</bucket>
            </map>
            <map to='times'>
              <bucket>1072</bucket>
            </map>
            <map to='times'>
              <bucket>1356</bucket>
            </map>
            <map to='times'>
              <bucket>1546</bucket>
            </map>
            <map to='times'>
              <bucket>1816</bucket>
            </map>
            <map to='times'>
              <bucket>2072</bucket>
            </map>
            <map to='times'>
              <bucket>2274</bucket>
            </map>
            <map to='times'>
              <bucket>2650</bucket>
            </map>
            <map to='times'>
              <bucket>2934</bucket>
            </map>
            <map to='times'>
              <bucket>3202</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
            <map to='times'>
              <bucket>3706</bucket>
            </map>
            <map to='triangle'>
              <bucket>16</bucket>
            </map>
            <map to='triangle'>
              <bucket>44</bucket>
            </map>
            <map to='triangle'>
              <bucket>98</bucket>
            </map>
            <map to='triangle'>
              <bucket>138</bucket>
            </map>
            <map to='triangle'>
              <bucket>192</bucket>
            </map>
            <map to='triangle'>
              <bucket>222</bucket>
            </map>
            <map to='triangle'>
              <bucket>264</bucket>
            </map>
            <map to='triangle'>
              <bucket>306</bucket>
            </map>
            <map to='triangle'>
              <bucket>364</bucket>
            </map>
            <map to='triangle'>
              <bucket>448</bucket>
            </map>
            <map to='triangle'>
              <bucket>484</bucket>
            </map>
            <map to='triangle'>
              <bucket>560</bucket>
            </map>
            <map to='triangle'>
              <bucket>612</bucket>
            </map>
            <map to='triangle'>
              <bucket>706</bucket>
            </map>
            <map to='triangle'>
              <bucket>764</bucket>
            </map>
            <map to='triangle'>
              <bucket>850</bucket>
            </map>
            <map to='triangle'>
              <bucket>958</bucket>
            </map>
            <map to='triangle'>
              <bucket>1146</bucket>
            </map>
            <map to='triangle'>
              <bucket>1432</bucket>
            </map>
            <map to='triangle'>
              <bucket>1578</bucket>
            </map>
            <map to='triangle'>
              <bucket>1882</bucket>
            </map>
            <map to='triangle'>
              <bucket>2116</bucket>
            </map>
            <map to='triangle'>
              <bucket>2394</bucket>
            </map>
            <map to='triangle'>
              <bucket>2732</bucket>
            </map>
            <map to='triangle'>
              <bucket>3046</bucket>
            </map>
            <map to='triangle'>
              <bucket>3360</bucket>
            </map>
            <map to='triangle'>
              <bucket>3556</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[min:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>1</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>2</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Airport' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Calculation_4686839867435659276' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='FlightDateDay' />
        <field-sort-custom-order field='Hour' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='Calculation_4577416469211852804' />
        <field-sort-custom-order field='Calculation_4577416469212676102' />
        <field-sort-custom-order field='Calculation_4686839866503639046' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
          <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        </column>
        <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
          <calculation class='tableau' formula='100.0' />
          <range granularity='5.0' max='200.0' min='0.0' />
        </column>
        <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
          <calculation class='tableau' formula='&quot;Departure&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='flights' inline='true' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.11sx92m094fgux1366mhm0wdq491'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='flights.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11sx92m094fgux1366mhm0wdq491' name='flights.csv' table='[flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='FlightDate' ordinal='0' />
            <column datatype='string' name='OriginCode' ordinal='1' />
            <column datatype='string' name='OriginCity' ordinal='2' />
            <column datatype='string' name='DestinationCode' ordinal='3' />
            <column datatype='string' name='DestinationCity' ordinal='4' />
            <column datatype='integer' name='DepartureTimeScheduled' ordinal='5' />
            <column datatype='real' name='DepartureTimeActual' ordinal='6' />
            <column datatype='real' name='DepartureDelay' ordinal='7' />
            <column datatype='real' name='DepartureDelayCapped' ordinal='8' />
            <column datatype='integer' name='ArrivalTimeScheduled' ordinal='9' />
            <column datatype='real' name='ArrivalTimeActual' ordinal='10' />
            <column datatype='real' name='ArrivalDelay' ordinal='11' />
            <column datatype='real' name='ArrivalDelayCapped' ordinal='12' />
            <column datatype='real' name='Cancelled' ordinal='13' />
            <column datatype='real' name='Diverted' ordinal='14' />
            <column datatype='real' name='TotalTimeScheduled' ordinal='15' />
            <column datatype='real' name='TotalTimeActual' ordinal='16' />
            <column datatype='string' name='OriginAirport' ordinal='17' />
            <column datatype='real' name='OriginLatitude' ordinal='18' />
            <column datatype='real' name='OriginLongitude' ordinal='19' />
            <column datatype='string' name='DestinationAirport' ordinal='20' />
            <column datatype='real' name='DestinationLatitude' ordinal='21' />
            <column datatype='real' name='DestinationLongitude' ordinal='22' />
            <column datatype='string' name='Carrier' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeScheduled</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeActual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelayCapped</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeScheduled</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeActual</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelayCapped</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeScheduled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeScheduled</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeActual</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginAirport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLatitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLongitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationAirport</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLatitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLongitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='*0000' name='[ArrivalTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[ArrivalTimeScheduled]' role='measure' type='quantitative' />
      <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
      </column>
      <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
      </column>
      <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
      </column>
      <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
      </column>
      <column caption='ArrivalTimeActualDateTime' datatype='datetime' name='[Calculation_3516959494379470854]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([ArrivalTimeActual]), 4))' />
      </column>
      <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
      <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[DepartureTimeScheduled]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
      <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
      <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='OriginLatitude' datatype='real' name='[OriginLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='OriginLongitude' datatype='real' name='[OriginLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='TotalTimeActual' datatype='real' name='[TotalTimeActual]' role='measure' type='quantitative' />
      <column caption='TotalTimeScheduled' datatype='real' name='[TotalTimeScheduled]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(DepartureTimeActualDateTime),Carrier)' hidden='true' name='[Action (HOUR(DepartureTimeActualDateTime),Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/flights.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCode</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCity</remote-alias>
              <ordinal>2</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCode</remote-alias>
              <ordinal>3</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCity</remote-alias>
              <ordinal>4</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepartureTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeScheduled</remote-alias>
              <ordinal>5</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>393</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeActual</remote-alias>
              <ordinal>6</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1037</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>7</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelayCapped</remote-alias>
              <ordinal>8</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrivalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeScheduled</remote-alias>
              <ordinal>9</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>736</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeActual</remote-alias>
              <ordinal>10</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1162</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>11</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelayCapped</remote-alias>
              <ordinal>12</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>13</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>14</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeScheduled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeScheduled</remote-alias>
              <ordinal>15</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeActual</remote-alias>
              <ordinal>16</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirport</remote-alias>
              <ordinal>17</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLatitude</remote-alias>
              <ordinal>18</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLongitude</remote-alias>
              <ordinal>19</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationAirport</remote-alias>
              <ordinal>20</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLatitude</remote-alias>
              <ordinal>21</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLongitude</remote-alias>
              <ordinal>22</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>23</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.481848' measure-ordering='alphabetic' measure-percentage='0.379538' parameter-percentage='0.138614' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Carrier:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ExpressJet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SkyWest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;JetBlue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spirit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='FlightDate' />
        <field-sort-custom-order field='Calculation_3516959494370541571' />
        <field-sort-custom-order field='OriginCode' />
        <field-sort-custom-order field='OriginCity' />
        <field-sort-custom-order field='Calculation_3516959494367801346' />
        <field-sort-custom-order field='DestinationCode' />
        <field-sort-custom-order field='DestinationCity' />
        <field-sort-custom-order field='Calculation_3516959494367354881' />
        <field-sort-custom-order field='DepartureTimeScheduled' />
        <field-sort-custom-order field='DepartureTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494374559748' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='DepartureDelayCapped' />
        <field-sort-custom-order field='ArrivalTimeScheduled' />
        <field-sort-custom-order field='ArrivalTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494379470854' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='ArrivalDelayCapped' />
        <field-sort-custom-order field='Cancelled' />
        <field-sort-custom-order field='Diverted' />
        <field-sort-custom-order field='TotalTimeScheduled' />
        <field-sort-custom-order field='TotalTimeActual' />
        <field-sort-custom-order field='OriginAirport' />
        <field-sort-custom-order field='OriginLatitude' />
        <field-sort-custom-order field='OriginLongitude' />
        <field-sort-custom-order field='DestinationAirport' />
        <field-sort-custom-order field='DestinationLatitude' />
        <field-sort-custom-order field='DestinationLongitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='DepDelay' />
        <field-sort-custom-order field='DestCity' />
        <field-sort-custom-order field='Flights' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AirportArrivalDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average arrival delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ArrivalDelay]' derivation='Avg' name='[avg:ArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' scope='cols' value='Average arrival delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average arrival delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AirportDepartureDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='ASC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day of week'>
              <formatted-text>
                <run>Day of week</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='rows' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='MapWithRadiusFilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
            <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
              <calculation class='tableau' formula='&quot;Departure&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_4686839867444486165]' derivation='Avg' name='[avg:Calculation_4686839867444486165:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Code]' derivation='Min' name='[min:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4577416469212676102]' derivation='User' name='[usr:Calculation_4577416469212676102:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' value='Average delay (minutes)'>
              <formatted-text>
                <run>Average delay (minutes)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' />
              <shape column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:ok]' />
              <tooltip column='[Parameters].[Parameter 2]' />
              <tooltip column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]' />
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Code:nk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Delay Type:&#9;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distance from selected airport:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]&gt; miles</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SelectedAirport'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='271' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='DESC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='cols' value='Number of flights' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt; flights</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='rows' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BestAirport'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_19' value='bottom' />
          <format attr='vertical-align' id='dash-text_20' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82560' id='5' param='horz' type='layout-flow' w='98476' x='762' y='16800'>
            <zone h='82560' id='3' type='layout-basic' w='83238' x='762' y='16800'>
              <zone h='19270' id='11' name='AirportDepartureDelays' w='83238' x='762' y='60973'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19117' id='14' name='AirportArrivalDelays' w='83238' x='762' y='80243'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44173' id='15' name='MapWithRadiusFilter' show-title='false' w='83238' x='762' y='16800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='82560' id='4' is-fixed='true' param='vert' type='layout-flow' w='15238' x='84000' y='16800'>
              <zone custom-title='true' fixed-size='45' h='4240' id='17' is-fixed='true' mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='paramctrl' w='15238' x='84000' y='16800'>
                <formatted-text>
                  <run>Airport</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='68' h='6080' id='13' is-fixed='true' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='15238' x='84000' y='21040'>
                <formatted-text>
                  <run>Dist. from airport (miles)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='41' h='3920' id='18' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='15238' x='84000' y='27120'>
                <formatted-text>
                  <run>Type of delay (color)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='701' h='56720' id='16' is-fixed='true' name='MapWithRadiusFilter' pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' w='15238' x='84000' y='31040'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11520' id='19' type='text' w='15238' x='84000' y='87760'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000'>Data</run>
                  <run> Airline On-Time Performance Data - </run>
                  <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000'>Source</run>
                  <run> US Department of Transportation Bureau of Transportation Statistics&#10;</run>
                  <run bold='true' fontcolor='#000000'>Dates</run>
                  <run> All flights in 2017</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='16160' id='20' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the best airport</run>
              <run>&#10;&#10;Different airports have different on-time performance. &#10;&#10;To use this visualization, choose the airport you&apos;d normally use. The map automatically updates to show all airports within the specified distance. The color of the airport circle shows the average delay in minutes for that airport (either departure or arrival depending on the choice in the </run>
              <run bold='true'>Type of delay</run>
              <run> drop down). The average departure and arrival delay is shown in bar charts below the map.&#10;&#10;</run>
              <run bold='true'>Note</run>
              <run>: If the map doesn&apos;t change when you choose a different airport or distance, make sure the push pin image that appears on the left side of the map when the cursor is in the map does not contain an X. If it does, click the push pin. (The X indicates that the map is &apos;fixed&apos; and won&apos;t change when different selections are made.)&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bon Voyage' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Book' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='178' />
        </style-rule>
      </style>
      <size maxheight='1450' maxwidth='1075' minheight='1450' minwidth='1075' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98896' id='10' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='552'>
            <zone h='3311' id='11' type='title' w='98512' x='744' y='552'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='95585' id='8' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
              <zone h='95585' id='1' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
                <zone h='6966' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98512' x='744' y='3863' />
                <zone h='88619' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98512' x='744' y='10829'>
                  <flipboard active-id='2' nav-type='caption' show-nav-arrows='false'>
                    <story-points>
                      <story-point caption='Find the optimal flight' captured-sheet='OptimalFlight' id='1' />
                      <story-point caption='Find the best airport' captured-sheet='BestAirport' id='2'>
                        <capturedDeltas>
                          <worksheet name='MapRadiusFilter'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <datasource name='Parameters'>
                            <column name='[Airport Parameter]' value='&quot;Seattle Tacoma International Airport&quot;' />
                          </datasource>
                        </capturedDeltas>
                      </story-point>
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='OptimalFlight'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_18' value='bottom' />
          <format attr='vertical-align' id='dash-text_17' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
        <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
        </column>
        <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
        </column>
        <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
        </column>
        <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='87680' id='10' param='horz' type='layout-flow' w='98476' x='762' y='11680'>
            <zone h='87680' id='5' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='83238' x='762' y='11680'>
              <zone h='87680' id='3' type='layout-basic' w='83238' x='762' y='11680'>
                <zone h='21916' id='1' name='AvgDepDelayByCarrier' w='83238' x='762' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22566' id='8' name='TotalFlightsByCarrier' w='83238' x='762' y='55516'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21920' id='14' name='AvgDepDelayByHour' w='83238' x='762' y='33596'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21278' id='16' name='TotalFlightsByHour' w='83238' x='762' y='78082'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='87680' id='19' is-fixed='true' type='layout-basic' w='15238' x='84000' y='11680'>
              <zone h='72400' id='9' param='vert' type='layout-flow' w='15238' x='84000' y='11680'>
                <zone h='4160' id='11' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' type='filter' values='relevant' w='15238' x='84000' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='12' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' type='filter' values='relevant' w='15238' x='84000' y='15840'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='13' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' type='filter' values='database' w='15238' x='84000' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='470' h='38240' id='15' is-fixed='true' name='AvgDepDelayByHour' pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' w='15238' x='84000' y='24160'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='15280' id='20' param='vert' type='layout-flow' w='15238' x='84000' y='84080'>
                <zone fixed-size='208' forceUpdate='true' h='15280' id='18' is-fixed='true' type='text' w='15238' x='84000' y='84080'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000'>Data</run>
                    <run> Airline On-Time Performance Data - </run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000'>Source</run>
                    <run> US Department of Transportation Bureau of Transportation Statistics&#10;</run>
                    <run bold='true' fontcolor='#000000'>Dates</run>
                    <run> All flights in 2017</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='11040' id='17' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the optimal flight</run>
              <run>&#10;&#10;Different airlines and different times of the day have different on-time performance, even at the same airports. There are different numbers of flights at different hours of the day. &#10;&#10;To use this visualization, choose the origin and destination airport. The charts will update automatically to show the average departure delay and number of flights. You can optionally choose to only show the results from a particular day of the week.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='AvgDepDelayByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgDepDelayByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='OptimalFlight'>
      <viewpoints>
        <viewpoint name='AvgDepDelayByCarrier' />
        <viewpoint name='AvgDepDelayByHour'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalFlightsByCarrier' />
        <viewpoint name='TotalFlightsByHour'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='BestAirport'>
      <viewpoints>
        <viewpoint name='AirportArrivalDelays' />
        <viewpoint name='AirportDepartureDelays' />
        <viewpoint name='MapWithRadiusFilter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Bon Voyage'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' maximized='true' name='MapWithRadiusFilter'>
      <cards>
        <edge name='left'>
          <strip size='295'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Code:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportDepartureDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportArrivalDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SelectedAirport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='278' name='AirportArrivalDelays' width='384'>
      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
      BYCIXBQz7bOx2ZJ7u8yTkx2kpGXgziuirP15Hq5swF9XyYEbdlKUMU2l6tyndEYgQv9pOPbL
      Upkxyl2Mp109ravZ/jA1w+49wtkxNGckCgARuUiGnt+e5l7B6kUHqW6L0HkyDBlT9QKHARxu
      tlZVTXAn429XVmEJeak2zgyx33AslfTRJtEoKABE5JJ02ewkGHAl/scgUbt6IiNvWTmlmdNX
      lvUcgIhceqI+XmyOT5mc2jf4TLOE7XJw3ZIsAGr/5cAw9w8QDYWITuLpKABE5JIRi4bpaD/A
      jgd34ANgETe4PpszgfoaqV2uZbfGh519NTzydBOhgduHu2h6/knu2/jfOTyJr8b4I4pWEfks
      aazcyCG7nUgE7HaIRAZ299ip2HA3Q/WINFZupDHhEju3b/57lmdO3nv3x2Jc7UrL5/sVh9he
      20bAU81Gz6/JLVzK/Jmn+eCDd2nz9UwrdTIzwRjAcB1lwy1TAIjItLI5knp/7ymOfWukPTWL
      62+5ldLifNIT1fARq1aErlNRSDijfupMtF3Zpffx46x97KqqwR+x8Hoa+iy148ov5baKYrL7
      bDuj+5+xIGPuoP2NZtnnzp8/f360DRQRkakWI9TVxcenYthsNmbNmk3KvBSSp+ByXQEgImIo
      DQKLiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhK
      ASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQA
      IiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG
      UgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG+v+ZxPEl
      SyKLJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='278' name='AirportDepartureDelays' width='384'>
      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
      BYCIXBQz7bOx2ZJ7u8yTkx2kpGXgziuirP15Hq5swF9XyYEbdlKUMU2l6tyndEYgQv9pOPbL
      Upkxyl2Mp109ravZ/jA1w+49wtkxNGckCgARuUiGnt+e5l7B6kUHqW6L0HkyDBlT9QKHARxu
      tlZVTXAn429XVmEJeak2zgyx33AslfTRJtEoKABE5JJ02ewkGHAl/scgUbt6IiNvWTmlmdNX
      lvUcgIhceqI+XmyOT5mc2jf4TLOE7XJw3ZIsAGr/5cAw9w8QDYWITuLpKABE5JIRi4bpaD/A
      jgd34ANgETe4PpszgfoaqV2uZbfGh519NTzydBOhgduHu2h6/knu2/jfOTyJr8b4I4pWEfks
      aazcyCG7nUgE7HaIRAZ299ip2HA3Q/WINFZupDHhEju3b/57lmdO3nv3x2Jc7UrL5/sVh9he
      20bAU81Gz6/JLVzK/Jmn+eCDd2nz9UwrdTIzwRjAcB1lwy1TAIjItLI5knp/7ymOfWukPTWL
      62+5ldLifNIT1fARq1aErlNRSDijfupMtF3Zpffx46x97KqqwR+x8Hoa+iy148ov5baKYrL7
      bDuj+5+xIGPuoP2NZtnnzp8/f360DRQRkakWI9TVxcenYthsNmbNmk3KvBSSp+ByXQEgImIo
      DQKLiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhK
      ASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQA
      IiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG
      UgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG+v+ZxPEl
      SyKLJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='318' name='AvgDepDelayByCarrier' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='AvgDepDelayByHour' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='BestAirport' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Bon Voyage' width='384'>
      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
      T6UofPhD9/HcX37L/lONvG/Nsug8nU6H3TZEZOxG9Yh9gD8//9L50g0xfGjDrfzLl7/I3kPH
      qT5bzhM/eZzdp+qjdbhlzS0889un6Ogbiq6t7vZGntu49Q20e2KSZwCS9A7UWnucpUsWAyCE
      ICU9kyXLb+SLX3gERQG9JZEfPf6f/PO/foNnJ+egiCAdvU4e/+FPiDWMXrJRNFou+VkvoLzG
      977VN6/h7gc/S+nytSRbxncRH3jwERpbv8GGDXdTNCWbxoYGFt98Fx++6+Zx6UoWrCZD83OS
      Ft9Covl8HgtX3sIzf3me+z74EdISrfT02rntpsXQ7ojW7oFH/xlr+l/4+zO/RdUauPHm97Fq
      Xm00j7mrbufB5jYe+sg9ZOXkEfJ78PjhkUcfe93rVxqlCCHEayeTJOmdKBwKUF9Xj6roKC4p
      xqDTvvZCr0Wo2IeGMZnNxFgsl84WgoHebrp6+5mcO4WMlMTLpFH50ic+yAe+9DgrSgsuyl6l
      qbEBVWOkoCAXnebVA5IQKo8+eB8P/Mt/sWhWbnR6KBhgYGAQg8lCSnLS5WKd9BrkGYAkvYvp
      9EZmzJp9fTNVNCQnJ195tqKQPimL9ElZl8wb/T4p2L/lWbrCaSydU3Dp8hoNU4uv/JTPn/7v
      KfJn3sDsmdMg7Oelv/+ZRoeOGUXjy9MbjEzOurQO0usnA4AkSddNxNPPrXd8mIzcQr77nf9A
      ew3fyvPyc3nx2T/y8//qRSga8gtL+OWT/0Os8Tqc3UjjyEtAkiRJE5R8CkiSJGmCkgFAkiRp
      gpIBQJIkaYKSAUCSJGmCkgFAkiRpgpIBQJIkaYKSAUCSJGmCkgFAkiRpgpIBQJIkaYKSr4KQ
      3jMCgQCqqr52QumaGQwGPB4P4XD47a7Ke1p8fDxa7Zv/6gsZAKT3jGAwSCgUerur8Z6m0+kY
      GRnB7/e/3VV5T4uNjX1LAoC8BCRJkjRByQAgSZI0QckAIEmSNEHJACBJkjRByQAgSWOCwSAX
      D48h1AihcOQtrUfgghusQlUZsg8RDAaJqJcfuiMUurTe72SXu4GshkOvup6FGiEQkDf4rzcZ
      AKT3tKDHwdZt2zh69Ch9tiHq6+uvmLay/CThsadI21qaUQUMDXTR0jFwzeU3t7YC4HIM0j1g
      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
      rW47arXI/Pw82/EUlWoZq9vL2VMnaGtuJhGPcvri+xw7cZJsPI5cyaMb6yPW3dh3uJ2u7i56
      Oo/S3dOFQdNYW1piYXGJUqWCAJ7eGcfs66DJrpMpywTD2/i8HgA6j52hnAyztBwEwU59APja
      DvOTH3yPSilDTa5RVCXMBoEkSbS2tdHR2Y3f4+TQ0U66A5247Dai6Sy5ZASb24ui1O8Lb2o5
      QKAzwD6vd+ciI6nx34Xzp5meniKZyeLwN3PmRB8tPv+OY21qPUggEKDN6+FFzo0WNxfPn+Hg
      gWaUTy33Hew4SiAQoCfQueMXVhbrfqFUrZBMpjh34W2OHj2M0DWyxSLB9SBub/1YdY+/ida2
      fXQdbcdgMnHu/HkOHzxArVzk+cwc6+EtaopMa1srnV09eF31thpaX2J+YZFCqYwAunp7OXH6
      DEqlgKupmZ6uAJ2HW4lsRZFrZTIlGYdFsDS/wOLyCuVaFUmS+P4Pf0pPVyfHutqZnp6hWKov
      HxY0E2dPHuPCyW7imSxHurvp7urCbjLW68rfTMu+fXR2HMbq9HP29En27/OTz6fJV2S2UwWc
      dtuukhLkMhk2g8EvsAlskPj297/P6uI8BpMDj7XMb/7pN+jeJvarJNaWAAAgAElEQVS3tDD1
      eIKnc2F6OvdTqtYwmUxsh5ZZDP3+9Vev38nw0AjxdH7HCoWQ6Ohop1Cuogtp1/S38Q+pYUpC
      UCjkMZsMaJoOQmfy9g0++mSQY6fqF6p0HPBw6dIAk4+nMVkc5NJRxkavIwsDx4+2k86V0DWN
      UjaFLIzoapVy9eXa7+7LapweKyNDV0nliphtLgqpbUZGRgi+MkKTyOdyWGw2ZFl+mdxGWL3d
      B/n4o094MjWHxeHC7XKgqiqSsX5Lp93dRCK0SEf3cdRiguYDR17JOkYbB/wuaor66kU6krSz
      1BI4foaph3c5e+4UHUcO0H9lgGujd+juaicb3+Da1ask8nXH7Gs9zPrMHYaHh8kWKzuNEMmA
      1axz9foo6xtxTp49ya1rI/RfGeDwkXa2trbxed0kkhkOHjxIuSYjMCABqlxB1UHXlJ09kyMd
      +7k6NMjNW/cQGADplWWNFxnsDRwlnc2iqSpGowGTyQLA0UAX2VwBTQeDQdp5X5IM+Jq8jI+N
      Eo7EAcjnslgtZhRVa2RFAoyYjPWGE1pdoP/yx1g9PnrbDzDQP8DA1Zt0dnZiMpuRAKvLzfzM
      U2bmlwHoad9Pf/8AA9duEjjauZMugObWA0w9usm1a2NUVb2eNwNsRWL4vC4SyTRei4GrV0eI
      xFIIDKiN/YUXRSBJEoc7unl8e5ihoWEOdPWSSaZQGjPmsRtju9afpU/9H/L5HFazCVWtO8fz
      X/s2TaY80+tpWhygasqOjcUjEawON4VcFovDybMHtxi9fQ+Q6vmSJDqOdFHOp1EUFYu5/p3P
      28Tk+AjrG9u7YpY40dVBIl1AVzWMhvqTVGyD4eFBirrA63Tw5P4txu5MIoCNSASf10MymdzJ
      w+6V9eR2iOGhQUoCzI2yeWmXUsPK2LGh3e2LRmj5fAGz2Yim6xwJBHhwe5SR6xNgNHK41U91
      9/6OZKSY2GLi7sMXUQASmqpQkxXQNQTgc3u4fWOksSchyOTyWC1m1Ean9/TBPT763ce0d/aR
      T8YZHh4imKjR29dDrVhAVVVMZhOFQhGzseGzMGAymlEVmUQqj8NhIZ3JAdDe7OTK4DA3H83T
      sb91l628uGnKRC4a4vb9J7tqQ8LTdAAbVVRFwWh6efuvZDBw6NBBSlUZxJ8IXddFsVgUeuNv
      RVGEqmpC13Uh12pC13/v57sDErVq9TXv18PRtN8fkKYqolqtCSGEWHj2QCyHkkLVtFfeqVYq
      O+HouiZKpdJOumW5tvO+LNeErCh/dFp1XReyLL/2vUq58toyCK7Mi6fPpsS//PM/iXxFEbqu
      i1r1DcqrEW+tVhP653y0vRkUH358ZSeP1WpFyIoqhBBCVRRR+1SadU0Tsvy6fOuiVCoJrRGP
      osii0ihrXdNEpfKiLOrp0Xalp1atClV9tR5qtapQVPUP5k9V5Ne+J8vyZ8J8GfbL+F+k7bXQ
      KmJwYFwou+q5Vq2K2mvyr3wqvlq18tr3hKiXzafLVdNUUdlVt9VqtVHflc/Y6AvomrZjg6qi
      CEVRhVLOiIm7j16fn1fien2edV0X1U/ZS70utEa6Kq/U3U6YqvoZu/h0Pb/AK2Wl62Jw4Oqu
      tqHX2+AfUz+6JgYHrr2+Xb0BdvuFSi4h7tx7IEYHPxFPF4KvbT+apr62buVaTSjKS1vc/d3u
      fCSCs+Lh3KpQtfq7I1cHhSzLO21wd/iaqohqrfaZuFRVEdXaq/mulMs79fT6fH62jl6krVZ7
      XRnW8/5XeR9AtVxEMtmwWt7ozvv/UOiaSiwWw+1rxuWw/eEPvgCS8RguX1N9Q3YPr0Lo5PJF
      vI3lkD38BSAEuXwer9f7H/vt5wYpyKQS6JKZlua/zG16Sq2CrBtw2q0A5HK5P2se/tz4q+wA
      9vBfE0KIT937vIc97OE/E19ICFYrJFkJ//l44qpSv9D9jdPR4L5+Gqsrq18oHaVcio1onSMb
      Dq5SbazpQZ19tBWJIoTO3YkbPHo2A0B0I0ippn5uWmZnZ75QWnYjHl4nni2wvrbC7mKqlnOs
      rG298q7S4ChrSpWF5ZU/OW74wxztQjpGPF34ve8kNle5NjbB5N3b3Lp1i1u3brG6ssh25vMv
      t49uhsgWK4BgdWkZXYAmV1gPb33uN89nZikXs2zFXs8Zr0N8bn19Gi/ei22skCy8XpugqerO
      PsPLv+tr8H+o7L4I1GqR4Ob2a59NTU2h6yrXhgeZX15jZfWPawtzszMIIZh69uy1GpfXQS6k
      WP4De3ufB6HJPJuea7T91zDXhWD2+fwXCvuPQSUbZ30r/sbfRTfWSWaKrKytAoLph3e5cech
      mUSE/oFB8l9Av6L8kbqCci7OSvjzNVJ1fUbdDv9YH/hGOgAQxCJbrK8uklFNHPA7mZ9fwGRz
      YLNaCK4uky/V8HldxKNbbEbj+Hw+DAaJbCZDMhkjns7T5PeS3I6wHt6iqamJW6P9xAoCj6se
      jqrUWF5ewWS1o8tlFpZWcLq9aHKFZCpNeGMLr9vJv3/8MS6HA6fLzUZwnXSugN/vo1As4vW4
      SSXjhEIhTBYHdpsFoWsE11ZJ50r4fR7S6RSb4RAqJlwOOyazmcFLl2jb18LtB885e6pvZ8NF
      V2s8ejaFz2Hh/vQc58+exeV0UC4XMRlN/O7SJ7icTtxuL0aDRK1aYmVllfnlZY739bK+skSu
      LOPzuslnUzucf12psrS0jMFsxWGz7irqum4hX5apJCMoFg8WdNxeL8VsiuBGBItRI7iV42Cb
      h2yhjM1iYnjoMiXFgMNiYG5hEblSxuJwYzbA4vwCGC04HTYQOvHYNqFQGJvTA2oNRZcQWo2K
      rFHOp1kPb+L2eJmeegK6Xud3Ox0gdGKxbcKhMHaXB0lo6AZzXYsQjxFP5/D7fewe64+NjvPB
      d77LvrY25uYWeP+r71OKh4kVZXKpFP6mJpRamYXFRWwOD1aLGaNQuTI8ikOqEs4oBNoPgNAp
      lWtYjIJUKk14M4K/uQlNrrC8ssrc3DJ9fQFkDRxWM6sry+iSGa1WZm1tHYvdRSm1yeXr92j2
      +3DYzHUbttixmg0sLy0hN3js5WKeDy9dwu3yUEpGSFd10skkTU1NZJIxgg0NwfSDMZYiBXxu
      J3ablcd3r7EUKeJzO5mffYauamiSGafdwsryIqWahtftAiCdSrKxEUIVEpuhdYxWJ0ahsry8
      giYZcViMbG1F2NiK4m9q2uHvl6sqNrPE0tIyRrMNu80KusKde4/wWRTmt3KcOXkcTVXQFRmT
      1UEpnwGTlXgkTCSeodnvQ1NllpaXmVlYoPdIG4/nwhzrOQpCJxhcI5HO0eT3kcmk2QyHGxx/
      O7HoFsHVJdKKgY79raTTaex2G7HtGA6Xi2wmg81mZWVxnnJNw+N2kk4lCAeDSGYbhXiIaAHC
      85NE8/pO29cUmeXlJUxWO7PTz0EoKMKIw2pidWWFQkXB53aRTqfZ2Aih6EZcDhvRrQ2i23Es
      NgdKtcji8ioerx+zyUghl8FgtlLIphAGM3KlSDGTYCWSpJTL4vU3IekK8/PzmCwO0GSSqTQb
      mxGampsxSFJDR7TGwuwsrpbDGFExoTM2McmFc6d5dO8WB7pOsr/Fz+rSIhomHDYTuUKZeGwb
      p9vF0sI8GmasRkEimSQU3sDr9XHjWj/ZqoTb7cJqMZPPJFkLhnG5PWi1MvOLyzjdXuRyknBS
      Zr/fzsLCAmabE7vF3PATNRYf3SWYLOBxu1FUGZ/Xy/ZWmI1ogqYmP7lMhvh2hGyhis/rIrIR
      frMZQGRtjntP5jEaDIBg4PIn2F0uBi5dYX7qPqFUhcVn9wlFYgxfvYlBKOQao6bJiXEiiTzz
      D+8QjUe4OvEQk6gyMjqxwysWor5M0H/pY4RkIJ9Nc+nyAE6ng8tXrrCxOs/kkzmq6QjTS0GE
      rqNqOqpcplBR2F6bZXYtwtzCIkJVuHL5MmarhbHx2wAotRKFikp0dYb54Bb9n1xGGM1MjNd5
      0Qajme9/92v8/B9+ww//9ru8brFCCB2T0YDSYA9shtfIleQ6N7gxkhG6yqWPPsZgsqBrGjMP
      b7GZrrA284C51TBDI6O47CZGrt7kxsgQwmQhmUi9Es/zh7dZ3kxSLL4cWa/OzVIqZugfvo4k
      FCo1GaGp9H9yCVUYQIhGOjQQElsbG1gsZsZv3mXi2jCSxc7N6yNUFB3QGBq6hs1m5XL/IPHw
      IuuxFNl4mIVglIGBESwmA+l0nkw8hiKMTIzfbLAwVIYHr2GzWbh8ZYhiLkYomuHJvXHC8Rxz
      U4/J7BotC72GbnRgt5hwOBxYzVYcTidGg0Q4vEUlE2FqMczw4AAut4ehwbqOwOFt4fTRVgYm
      ZvjGO+fqgek1ZpeDRFZnufdsnlJmi+mFDT7+6BMMRlOdC13MEQxuMjp8hZKsUyjkSMaT2Ow2
      hgdH0HUdXdfQdMH1oUGsThfXRoa4P3GDTFUjlUzV8/miPBt0w/BGhHw8yNzaNolEEpvZwMj1
      UXRdoKnaDk15tz3HIxEwWRkfv8mzyVukyzrTkzeJN9hX14aH0Q1mPv7dbzFarEyMj5NOJjHb
      bIwOX6WYiTF29yFmSWb4+ng9Aq3M7HKY6yODSGYryWR91qprKh98+wM0taGxURQWF2bRawU+
      udLPwPAYuViQh1MrlOJrPJ4PcuWjD8FYt1NVN/PB19+vh6VWyBaqZCMrPFkIMnT5Mppk4tb4
      GNH1ee4+msNkeOk+nt67Tbai8OFvfkloO8fNiQke3rxOtiaYeXSbcCzD5Y9/h8lqY+zGBDZP
      C++cP4besFeB1Gj7H6FLRvL5HKn4FrrBzMT4GOV8Dhkj84/usJksMnDpEsJgZuLmDYKLz3j0
      fI3U5gqzayEGB0fwuBwMDY8CkNhYYXZ1i5vXBnn0bJ67ExMoAsLhDQxaXUd0bbiuNxoZGGJt
      aY4HT+cpJTd5vroBwLPJcdaiWRrEIJZmZxEIDEYzsqqA0ADBndGrqEYbt8euksqm+MX/+3Mi
      yRx3Rq+iGW3cHhthM7zK6J3HIBeYfLKwq80CQmNgYBhLQzcy2D+Ix+NiaHjkRWvi6vAgdpeH
      kYFhpl74iUKhXpaqhhAwt7BIOrrO7UfzqKUk43cfcWv0GulijaeTEySSMSbuPX2zDiC6ucF7
      3/yAzo7DAJjcTXR1dtJzyMtKcItqKYvBakOSTPR0HmBq+jkVuQaA0eLi4oUzHDrYTGo7zomz
      5+g9cQZdqdHa1saRQA8+jxOEjtHp51hfL4f2t9DSso9AIIDX6URg4My583QdbUeYzLS2ttHX
      20Mpm2J+fp5kOkul+lJw1h7oojsQwGmtb4JmkgkWFhZIprOUq1X2HTpCX083Xq9955vQ2hqH
      Dx5g/XOm2L6mFtra2mg/dGDnN7PNQWtrG7093XUqqlzDt/8Qvd1deN0OMqkiX7l4lrfevsBm
      cINSIUdoI4rP5+TcxQssz8+yGX11apdMZXn33a9wvLd75zcJKBdSdPSdp7fvOB6Hjaf3xzE1
      HaLN70IymmhtayXQ1YPLYeVoTy/d3QGsRgOJbI5YdAOHx7vTUe070E6gqxuf3fYp+biRM6d6
      mZqeJlss0bT/AMf7evC53Ts0vH0HOwh09eC1W3ccn9nm4NzZ0xxsa0PfzdEWOgbj6zeiT587
      x9HOI+iyTC6TIRQM4vO9iEcQ2tzGY5VI58uf/fb8eY4e6UCXSzg9B+jt6cbnce2UVRUrZ04d
      p/NIBysrc3WdSKVGU0sLrfsO0HFoP+l8jq1wCKfXT++psyQ21lkPhdGFwOH20traRk9XJ5IE
      ZxrxabUKc8/nWF4NUZOrtLa10n40QIu/vqHc2tZG+5EAzX4P+9o76nbgcBBNZShk4pgdLlRF
      b9jTPvp6ujkS6Kanuxu73cDWxhrzcwvkCiV0XXC0q5ve46cxaq+KKS9cvMjS3AybkQQCMJjt
      NHndtLa2sv/gIfa1NoMELYc6qWwv09F7ikwqRk2uUZAlLAaweXwc6+mi2efG7vLgdtZprflM
      hoX5eeLJDOVqmeZ9h+nr7cbf5CK6scF7H3yLziPtO2k5dbKHezdvcOYb32Px6R2szmYSFZ23
      zp7k3fOnicbiHO4M0B0I4LZZ8Ta1YjEaaG1r42igrikAgcHh43hfLx2HDtCyv4O+nm58Piep
      xBbzc3NkCgUqlRqtB188c5BMJHj7q+9z5PBBdE2hkMsQDG3g97sBaO8+RmhxBntzO8XUBjVh
      xGE2cOzUabq6A3W9UbauN/L6XOg7fuYwSkNYuJ2s8vX3LnLo4L4d+3J7fLS2ttEdCNDW1kbg
      /2/vzWNlO+4zsa+qztL7ve89khIXSaREURYlirZkW/JY8jKSPUASj4OZeIwgk0mMDDAZ23Fg
      JBnbQYAZDIIESIKJxwkwCYLEGDuYieNFHlkLKVHULmq3tlCkJC6ySIp8fMtd+nb3WSt/nP6d
      W11ddfqcvt19u9+rj7h83afPqaqz/fbl3tfj4GSIqy89V7xnaY4f+fF34R1vewtePjjEFdqe
      5Lj/LQ/gntfeDZbluHWa+zLotQEm8OADP4Svf+3ruHb9Oq4PT/Dss99Df2+/vNaH16/juela
      L1+Z0ok3vB633XYrXnP3a3Fxvzjvay9dxoNv+xG8+cEfwfj4GK3eRTz4wP145W0XEHQv4o5b
      us0YwF13vxYf/ov34tFPfRaccbTzMR559FF8+6Ux3vbgm3H15StIsxwsO8HLhyO0PeD6kV53
      h+HWV9+Nr33uk/jwhz6AC7e+EvuDPXz2Yw/h2ecvg3GOPo/wwYcexuNPfR/Do5fx6KMfxSSb
      Oixkka3CGEOHxXj4I4/g8pXrEJ6PJJnG23OmzVh8H58cz+xH1Izi5o+v/gBPXY7wH/29v4vH
      v/gJXD+4hse++NXKa8KmawnzCR5+5FEMJylEEOLgxefxyEcfwfOXD/Ca174Kf/G+v8CHHv4E
      3vTAG9Hvdacx/wLPPf8c9vb2cPXKy3j6ya+XdTruufcevO+9f45HP/kYwFhxDoxhcOlOPPf4
      5/DQQw/h6tEIb/2J9+AiO8ZX/r/C3r/X6eATjz6MF14+mInRvvc1d+LgeIw8l6DL8/z3vosP
      vv99QLuDTqeLv/z8Y/j4Jx8D8gQvvHQFg04LV69dBwy60HPPfgcfeP+/Aev0wBnTrjkDQ4ZP
      fuqz0/sRIpkclIzCqFmB4/Y7XolJlEBO45u/+80vo3/XG/DL/94v4CMPP4Sckrmmc5Xx0KKF
      6Oh5fOSRj57Wi2Ect++F+Iv3fwhf+uo3cHA4hO8LpGkG5rXw8rNP4Atf+QbuufOVGI4jyDzH
      iz94Dp1eH4fXr4H4V3ZyHY98/NNIM1nOJ/MMJ6MJOMuR5xL9wQV85TOP4jvPFHV3+v19fPmz
      9P00vv2HXnc3rl4/RJZlEGI27r2MYQfD9YNDtFoBkrggPo9//Sv4sz/+I9z6qvtOry9neP77
      z2OwfwFXr16ZDaCfAcM3v/hpvOmnfhEvfufL6F+6C+Pja0iSBL7vIT45xiMffWSu/tZkNAQT
      3um7MgVnDHfd8zp8+H3vxUc/+Zny3brt1ffiLz/3OTz41rfh+ae+ifvufzPuu/MS3vu+D+KD
      H/887r37lFmU8esA9vcu4LMfexjPPPcSGGMYeAk++NDD+PoTp/4rBobjo0P4rTbiaP7dfe19
      b8Sj738vPvHYFyBEiIsX9gvCPdVQ/LCH4UvP4Pa774NIh+jfckf5/BSaHsOrX3UXjkdFPTKK
      /y/WWvxb5hF96WvT32ZJJ2PFlXjDPXdNc4pycA740zyRN9ytbqf8leKd3ut18clHH8b3X7wG
      mad4/sXLGPQ7uHY4xB2X+mWuDwMDYxx33XUnTsYRJBhed+89eN9734tHP/kY+hf28dinP4Gn
      vvc8GGe4457X4rGPPYIPvv8DeOVdd6mLxeTkOo4nafMooDiOwIUPT3BIKTEejdDqdMAZQ5qm
      KJJIBLI0QSaBwDdLfnmWIkpStFut6bgxPN8viLGUSNIUnucDkBiPxmh3O3OEQ0qJOE4Qhj6i
      SQQ/CKcX1wZZc7/mkFIiThKEQXHDZZ4jihO0pnb9OJqAcQ++70FKiSRO4AdBsaYoQhiG+Own
      P44f+8mfRuAVD1c2fYgF59pcOdI0h++bw1zjOIbv+3MRN0kSQwgPnHNAJvjQhz6N9/z8u+BP
      k0SiyaS8NnmWIUkzhGEwP4GM8aEPfQY/9/PvgufVC7X92uc/Ce+W1+FNr7uzYq/ifprWvgh0
      vcNWOPOcJJQEk+cz55NlKaQsntUkjiE8H5wzRNEEnh+U11zKHEmSIdBCadMkgQQr70Fxbf3y
      uVLHnDkuTQDGy2Q088lIjKMIrbCFyfXn8YWnXsZPvvWB+WOkxGT67DS5XnlWmL983yvmmkRo
      tebHUJ8HHUkcgQmv+jymY3DPh+/Z97O9+zPLkRKTSYSw1YJ+qldffB5PP38ZLzz7bTz4kz+H
      17ziQvl+1b8sxbPnGe6Zei51aEeSxODCm3tvbduB2Xc2zzPESYpWGBa0ItHfidm1qnRCf+6y
      NEGS5iUdUpGmiQsDvWkhJQ6PjpeLg18ihl7mKb73/Rdw92te3Xy+mxh5GmM4STGYlh1wmIeU
      OV6+fBl+q4MLLq+jERwDcHBwcLhJ4RrCODg4ONykcAzAwcHB4SaFYwAODg4ONykcA3BwcHC4
      SeEYgIODg8NNilpB3FJKnJyclHGoFDhkij3O89yek+KwFjBQswxZu5CXQzWY0ljHBjWATn03
      zlLxtOrdWma/80bT66HuL6WElLLIW6nYH1jtddDHPMscpmNN45/XfaxdMH8ymZQ3Qj+BPM/L
      GzWKm1fDczg7qGCVo/+rgS88+MKzvphEnIBpFuj0+uv/0u91X3LbuyWEmCGI2bTqI22vGltf
      jzr+ImRZBs557f2bnLO6Jv28OC8STfM8n2EAOnNQt5kIth7lXmddVMaE1qDf5yawRdnra2CM
      zV1r07Hqs1ZklIuZ+5vn+dwzoW7XsVTHFJqMJqG/LDeUdXXYCHLLg+awHJIsRZpl6IQtIxEB
      MEOY1JfQJkHSNvXd0aFLhTpzoc9NpeIqoqhDFeiqiD+dh8qgTNdj0fHqOevEXv+uX2ciajo9
      0qESSCKGtvVV3RfTOeR5PnOv1PMnELEuMn1zI1Mx3VPbvaRrZRrLdH/1sem4pVtmqRIKTeAJ
      ASl9xFlSdaiDw1ajMP3Mm4DopbNJZvSviYirY6j720CEAoBV89bn1r+r0jWAGWKprs80dx1J
      V5fGdeJDEm2dMRZpCipTImJqGkeFyozpOwCjRrFoLBth1ZmUfs9MxF29vroWYJrTxtiyLIPn
      eXPnaNOMTOtemgGYuDeAoq4MQ1Ei1cFhByG4gO95YGBzRLQKKpEymTeagKRKdW5Viq0i0iaN
      RWUoi6AzMJ1RqIxQJ4CbgMqEFzEO/fcqJm4bQ71upmtRZbIxzdnEnEbX16Q1mkw6Te5FnufL
      MwB1geqi8jwHB4PPPSR5epbhHRzOBUlWVF/0+LyUaZJ0gXmTDW0DMGPHruMLsEl9RPzVtdBn
      dT59LP0cFq2j7hpNmo0K3SxUF6bz0glblSnNdM7ENPX7UOdc694vm/2+6lotYmBVWh89Dyoz
      tl1v2zyNGECdm0kPLeccPOeI0nqt9xwcthVVtlUTpJQYJ9GM5CjyFC3fXrVz0di6tK0SNfpd
      NXGYbMz6XIv8EDYTgo3hqBpQlT1+0XnSWLoZRT1Puh82u7nJL6H+Xpf4q/vUuVb6dttvdeYG
      MKft6eOq23XfgG3N6rGNNQCdm1aduOAcgXA+AYfdQ5qlgJTwhDdDTOswAZPUlkuJcRyhHZiZ
      QJTEOI3hKmrLs7x4SQXn4GyWGKoENsuyGYJYR8Kk7brN+ixQ51p2PJ042uhLmqalCUS9JnQt
      9Pl1M4rJhG0j8Is0nSbntswxdQUQE9Op0pSAJaOA1ElUTmO6WYJzhCxwmoDDTiGXElmeg8rY
      q9JVLenN8K7mMkeWF45RzrSoDKgOSznzT5IBDIAnPHhclIKX/u6phELVDkxrXSQh1kWVXXuR
      r6IKNjs9XXuKqKFt6nYVuqakmkz0v0Xhrmch/vo61XOpgk36r4J6jnScbe2NGUCTEyhvCmMI
      PccEHHYMDGVrSqDargssVu0ZY4jSBIILBKIIlii6PBXdnqqyOCQK30ScJgg8fyZHQZf2dEJo
      evn1Y2bmMhD1Jg7MRSamRXNVQSXoJmm+ztpV0xx9NjlUTedjWmuT67XsdSQsMiHqz+iiuZbS
      AEz2RVXqML0IgnPHBBx2ClmeYzxNbAw9H4Kfmhz0553+1Lhs+7gZxnmR8CSlnLb7rLcmxhji
      NEGSpeXxhG7YniPouuSrJgSRuUTdj2Aj3jpRUd9/FbbEIxszMgmVNsKlJjup90CPiSfUMUfZ
      tBV1vDr7LGJ6QogZX4lpHH39Tcw/6rWpCnct/UWVo1omqrqgVTePAQgszcEdHLYZWZ4jy7I5
      6XbGzj8lsgXhqx9mWJf4zxyjfFaFLsqkVdemvq+qY5T2MUXYqGYT2kYEV4XqfKb96Brov6lr
      p2upm3GqCJ1q41eJPa1Ll37pj5K/qsJgF81LTmUb7WviJ1CznHXoIad1xlOhMpg6aKQBmB4I
      dSLd+2xSkT3OiwQbBkgJxGnsyhc4bD3SPEOGHG0xqwUQEVOTns5qK14WSZYW68k5BGeQ8pRR
      Ud9n1VRSJWHbiHGVdKtrA1XmCp1ALxIsbQRzlbBFHtk0FPV3/bPN8VpK3jW0kqbmMXW+uk74
      pXwApoWZJH/9ASLOV9aq4AxxNuUEDg5bDokivBMoNFlPCGRZVhKOGbv6OawvnZqVIHOkCq1k
      YNMs/XmzgIlQMcbgeaekgX7XS18QTM5olVjrBIyulUqsFhG5dRN/dR6baabKt9PEXm8zm+nX
      eFFdIP2+qc+hrl3p66F9ajMAk6pnO3FTirJ6nLoAJ/477ArcCZYAACAASURBVBLomSYbvFfh
      PNwWSEhMpoxLrdbbDsLSrzGzv2LyAIAkSeD7hemWiLspsU0nXlXQHbI2rWTT2pTNckFrqcME
      1GNM41TtA5zST9P4OsNWP6tmN/X+2XwIjDXMA1DtniZJX5XwTYt3cLhRkMscaZZCLJDStgVl
      sUDGSpdDlMQoHBAmwgsgLX6XMkea5GXZccE4sjyD4HabeF0sunabph0mIq2azeoe29R8ox5T
      JyJJ/W6yxKimrCrGdaZqoCZuXWfbLLb3pXFwqEKaZ0ij8cy2Ji/8ecMW4jq3F0mfxY7IkIOB
      QXBRmU+glrK2rkEheqY16NnFuhN+U6iTN3FWRqUzGxMzspnYdcd+3fUspQGoi6XP+n70r+2G
      bbO05OBQB7tE7NcBvX4/MB8SaXOsqrD5Iug39S9N040XnyPUoVmLaGKdZ8Y2j25uN41lYgpV
      89ZmACbbmMl7TzfRVEHP5EB2bMDBYfeQyxzDyQgMDJ2wNfubUm9frbtfFUFDUVQmk4ZKN2g8
      YjybgIn21dnPFkm1aIw6v6u010bo62grjVipfoJqXKwe2kX76h5/nQGc9YI5ODhsHuo7bYry
      MX0G5q0D+vtvc56qcfzrpBHrGvustE23pJgihJpopLTvmTKB1cH0iCCTmkYSgfq9E7TKY6SU
      yGWOyPUScHDYDTAgzbLSGa4SIRPxVyNUVAZi8xOowiSw/nBQm6ayLFYVIGCLMjrr9VjamKZm
      CqZpanSSmDzWuZZRSSCudl72PQcHh+UQpXFRPXUK3Q6tE3GTRaAqCghASRtUxrHt0E1fpMmo
      jLAKJhpJ24mW6jkopuNM22lNS0cBmdLHTQ5iNTUdmM0WVhdTLo6xaaVEidkcedtJAfrz4Prj
      OjhsFrnJv6cQd/IL2KJ96hL1TZiJ16EBVCXGLVqL7TjVB0B+kaqkOt1SAyyZCUyDlVykIulL
      zUyjP1PKvPrQtINw7oRN41MWpud5M8dneY44TSqrKzo4OKwOucyRyxycmVsfqoEhZ2kYswms
      ygxkcmjTdn2bDXrTH308PRrTpBFUzblUMTh1wCpurHvq9ebJpmqKeuPqKggh4Pv+3EXxhEDL
      D+Za+jk4OKwHuZRIs2zmnTcVJVOreOqx62cJkdxWlNE2DfoQq1CDaBaVhjgtRGgvHUH/0uel
      S0HYBtYXtGgBJj+BGhqmahr6OFURA4wxhH4AkWVOG3Bw2AAYM7/zpqxU1emrm4R1M8UmQPOV
      hTJyc3KaqrnY6JIOtew2YK8dZIJu99fXQmvQxzNdQ50JSdmgFlAdDq07PUwnQqjKDlSPybLM
      2PpN/VdNSPE8b8bP4AkBT4iZGuoODg6rR5ymiFG8Y4HnI/BO6wcRdPpgMl8A85WFFxFMPRy9
      LnKZT5vxAKk81V44W5zoSvSJGJppP/Vc6xS90006+naV5qlrKde9oFS/6pPI8/xsLSFVLBOL
      ugi6D4HmMYWS6Q+AbjcLPB+Cc0wS15DGwWEdmCH0uTkjlaCWz6b3W2UARFibhjs2If5SSmQy
      N9oGknxK2Lm5rpnuz9T7J6hrqRsKWsXk6PqoATj0uW7rTVNU0coYgOkmrgKq2kL/luWkDWoY
      rcU4FnNdyRwcNgGJwicAzFZMVYU39b3WIwvVd1sPHDH5FZrEw0spkcqs0ijsc2GtlGpy7Fah
      LgPQz9lkYjKV5FZDTHXBt2p9jLHl8wDURVTZopYZTx/bBDXk1LYeI8cTAoHwd86Z5OCwS8hk
      jiiNMUmiubBsm5lDlabrRuGoEUVN3mmPCfjTP49xcCXk3GOiMAsZxrMRVRu9IaG4DsgsYzt3
      vc+z3hXN9NkGOn5lGgCBOBFx+brQmYgqFegXRWcSTcPJPCGQ5QKZ3EyTCQeHmxmjacVUwTna
      QWvud9Wpqku19Fk1c5gczU00AJVW5DJHqtABBmbt0KnOozuCV2H6No1lYiqm73rRvao1qbT1
      zAxAX2zTi6GfoNpMehFXP4vfIfQDo3Ti4OCwOswSW4l4WuaFM25tpmMigMs6eatQmIKmBB2A
      YLxgABpRNZl8mtC5ujZ621y2JvL6vuocpogh9TPttxINQEqJNM/AwMAZm4nIWQSbOqUu1Hbh
      dHtXXdC+oR9gEkcuQNTBYUOgSDzB+UwzHUKVI3UdZlufCUhI5FJOKxDMQqUtywq3dY9ZROdM
      29TkOnXOReui69k4D8C4SHZ6gzifrRBqc9SaQOFUJjuYbjc0OUh07lelAhXLZlNNwDmFHRw2
      CV1atb2zqqlFhUqPljW/lIQdDNwyhL420zqr6I3JZLUIuh+1jhBM+9sEat3EBkw1nEYrs4CB
      weMCvpjvY1l7DMbg+z76/T4YYwjDEL1eb2afRQ+Kqi7WnVtw4TKGHRw2jCRNMZyMMJyMkOXZ
      nPBG0KVv9f1v8p6fBSphVX0NWZYhTdPKQJWq9emOXF3wtR1v2qZHAFGZHHV/+lfNLl65E5ig
      25xsCwdQEn0hBNI0Rb/fhxACk8lkZj9T4xn6bHMSL0Iuc6T55ppLODg42KVl07trqzSsMgUh
      xNqaxBBBpWJ2tI2sFbpDeJnxVRv+Io1DhSrZVzEPVQtQI6dWmgm8DNrtNnzfL7/T5zzPEceF
      aUY/sSopoQmklK73gIPDOUPKaqHNVDyOpGe145jeN3jVUJPXaA1NbO8mVJmS6jAC1eqhVkQo
      wzynflidRpbawFKr1hZgi4ElEJek/dR+AEmSzI1Hx4dhURV0MBhgb2+vHMvEaRepWqqaRepR
      mmfIXSiowy5AAqEXoOUH572SlUOVfHV6QoRM7QhmKhGhjrXOniJqVzJ1TSbodNFGJ20CrMn/
      QfSLxtMFYzqGCsOp11FnWCtxAlcRXl0tUtU1WliaphgOh+h0OmCMzXD1MAxLznZycjKzBvWE
      6nrb6VghBHKZI0ldbSCH3QFFzXi8yGFZl6S7aRR1ugpBMPQCK41Ryx7ovxHtoM/r1AZUQkrf
      VR8BrVOvYmCqkqBK8DboTEA/Nzr3us5iFSvxAdhsd/Sbnq2nM4YoijAej9Hr9ZCmKXq9Xnky
      QRCUTMPzvNI3kE6Jt40x6Wugfel7nDjTj8Mu4fT9Cv0AWZ5jkkQAihj2XWYFEhJEPtTzML3X
      OvFVYYqTt1kozgJd6NR9kSYthgRP9TzqCK42mmnSmkzmJNv4dOyZfQC2EzFdcPXm6TdrksaI
      Dq7BF16p4nQ6HQRBIRF0u10ApyagKIrKRjRNVb44TVwCmMPOQkoJzk77aQNFfL2t2q3veTuj
      7UqZQ8rZ2jZqQpZeolknwLNj2Yn0sjDZ49XvROTVcHZdczE5am1rqlqvyhhMVRdUk5BtjKU1
      AJNTxoRFTKHcDwX3j7MU8TgtGUEQBPB9v5T+R6MRut0uOOdotVpzkUKLkMvclYV22Dnob47n
      eWi325BSYjQaAYYAGMEFLu1fwMl4tDMMgLFTYkmCnRp5Y9IKVOesiejrWIYB1BGAaT/Tsfpn
      lSirDm2bj2CRtmAzz9sigei3RgzAxM1MJ6k7PpaJ0iGJJk4T+MKD53kIw7DUDvr9/oxjd1GU
      kpQSSZoiyXfjRXBwIDAwtKaasPrM+76PKIrQ7XYRH8wnM166cAFxHONkPNr0kpcCZ7yowz/9
      biKW9J3oAPkIdcKp1+xRj63rH6BjTfOrzKjK7q6bbmwMSj8n9fz1z/q2qt9Mjmh1TY0YQJqm
      cy0Yddi4mTpxLiVymSNTqt/ZKjCleYYkS8FTjtFkDM45enkPYRhiPB5bL4A6b5bnSDJn9nHY
      UbBCmlffrTzPkSQJWq0WRqPRjIbAGMOl/YsI/ABpmiHw/Z3weQnNrm1ymqoOYZvzsy5hN/kH
      dKJbRdxtFQtM+9K6VAaunofN1r8qqHOrfVQaMQC1to/OFU1OCNonzbJTgm8Ku1xwrjROBoks
      y/GDl19CGASI4wR8ytE5Y+A4VQMzWTCXLM9dO0iHGwr0bpHE2Gq1Co15eAzf89BpddButSCl
      xHA03AniDwBQiLvJkTq7q9kcQ6jjFzSZsImw60UpTVCFXFsFZF1ToPtmM+no2kJdRmDbV2d2
      OqOpzQCyGScGTQqQdZIKKeWyIPJpmhXEV+anB6wIUkpMomg6H4BciYsFW8hQHBy2HYwxCMaL
      LHUlUUotfxDHMVqtFjjnaLdaOD4Zotvuoj8toRInSaMyydsElWDazsEWJWQi6jYCqTqaAcw4
      m1XCSeOZGrLQ2HobS5rPlLdApis1XNQkQOvnZrtWeuVSdd16ox11rNoMIM6qpQgr8V0x8a/C
      qtUmB4dzgZQI/QCccfiY17pVDYDMsr7nY78/gD/tw1to3imE8MrOXNsO1aRikvyr/I70XTXN
      qO1kS/OzItmrx6jSvGlcG0FWCa+NQOsOavW7ygSA+WxjfT5T3pMtCsjkZ9Cv58pS5hhzkreD
      wyrgez44K4gKn9aoJ2KjgxIkGWPodrpl9vxwdIKr168hiqNNL39pmGzui4I7dKhE1uTo1Qml
      bm4xzaX3J66CKtnrc6jfdUal/2Yz5+hmdz0fynRupuem1BoWnpGDg8PGwAB4XBilzXIf5bcs
      yxBNzaG0Pc1SBAuCNTYFk6PVui/mo2RsUTNVUPerawLTTSMqyOmuloGgY3Rtgn7XI3lMhF01
      PamOb53I6/4JdTxb10WV+KvXQH+O1lYN1MHBoTlafmiUGG2JPnme4+TkBOPxuPQHXDu8vjVm
      n8DzEXj+zDaK+iPNpgz7xClhI0epnj27CFVRPLqN3bS/+pvN3GKbk4i1qUCcKVTVVE5Cb6Kl
      m55sph7TumxrAU7NbY4BODhsATjjU7u/WfI32aDV4mjECKqcpucNlUAWhJ8CSOzlHmx2+brz
      EXTir5te9ONUn4GtGmnVmqSUpT1f993o8+jQncX6sbSuRfOrWoXOOGhcxwAcHM4REoDPBQKv
      2mRTNyKk+G1Vq1sOUkp4QpQtYlVH6SJCrodN6iaPpoxAZwImQlwFcg4TsyBmS2VoaFx1jTQ+
      HatnNuvro99UzYe+p2k6E5GkH6M7zdVztWk/6v4rZwBNLq6Dw00NCbR8H6KiI53JbKF/Nh1j
      MwmYxl0HfO4tJHommMwwtqgg03F1YYrsMYVN6mvW12OT6E3MoQo646M51DIYpvXr2/U1mHwp
      6ueVMgApZVG2QZxyR0r8klJOM3GLfx2jcLiZwRhDILwidBqrIcj0TrWDcMZ8oY8/SWJka+6C
      R9KvLSqnDhMw7WeKhKkax/SbicAzxopSMWW4u3qcnH6X5Sd1H+rRoBNxdX02U49+Xur5qJqD
      zRmu+x9M565esyRJZnoF1GYAgfDBOZs5fTkl6Izx4uLI05rlpzBLN+T8yfOsUFlZUaXTweFG
      h+ACoeIYNUmJur1c/X2RM9Qk7c0QiAY2Is5YqaFIKZHlWWVePdUtUs9Nj2ypA90EZHO+Nh2X
      xjIR5CKJlcbTx5XGTyair65XJeaLspP11pd1splp7kU+AQJ1XGxsAhLT+Nb5BbM5h01d6Z4B
      M+pvylyHLocbG4Hw4U/tx1V2fZ3wLUPoznIcwRMefOGVY02SamLO2GndImCW8DVdi8l+T5/p
      32U0J9MxZ7lOEhKccSPjVbshLoItR8G2Zn3fRU5q8jGodPxM5aDVhakqjGq7qlrwvM3M1exx
      uDEhpUTLD+CJ+TA/wPyC296tKslQlQgXrcc2H6HlBYYyAgxSzjdpL/fB/Htt02BsgqKNWC46
      b9N56ES5iTO9NqR9XtreRJqvWpfOCFVtwXSt1bFULYHmWpoB6NxXrcpXp0+miXs78u9wo0Jw
      AcHFTM0ZwB6ZohKMuu8WYM4I1eErUr16nA61TAGtTbV309pKCX9qITedh+qTqJJmqxzVNier
      7muoGrvKJLO0F8agnayqL7FJsDYJASZnsPpZbbWrXofaDKDVKroPJUmyUHqgzDn9Bqrq0KrV
      MBNKO1dFlIUJmTNDOawY6jNoUs2rYHq3Vg2jTdxiV6b5iaDUMvdq5gl1TpuUXkc70o/TmSV9
      VommXQNZjgUkWQLOOASV7zCYvKrORT8nWpeNsanj6/4j/RjaR9fkGvsAfN9HGBbRBZPJBFEU
      GR/Eavsgm/mzXQDAdCsKLzwDNYw49cyjjKUoNlFlUgAQrBknllICuWMCM1BTNW8wMACBpzot
      T32kdLppnhVVOY3Hs1IqBqA8mzSORJ5P4+INRKtKI9axagGpDkxRJ0IIpGk646fQK1HqUIma
      XnlTn2/R9dCZhErkTQxkkkRa9M7MjDRqE9/4zHqzPEeGHDnjZdYz5QsQ8a3DJPXCcqZ/9blV
      mBgr3RtiBjpTb2wCYoyh3W6j1WohjuMZz3UQBGUiA2Onac3EMDqdDrIsQxzHSNN07sFSe5zq
      jR7Uk5FSlgWaVHieh5NJjG8+cxnHown2+23cf/crEPqirJ1e5/x84UFSAxnTkyNlQSluEoS+
      D84FIIsokMI0QCopL14cpryY8pRjmC5TnsuF1WU3Bwbf8+D7PuL4tKuWKknZiD9hodkB1YJS
      3aCJpvuuAnpkiroG9Rz0gmlVa1QTpExx9TazmA26JKxK/Gpkj5m+r46pCiVZTJW61fMzXTud
      xpn8qHU0I11rUO+H7owumYqsIVZIKRHHcVlp8KyQUmI8HmMymVhPRreV0nH0r34BTyYp/vd/
      8xg++Ni3kKSnL1wr8PC3fuYt+JV/+8cQiOXCxtR1SCnLnsKylBqUB0ySLXTXISG4NxOuSFAl
      OZtGR0zaVCwryzNMkvkWhucBhiJuvt/vYzgcltt1ISPOEuS5nBMGSHCpQ6z0Z+8shHyZ0MpN
      gAQ01Slpeofps+m5aVIGwmZOorGzPEeUbuZZCzx/xtRHWbx6xq7OTFWc9d3Sx6zSovI8Px8G
      QGMmSYIsy2YYgWk/E4ckMMbw8uEIv/E//zleuHJkne/1r7oFv/uf/yJ6LX/pF4e4us5F6TOt
      cRxPSqljk9LaKhEIH54hLE0/93q21dnrkGYpIkPOB2cMHvc2qh0wxtBvd+H7PiaTSbldl6Sk
      lJgkMajBEdWvoRo+ixiA+lKbGoAApyYAE+EzEYq6Wu2mYLJ/q8xA3c+kWZieL30fHeq4aZad
      q2bpcYFQNQcazDg2rOrdsmkQ1nnPiwGoyPMc4/G4LGtLc6pqHUk8cy8CF/gH/8Of4InvXV44
      zzve9Br8T7/+75Q1tJeBnllZ9ZDq0k655hlmEW2NbV3KIp7ZFwKe8KyqOe2rvtwmE0Ge56UU
      pKe0F/ke86qw4Bwn0Xgj58qmhLzX7kIIMWMCUvcDps9oEpXXgMyVJoecDarNXCWWdderr10d
      cxugC0i0jbBouy4h12EAtJ+URevZJF/+3T4rfOEh8Py586HPaoVTmw+Dti16t0iANr1bdc1m
      wBpqAS0Dzjm63S6CIMBwODQ+BPpnOu4jX/x2LeIPAJ9//Hv44hPP4W333bH0i6P7JmyEf5HD
      5vSHpZaxFoRe0VlKlSJsfhgAM9fAJr34vj/zYJf2WTbv7KJ9NoFO0Jp58TzPQxRFRsKU56dt
      TaWUxS1TtAA6b3396lgmn5Y6T10zh+rE2zbt0ibNA7P3PsszRElSJn2SBlVcWwYu+Ey5BW+B
      Lbyc+5wvRy5zYzUDYgpqeYx1vlt1NA8afysYAMH3fezt7ZW2V4pDTtN0xj5L4JzjkS99p/b4
      UgKPfuk7+PE3vsrIceuPIyvVdR124s+mUU3nZ8uVUpalCdQHiH6zHQPMEjV1X1uMsvpQUpSE
      SQpWbeqqxmAyG50FqhQtxHwTFvpOL243bJeSXBWtMd1vW1lfgokJmO6Dvp8Q9QMc1ok5c5aU
      kDIvHGPT5ad5hjhNymeGovXIp1YizWbOucNalc9UuYZz5gAUDaSChB1MIxgXZUWb3i11+1nf
      LZ3ubRUDAE5bqqnfPc+D53k4Pj6eMd/kUuL7Lx00Gv/ZF6+Xn3WJpYlWQEygqRQ2Y1JpdOR6
      EHg+fOHNnIuueqpSR5VEYduu9lu17a9LRPrcRQZtEVWUZCmyM5o+dCKqq+Q6oVWZo605i75+
      m/aqE3b1OH1MdX7VbKSuT29BuGnQ2tRzGGlmPPX61HlnZu5/TQFpG4MvGGOI0rhkBOGM1A5I
      pQ+yEEV0HdTngzFgWnMIkpWB78XYxefT5j/F/jKXyGUOLmWxT/kcTbWkabRKvo0MwAbP87C/
      v4/hcDjjrFslbH1EbdBfeoIqFRNDIylN39f3vCJUjezDOCV661TxOWMIPL+s22IjXCapVNcU
      ql5q9RrpREuVwNW51EYa6thUaDDNMlQEds+Alf+Xs1ssph6bNkDHqGuzna9xHWy+B6y+hjpm
      Q/06boMZiMwv4zgCXWdGxGYFY0dJAsbmtb+SPpbft48BEBgrNP3K6LeVK3KLB9wZBgBMIzb6
      fXS7XSRJgslkgnvuuIjnXj6sPca9d94CzyscnGmazhFmkvDqqNVUVpUq7KkveRiGJfFXm0kk
      SYI4jsuyrG2vhSzLZoigqsoVGrREtMKwSSkl/Cnxp/larRaSJJmTJG22SqMKrjEGfQwAM8Wo
      dHtlla1S/Y1KGajXlfbV9zcRen1tQRCUGe6LGJkpRNF2vib1XL9etH4bsVfnWnSemyaAermK
      mUKO2umchVGdhlsbfttemr8T2CkGQOCcIwyL3qm//O4fxqe+9kyt4zzB8bd/9gG0Wq0ySS1J
      EkRRVBK/Omo15xx7e3tz/TvrrpsyqoFTpkHmLV1KJoipXTzNi4qpbFpzJcszpYRtPTDG0G61
      0W63S4bk+36pqRAT05lSHSl10Ytu+10lajbbJUFPa7eZbOrMLYRAu93GwcGBUTLXj9UZim6r
      Vbfr++v7UHb9eDwu/V5VRLyKmala5rphNIFtTzCSQwPsJAMg+L6PH33jq/E33v4GPPz5Jxfu
      /3fe/SDue/UrZgi37/vwfR95nmMymcxIwTYmEARBY+KvQydog8EAx8fHSJJZVVe1F3POEWhr
      EpwjTpNGTICBleFjnueVdZ5UiXQ4HCJJEpANX12PLoGazESm8zRpEiabfxNIac4KrwMSBGxl
      TZqswWTztzESb5p5zBjDyckJut0u0jTFZDIp/V2UZa9qRqrGk2VZqclus+nDYbux0wyAMYZu
      t4vf/g/fjXGU4JNffdq679985/341b/1TrTbbePvnHN0Oh0AhZliNBqVZhqVWA0Gg9Lks+pz
      6ff7JRMw2YdPnUWzTlXBc+R6JEUFBOcYj8eI4xj9fn+OMA+Hw9LZbgp7Ja3FJP0S9ExFGls9
      X53oEzHXAwGqoDqnm4CCC7IsKyVnk+lm0dz6d1pPq9UqzWp0LsSo0jTFeDwu9z8+Pkav10Or
      1YLv+xiNRrVMO7r5bFXMQPe9ONy42IpEsLMiyzKcnJzgw194En/0yFfxre9dLmz5nOOB192O
      v/s33op3/fDr0Ol0GhEWStygUNRWq1Uru+4sIOkujmNEUWQkSrozESgiY+bC6QyQ8rQufZ7n
      JeEhgp1lGQ4ODmaIs0kTWpY42CR/+s3EFGw2dNqmMxvTOPp2YnxxHGMymUAIUTJeavhtezX0
      phq0LtIM+ZTBRlGEIAjKewqcBhro4Jyj3W6XdbNIuqf5yP+gMhn9+gCrSQzTz81m5lLviy27
      22G7sfMMgIg0rTFNU0RxiuE4Qr/bQuAVTtpAaVPXRMI8T8RxjPF4XBbOM5W6VQmKlHKmBzMY
      m3rJVAaC0vkbhiG63e7MnFmW4ejoyOowrTL96LA5SKsYgOlYGxFatD79X/rN8zzs7e2Vph9d
      o6PnQy1YmKbpXBhslmVIkqT0n5BzH5h32JpqW6nrU/cjAq9fYxJGpJQlk9IZyllrBBEjJU2F
      njF1flM2fJZnjgHsIHbaBAQURFJP4Q8DD2FwempJkszY1lut1lYyMx1BEMD3/ZLJkZ14huAr
      5QVmJEOcEge9EYeUEr1eb4YpEiiqaTwel8eox+vSKDBLCEzJYbofYJG5QieKJkJH+xGh8jxv
      Zm7VoawSYzL9MMZKc8t4PBuzrkvb6lpVezzZ6+n5Mvk7TBK7Ppd6/9Rt6rXS7xH9TuUA9GOW
      gbpm1aGcyxyFPEGZvDmkUspDCH7mvAyH88HOMwAAyPMUX//qV7F36x24+85X4qnvfhup5Hj1
      a+5GpxUgzzN86/En8aY333/eS20MMkkAhcO61WphOBwijuM5adzmjDVFtwyHw9LsQE5gOoaI
      mS6lq9Kgur8upVYljOnj2X4jJ6fqF7CBfiMTlmluIuhCCIRhiNFohMlkUhI61a9Cc5qIM3Dq
      FyET3aKoJdN2lbGQCUs9hmoo6fvqY+v+j7PY7ekaTZIYaQOfEoWbO5/B7mH77SA18Hv/3T/F
      E88+jw+99//F5YMhfu+f/3N88+t/iV/7tV9HlAPPPfFF/IN/+Gt49uXj817qmcEYQ6fTwWAw
      wIULF9Dr9WakXvpTib4ujaovqkr4sizD4eHhXKy+jdGYmI7ado72IejzV5mZ1N9s1TNVKV/d
      l34jhjkYDNDv99Hv9+H7Pk5OTspkQtUcaJJ+deKvagcmhqjDZrbS74F+PWylKUw5FPqxy5g3
      Z6+5ND5Ti/4cdg83BAMIAuD6wRD//n/893GpI9Dq9nDLxQvo7+2BAXjo4Ufx3/7T38YHH/74
      eS91JSAzDWOF47HX6xn3MxF9NXonz3McHR3h4OAAR0dHODo6mmuKsggm6VN1RNqI/KKxdYJS
      l6gxVkRJDQYDDAYDCCFwfHxc/p2cnFTayVWGoJuidMa3CgKoHqvH8asaic0JrpsDVa2PGEYd
      JqWaCx1uHtwQDOAf/lf/BG+//1X4rd/8DTz70hGyNMUkiiBkhtFkgkc+9Rg+97kv42MPv/+8
      l7oWBEFg9Wmo0j8RR51YUQ6EGluuHtsEOtMxHW9jAKo0q8a4q5nSi+D7PgaDAaSUuHbtGk5O
      TqzzqUTTpHGcxZnaFGTqU+etap1oOp5MYKp2sohBo7R9BQAAIABJREFU0W+zTNFJ8zcLbggG
      8L4//teI0MKdt13AOIqL8tK9AaLhIZ5+/Ev4qb/5K/hHv/Xb+Jk3346nL+++GciETqdTOo1V
      kPOYCItK9FRCTxoFfbdhEVEkO7vJDl+Hmagx87o0a5qbyuKSiYdCKY+Pj8v1qJKtzayiE13b
      mpswBvWaV+1D8+pmM9t1VNemMne69iaJXy1LomoG+rV1ppybCzsfBjoej/GD7z+DL3/tm7jz
      7ntx/71348tf/DwmSY7XvuF+tBBDtPew12vj4OpLyP0e7rjt0laey1mgvsBxHM/0VaBQRd0c
      pJtvTL+r5TGIkOrOybOuWV/LwrEZ4AmvtPEnSYKTk5PyHFQiXoeZqedUta9OjBedu6l2T9V4
      tK9OjBd9b4pF5zCKxltYV9NhHbghGICpk1MVdiUMtAn0OPnxeIzRaGSVINXoF5uTWDflkFRO
      UUmrYACq34Ak2CoIIdDpdBBFUZnFq5pKVInbZDOn7QS9EJvtfJZhflWmMJUBSEskkWn/JnOb
      zofuo75N3W8THdkctgM7HwZqMnsswi4kgTWFfk4kGVMpAp3Q2WoZqTZhCkVUzQymXgFNTEb6
      vmrphzqmlXa7XWo3trkXmU1Mmk6dueuuUZ+varvqxNXXou5DoaIqI1rErKrMcba5GWPwhVcr
      q9xh97HzDGDdpRl2FYwVtYXG4/Fc/wSd2JikU/V3k8R4VtAcphBIG8IwRBzHc/vqSWn6OZmk
      YVUyb2JS0Qm3Pn5dE5GuGagZtibzkJr5WyXAqGvRnce2Dm7qsTPOcGaehwFlOwaJIjGMM76V
      DVkcqrHzJiCHxZhMJhiNRsbfbAygTtSNKTrF9DhV7VOXmVAdppOTk1pzmTSERYyuznoWaTR1
      TVnqGuk4Uwiqvr+J+Ndhnrofp0pzk1ICrCgZsmj8PM+RZCk8LhCfY0N2h+Vw49lCHOYQhqHV
      TKbbfylPoA6oyFndyBiTNlEHvV4PUsrS0UtzE1Szjs5cbNE/KtTQySqo+9k0AWoStOh66JI6
      Sfjq2ulf9ZzVfg3qvrb9VQaj3tuqc2Ws6FVN+6vXVv9jrOgs57Cb2HkTkMNiMFZkD49GIwRB
      ACEEJpNJ6TzXbcFN0SReXZVg6xDdTqeDyWRSlqeuiohRCRPNY0rq0mFy0latnaKqaNy6jmQT
      1H1VxqFGNKmOeptDmaAzh7rM2eHmhGMANwmEEOj3++X3brcLxljpH1AJ6LKwxdDr/9IcqkPZ
      RNiJ8FEeg21MfTxah1ooz1aFk46jbVVmEZW56E5k2sd0DUzRSLb99HOrEyVlYkIbh0sf2Ek4
      BnCTgrQCzvmMf8DWBW0Z2DSLRZExhFarhSiK5sbTj9GZly7929ZF0HMdbGtSmY1eYdRWXkLX
      SGxMVl+/bmZSr6XJiXuuxB9AnjstYxfhGMBNDMYY2u02GCtaEy4T5rgMTIxBlWw9zytLVZPp
      RyfEdfoVm6DW29e1iCrGVxU5U8ev0YSp6glkjLE5yd/EHM4TjDG4IKDdg2MADgjDcKZnQt24
      +FWCzBudTqc0Ten9kVWYfAD0r23tqgPXFgJbtb5NQyXuNj/FthRvO28NxGE5uCggh9IcBJyf
      REmduZIkKfsi61CJvi2Gv2rtuqSv2+W3GbRu/W9bwFDkDTAwcDb9c46BrYfLA3Aoked5mThG
      cembIDK+72Nvbw+TyWSuO1cdqCagppLootLVDmdDnCXI3XXdWjgG4DAHKYtSyu12eybxal2g
      6CTqUmZbk6nloyn+3wbVEWsq+ewYwOoRZ2nZp9ph++B8AA5zYIxhMBiUn1cRImqbh8JRj46O
      ANhDMVXHsR6C2cRnoTugz6P2/80EweobgjLHKDYOpwE4WEFSN5mCjo6Oyqics8L3ffR6vTmz
      j628hM0UVcf2r45tOr6JFuGwPsRpgtyFEm0UzgnsYAWFH9K/e3t7K6mk2u/30ev1cHBwMGfz
      b0qEmxJuPeFqWd+Bw+pBTmTHAzYHxwAcaoNzPpNNvAx6vR6EEDg8PFyYELVq6LkEWZadS8ir
      gxmeEAg9H94NWK59W+GutEMj+L5fJmk1Aecc+/v7EELg6OioMrpIzapdlKDVFDqxJyawTg2g
      7vi2Wj83G2xlqB1WD+cEdmiMpj0YOOfY29tDHMe1o4pWXdtGL66ml41YlxZgq0Fkq5Ok77tN
      sf6bAmMMHleeMYmZXgMS0oWWrgiOATg0RhAEjeL1u90ujo+PGzuQV0mUdemaavjUKQOxLEwO
      bVvhOZUx3OwmKcYYPGYXMrI8Qy6blxV3mIdjAA6NQA5hzjmCIECe52Ute53Ae55Xagurih5a
      BnrpB1OBtlVDJ/5qETmTmceU1bzL0j89I6O4INSdQJT9DM6Om9tEtkq4MFCHxqBHJo5jJEmC
      yWQC3/dnmpqo9fvPk/gDp8RYLwGhl1peFUi7UKEyAFuoq6qN7KomwDnHKJH4+LdexjeeO8BJ
      VBD8bijw4Kv28dNvvBVtj52JuUlZmIAYUPanlCiyjm92/0lTOAbg0BhE1A8ODs57KbWgElxT
      OeVVRx7ZGuPoZh5dQ9h1BsA5x/euTfCvPvtXGCdmSb8TCPwHf+01eNWFcOXO/ShNnHLQEM7d
      7tAYjLGym9i2Qze36NL/akwS8zARb90HYYKp9PMugDGGa6MU//dnvmcl/gAwijP84WeexcE4
      W7207oh/YzgG4LAUWq3W2saWUiLJs7m/NM8aR3+YTC1qZc11SNpqH9265iVdG9g16V8IgQ99
      7UVE6WKpfpLkeOjrL66c0Tn63xzOCeywFIQQCIJgbZqANKSDSgAeZ3Nx4iYHKmCOtNkUcd01
      An5WHE9SPPnice39n/jBEYZRhtaKeICz/S8HxwAclka73Z5jADO2dZxKZU1eUMYYAubNOFOl
      nLIErSqoDjXCxyb9bwr6XIuugV6oblfAGMPz15uV8c4l8OLBBPfc0lrZ+XpclBqi+n9yEgPF
      8+jqDZ3CMQCHpeH7ftnEhSABpFqMtkc1XhrAROA5Y8C0hAPtYyKylN2rbz8vwqr3K6hiBLto
      /mGMIcmaO3TjJY6pguACdRSKJEtd5dEpnA/AYWlQOWcVnDEE3IPPBLzp3zLE3xZJA5wmU5mi
      SKQsWkvqNv51OXubYJFPYFfLQEgpsd/xGx+3zDEOq4VjAA5ngud58P35F5mx09aATc0/thh6
      +qybeNTficBSIpJa8mFbiKuJCeh9DnYJUkrceaGNbljfoN9vebh9f3XmnyYQnMPnHnzuweOi
      /LsZ4RiAw5nAGEO73V7ZWFXlpklC1pu46DH+9Lu6f53xNwnVIU1r3QYtZVkwSPzMD91We/+f
      feNtwDmZujjjELz4I+IvGN8509sqsB1vg8NOIwiClRBWPUFKJfC6DV8l5kmWzm0z+QBMnzeF
      TJP6TRFJapG6XUOWZXjHvRdx/x2Dhfs+cNcefuy1F7aO4fk1tACdce96MyGXCeywEozHYwyH
      wzON0dRMo9b1UbfZsM7s37NAr0m0LetaBkJ4eOTxy/j0t68gy2fPw+MM73rDLfjrb7wNWXa+
      5UFMqHvdTc9YNs1V2TU4BuCwEkgpcf369aWlOj3ksw4jsGXb1tlfL7tgixraJkaxKxBCYBjn
      ePz5I7x8HIEBuLUf4v47B+gGfOsk/1XAMQCHmxpSSozH49r1/nWY6vXo4wOzBF7vGbDoGHV/
      kwNZTyhTJXLHBBZDvxe6WdDm/L4RkOc5kjyFmo/MZj6w2W1TSEhkeQ7BBVi5q74vg4RE2oDB
      hJ4/PxubRs4p19zlATisDEEQIIqixtU/TRE9ajz/onDQRVAJODW4p+1UnVOdmz7ra9gVYmVi
      buuGEGJhaQdTdFeSJOCco91uw/MKcjQajWZyS3YBnHOEvFmnvKLkSfGueJxXdkIrEtzqMwDB
      xcxzS8+6YHyGLzgG4LASMMbgeR4GgwGuX7/eyJ5qIlhpms6Ul6Z9m0APAaV69FXF4YBTSZVz
      PtM0ZtsZgJ5otmkT1uH1K3jhxZfRHezj1XfejiuXX8Ytt90KKSWuXrsOn+V44aWXsX/Lbbj9
      1kvlcXmez2iO/X5/5xjAWVAQ/upnm2EqlAClhkAohabpbwysFGwWPQOOATisFEIItNttZFmG
      JEkqS/7apPsyuidJIISo1AKqoNcBIulf3c45n9M0TFU7yaSxySYtTbQOkwNdlwBpG7Aes9ZH
      /+QP8FLrVcDVbyO9cD+GLzyB3/md34HMJ/i//s8/wOv2M7zUeg0Ov/v7eP1P/rv42z//E8Zx
      djEXYhkwxhCIeslwjDG0vABRloAzBo97SPMUuZQQnBvHqfOsOgbgsHJ0u92SuERRhNFoNOf4
      04m6SqBUx2yWZSUTsEG329t8AWqVTnV/Gt9EFHUNhEI11ylZ66GsdbKHq66PLYx21etnjOHS
      ra/A6OQ58EEXJz/Q1sA53vNv/QKCF2/Hez/zfQDzDEDNi9h2jWvTYNMse0wTLAPhIzuj49kx
      AIe1gAhSq9VCGIYYDoeYTCblbzaipcfF0362sg/qZ13itUX3AJiz/ZsYRx1HNH3XjyeNQzU5
      VTm5TeMS9MQ3dd+mYbPqeawD0WQCeCFGx0fI0xTFXcuRS0DKHP/sH/8mnnn+EH/yr37fusY0
      TSGEOPdOctsI3Y8izpjB7BLBHNYOxhh6vR76/T48z7P2y6XPKqFa1EdWtfOrYZ02gk5/aj0h
      1SmsjmGay6QhqOPqzI38CPoa9PUsIuS0ZtUvcRZTiTreKk0unu/jwv4erly+gldfDPGv3/cR
      /MX/84fo3/E6MMbxm//kn+GX3/0m/NEHHrGOkSSJsbyIw+rhwkAdNoosyzAcDpFl2Yyqr0rk
      KoG0MQcTykiHBdEo6lxE/NW6QYQqDcBkTrGZtEzfzxM2M9lZ/BtCCFy//AM88dSz8MMOfvRH
      3wqOFB97+GEkfh8/9+6fwrUXn0P30h1oeQzf+Po38MBbHrA6eweDAY6OjpZej0M9OAbgsHHk
      eY7RaIQoimZMNqqpgyTcNE1L27sO2k+N2jERZ3V/9Tj196bRRia/g4nImxhFlmVzmsGieequ
      Sz9Gn9v0XT2HZZO06oSBmtZpYwDdbheTyeSGTBrbJjgG4HBuiKLImDimm2F0E4pKyNVjCKo0
      v8iOr/sOTPuq86rHUVSQKZdAHVM/tqqhjT63uu9ZGYD6m8p01XnO4h9YRruxzcc5R7/fx9HR
      0c44gxlj8H1/J/plSymRyMw5gR3OD2EYgnOOk5OTUoo32cd1YqVDJ+A2py5J3iTpkh3cFCZJ
      n8ksojMM1Vyim65MDEpdXx3JX5fQl3H2EvSoJZUh6Uz2LMR2lYQ6z3MMh0N0u93yHh0f1285
      uWkwxtDv95fOhN80ckgIxp0T2OF84fs+9vb2EIbhHNEzFUnT/1SiqxI5k3OTTBRSyjlzhS3K
      SCe+OoNS16fuozMJdZ8mjeJX6aTVtSS6vlmWbTS/oS7IX3R0dIQ8z8tM4W0D5xx7e3vGcOdt
      hWAcgnFnAnLYHmRZhiiKkCQJpJTodDqlmWUymZSJZSYTj04kVecuQX/UaSyb/X4RTIRfZUyq
      rX+RA9s0tsm/UGeNJme1LapJ/W2biZfneWi1WmeuOHsWhGGIVqs1Z5bq9/sYj8c7GbbqGIDD
      TkBKiSiKMBwOS6Zgqi1Th1jqReHUKCRT6KjNpFQF3XR0FilejdCpqxHo2pH+r1oeQz1mmxEE
      QckENq2x+L4PPwgw0kw8vV6vFFp2EdupUzk4aGCModVqIQgCjEYjq6OtysFqi9ahKKNVEsBV
      h3uepeGO7l+hbbuGOI4hpYTv+4iiaKNzt9otXD88hKcUbKNExV0l/sCOMAApJZI0gSe8rWnp
      53A+4Jyj1+uV30k7HY1GM5K6zamr2vWrol50x3NTgm4Ls1wGy0bXmMJddx3n4QugyB6hFWzz
      PG+niT+wQwzg8pUrkJAIgxCBkiXIOUcrCMvMwRvlQXeoB8YYwrC4/ycnJ4jj2EpwTSGa6jgm
      ZqCPU9dXoB931ufSFpJqM1+dNaRzW0G1oTYFKm54dHQ0dw89zyvLm+wqdoIBjMZjSEyLi8UR
      onhW/TtUPrdbbQy6PQRBs9rcDrsN0gwmkwnG47GR4Jrs+4QqYmnyLSyS6JsSfJPN/iwMZJGG
      s8vYhBUgCAKEYQgppTW0UwgxZ0rbtWu+EwygpYUIVmE8GWM8GcP3PHQ7XfQ6XacV3CRgjKHd
      bsP3/TJBK4qimegW3fFpezb0UE49iWvVROgs41ZJxO7Zbw6qZluVd0AaF5mjfN8vtdBdigba
      egZwfDLEwdFh0caswcOcpCmuHx5gODrBpf2LpdloEkUAJNIsg+/5EEIgjiNEcYwgCNBtd9Z0
      JmYsE37oUA3VRhyGIdI0RZIkGI/HAGYdxWRSsEn0epG5pn2L68KWU2BCE02Ext4lqXQR1ml3
      V7uSVcH3fXDO4ft+Gb686JhtxNaHgUopMY4KO1ue5zg6PkLWMIKBc44wCOF5AqPx2BrvzBlD
      u9VGv9eD762nGmGWZzgeDhEGIeIkxvFJ8fnS/gXn4F4z0jQtJTS9xIKaJQxU5wzQ76tm2mqY
      ZlX2b904fxXbHOPfBER41xUFRKbjReUcBoMBTk5Odv66bj0D0JFlGa4fHWC8ZudLv9tDkiRo
      tVorMyONJxNcPbhmlMY84aHb6WDQ6595Hgc7KJ9gPB5byz7TfnSfyNa7jF1/ETG3HacS92XG
      0FE3+3jb0el0MJlM1hbG2u12y2fDBvI3HR4e7rzmvnMMACjWc3h8hOOTzWQFMsYw6PXR7/aW
      uuF5nuNkPCpMWTXm6rY76HV78Lc09f1GQZqmM8/1eKodmojlMhK/6j+om71L+9M2PXJpWajJ
      ZLuMVquFNE3XZmff29vD4aH9PaVclBtB+gfW4AOI4giHx8fwPQ9hEKCzBps6Ywx7/QEm0QTJ
      BhwuxHCyLMOFvf3Gx0+iSS3iT3MNRycYRxPcevHS2kxRDoW9V/UXqPkFaZrO1MjJsqxxlccm
      BJsczlSniAh/EAQIgqD8ndZDZbLVYnZBEMz0Uw6CoDy/KIpK09emk6hWCfLZrIsB2EKBgyAo
      n4/Dw8MbgpkCK9QApJSI4hjXDw+QZsXN6Xd72B/srW61hjkPjg4xHG2mAh8DsDfYQ7fdaWSv
      T7MUl69eaSwxrPv6OTQDEVpyKOtEQO1LAJjDTCnr2Pf9kqjTc0FEPQgCSFn0Dej3+yv3DZEv
      ZBfKFpvQ7/fXVhm00+mUmiFQ+By63S7iOMZkMgHnHO12u2REcRzvNEOtrQGY0skJJLXqUm5T
      Z21TMMbQCsONMQAJ4ODoEJPJBLdeuqX+cXlz9bvdamGvP2i4Qod1gswwYRiWZgCViKpmGlMi
      GOe8LChme49o33XC8zzs7e0hSZKy0mYdbEvE2rqkb7q3FGVE2pd6jfI8n2E+rVYL/X7ht9vF
      gnC1GcCVg2sAgG6nA844JCQ440izFOPJxKg69TrrD6mcxJvnvpM4wuHxUZmF7HkeJtEEnufN
      mWzSLMWV62bHrwm9bg/tsIVwqvY7bCcYY2WterXZPTDbp7jVapWRK3XCNTcJ3/dx4cIFHB0d
      LQytlLJoIOKzzWXh2rCOaDm1AQ31iuh0Ojg8PKx8dyeTCSaTCRgr+l4nSbJT2cGNfQAnNWNd
      Az9AGKzXaZwkSe31rBpHw0IKUBOGBC/a4rVbLQguMBydIM3SRhJLp9VGuEQWMzmaozgq7Mhc
      YH+wZ6yYeTQ8xngyRppluOXCRbTCVuP5HFASCSHETLYoSfv9fn+jZQuWAdWyPzo6spqEiPhv
      C7Isg+d5K5O2Pc9Dt9vF8fFx+a72er2yvlQdUOJYEATY29vDZDLZCdPQ2sJMpFyv+UdKieOT
      4bmHtqmRGlmeIcszxMlyttV2qz1T56gJGCv656rhsVme4dL+xVKyHE3GODg6RKfVRq/bQxgE
      zsm8ApBvTGUCQRBsPfEnMMZK6dekCeSQYAA8JrZCK42iCL1eD8PhsHzulwVpcmqN/3a7jSRJ
      lvKRxHGMOI7RarUwGAzKJERgOxvvrI0BJNOIg3UmN0VLEtpthSeWf8EYY7iwt4/9wR5OxiMc
      Hh8BYHj52tWSITHGcOvFS2vXzG5GhGFYZoS22+2dq0VVpQlQ96htQZZlGI1GJePt9Xo4Pj5e
      Kiyz2+1iOJwVJIMgwMHBwZmYHZmGPM8rx+n1eqXASM7j82aoaw00j5N4beYFxhi6rTYOh9vb
      J7QJWmG4EqcvYwy9Thfddqd8uNIsQ5omRdijcLkF60K73YbneTtH/AmMMQwGA1y/fn3rY9yT
      JCkl6yiK0O12kaZpo3IMnueV0VYECjFdFWFWtRNVu2q1Wtjb2yujypbxG1BjpLOgdhjocy++
      0HzwNUucaZbiB5dfWsvY64SUEoHvo91qT+31HN1O15WCcNgKZFmG69ev1zavroIQnRVSFi1E
      KWpn0dpVs5cKCvnc9jr/eg7IsqbwtYqDUkpcvnoFge/jwt6Fpe3bNgguEAbhXHno84Ras05w
      XobCCiHAwCAEx15/D8E0DtzBYdsghDASRxP6/T7iOAbnvCy2dx5gjGE8HiNJklpr73a7Rm3B
      8zxr+edtgFq/ir4TlmECG7EHxEmCl65chuACly5cgO/5GEdFk+8ojtHtdNDrdBuPW5Ro6OHl
      a+fLAHqd7qkDlzHkeQbOZpuNO+neYZdA+Qo20wSZiygCjmLozzvyhZK4fN+vlOKllHPO4yAI
      tjo5Tif+phpRTZnARg3CWZ7h8tUrc9vb+fJ+gjAIcWGwjyiJMRpvNiTU8zwMuj10NebFFTu7
      k/IddhUU1677AyjElSJlogwI8vn9zgvUNtLGAKhfhA7q/LWtWNSASC0nUhdbIZaehUgyxtDr
      dnFxb39jmbNCCNx68RJuv/UVc8TfweFGAdnJVbTb7TJscjQagTGGzzxzvHUaro0IUotH3VzV
      7XYRRdG5h5XboJYXsWVkk0bQJPx4K0JCkvTsDhfGGPrdXlkrvNPuIEkTDEerqdrHGIPvedjr
      77ksXYebBr7vo9VqIY5j9Ho9RFFUlkJgjOFwkuE7Vyb4sVd10fG2o/GM7/tzpijK1NVLORC2
      3fYPzGeaqyYgtb8FUN0lTnUcbwUDSNPVqI4UAkn+hDaKWv5Xr19DkqVoTaORkjSdSdZiYGXP
      4XZY1GnJ8gxplpVp4bddunXlTmwHh22HlBJhGCIMw5lMWaCQSp++WkjST1+L8JZXtrbCDKR3
      QAuCAO12G6PRyGoW2gbGVYU8z42d66iRUZNy5Sqj2AoGkKSFLXEd8dOcc1y6cHHOeZKkaVlv
      X6LI4PM8AcGFtl8Cz/PBncTvcBOCCDo5R1VTD+ccT10tJO2nr07ww3d0rIT0LKGKTSGEKAU3
      ilKqqvG/KxnbROwpwVYl/MtaJLaCAeR5jutHh3jFLbeufOzD4yOEQTCTkMYYm5HmGYpELB3F
      fruZ1OPgsApkWYbJZILjKMNLx7NRM0mW4MpJse3yMMUTlyfwxSwhekXfRy/gyLJsIwxATewa
      DAYYDocLtRIqK7ELoHLjpOXY2pgu0gioQdBWMADgdEGrdiYNen1nr3dwWBJhGBY5LGyEp69O
      8LnvDZFb6PjHnzqNoOEMeMdreugGIdI03Zj0T9Jwp9PBaDRaSPzJv7ENpqs60K+jSvypR4GJ
      Iej7UyLZuTAAksg5Y8CUk+V5XtrhVwlH/B0czgbP89Dr9fC2VwvcMQjwkW8f4nBiJ5j7bYH3
      vH4PF9sc6YYzaokBcM5rZfMGQbC25jLrApnT1M5xAGZ8BOQYBk6vidqjmrDWUhA6+t0eWmEL
      nhAzrfgcHBx2A+PxGMPxBJ946hjfvTKfJHbfrS2867V9yDxFnuUQGw4P9X0fg8EA164t7sHR
      ahVm4V2q369Cbzikf6bIIP139bps7O70uz3s9QdohaEj/g4OO4owDCEg8cq+OSLulX0fTOZA
      LjdO/IGC0NWt4+/7/s4SfwL5ANToLLX6gCr9G49f9wLbrTZuuXAR+4M9Z45xcNhxMMbg+z6e
      unpKOH1++l4/fTWCMHQ/k1IizTOkeYYkX69DuE5/gFU2lDkvkN2fiL+aIKbG+uvOYQJjbH0+
      AMYY9np99Lo9R/gdHG4QSCkxnCR48aiwr//InR287a4evvT9Ib76wggvHBWlIaoCK9dJDTzP
      q1XPp66PYJdAxF6NEqLtgNkfujIGoE4c+AHardZSBd4cHBy2F0mS4JlrEdo+x7tfP8AdAx9Z
      luLtr+7irv0Aj37nCN+7FuHeS7P1dhhj8DbUT7iuZL9t5StWBYqmVAm+rVz30gyAMYZWGELw
      wvPs+z56na6T9h0cbmAkSYJMAn/nhy/BZ3lJbNM0xR19D7/04EU8fTU6tx4Bfs1s/SRJytr/
      NyL0kHqKEKIoINIKlmIAnHG84pZbnTPXweEmQp7nyLIMD97RRbvdnsuuzbIMPmN40yvb57I+
      U5E3G8hicSPDxIB1p3BtCt4OWxhHheOn3Wo54u/gcJOBbOaMMURRVLZU1EHEddOOViFEo6Y0
      217/Zx1Qq4oCDRhAv9vDoD9AnmeuqbiDw00IEvr0BCMbVmUOzuRpjXuP2/0ITSX6825jeR7Q
      TUONrljg+2hNq2U6ODjcXCA78p/92XvLbTI5xq/8vf8Eo1TiK5/6MD71lScgZYp/8S/+j5XN
      yzDN7q2gO0KIxlE9N6MGoIeFOjuOg4NDI3z7ySfLz1/82EO4/a5X4OFPfRW/+M534j/9td/E
      Uz98H+5408+sbL6C8FcLnZzznannswkIIdDr9RDH8ZxZTM0QvrG9IA4ODmuExMOf/ir+6//m
      t/CFj34A3O/g7//Se/AvP/wN/OJPv22jK/E8r7FJh8opnxVSSmQynzFVnSeCICgrnKpRUZ7n
      wfd9dDodDAYD7O/vOwbg4OCwHPJkiCee/C4xbEuTAAAIhUlEQVT+19/73/Dd73wLJ0mMP/zT
      j+IX3n43PvK5b250Lb7vN9YAqKBaHbRaLXQ6HfM4APIN9juwwfM8DAYDCCFwdHSELMsQxzH2
      9/exv7+PwWCATqeDLMtwfHyM4+Pj+sXg4jhGaKiZ7+DgcPPg4OAA//gf/QY6l+7EG15/D7q3
      /xB+/q89iC99/AP4ypPP454H3o73vP0N+O//x/8Fv/1b/+VGqoEGQdA4AoiOo4imKgghyj7I
      2wjOednuclFfA6qUWn53DMDBwaEuqjpr6ZBSLuWYlZCl47cO9vf3cXBw0GgeYJrM2mpVMg7O
      Ofr9fq3GMpuAbtIJggBSSpycVPc+J6KvdxBzTmAHB4fasJlMKElsFcikhGCsVs0gU0VPknI5
      5xgnedHxz+dza6QKBjYGEAQBwjDE0dHRuZp3OOfodouyOnEcl/cgy7JaDNlWCnqtxeAcHBxu
      PPR6PeP28Xi80JRSB4wx+A1qBvm+P1POgXOOUSLx6e9exeMvHGOcFI7hbijw5jv6+Ml7LyAU
      BcOiRlQmcM4RhuG5NYsh6d7zvLLEdRzHS4Xgq8eo5h8ppTMBOTg4nB1ZluHg4GDjyVXdbhdR
      FCFNUwgh8OzVCf70Ky8iSs3r6IYCv/S223H7oChW5/s+PM+b0wLUcTeNXq+ooDyZTM7cTpPM
      PXqbyLKn8EpW7ODgcFNDCIG9vb2Nz0tSPGMMV05S/PGXf2Al/gBwEmX4oy++gOOosIUnSWIs
      IMcYOxfi3+l0kCQJjo+PkSTJ0sRfNYPp3cJmNIIzr9jBwcEB59N/2/cLSZ4LgY88/jKSbDHB
      HCc5PvbklRlbuo7zqnbg+/7KTGmmpjzqv4BjAA4ODjcADscpnrlSPwz0yRdPSv+AXhn0vLqF
      CSFWNq+NgZHvg+AYgIODw0pwHlJzkiTgnOMHh82k5jSXePk4Lk09KgMIw3AlUnhTBEGwsv4E
      VaYjyoBmjDkG4ODgsBqcZ3XNtIbpR4fJXBQEAYDzOZcgCNbWplItAufyABwcHFaO82qyLqXE
      oN2clKnHUKnr8wr9tPVWWBYk4atQI4GcBuDg4LAySCnPxWxChPPO/Rbafn1ytt/xcEvPh5QS
      aZqWRdJMpRT0EsrrQKvVwmg0Wtl4VWt2PgAHB4eVIUkSHB4enkt/XZJqBZP4idddqH3cO++9
      CJmfOoGDIMDx8XERViol0jxDQn+y+MvXyATWEXaqMwCdKbg8AAcHhzMjTdNzr5OTZRnefs8+
      7r3NXLFTxQN39vHgXf3Szs85x3g8LoljLnPkkOV/hHW5uNcVdaSXfaC8APruTEAODg5LQ0qJ
      0WiE8Xi8Fe0V8yzFL73tdrzjtfsQBmrtC4afvu8ifuHB22YIbqfTmasnNHcsE2uLcgrDcC3a
      k172gWohqffKOYEdHBwaQ0qJ4XC4tqiVZZFnKf76Gy7ix+/Zx5MvnuDqSQwG4NZ+gDe8ooe2
      z5Bp0jbnvJKBMaw3xHWZZjaLsCgDuJx7pbM6ODjcFKBmI8CpeeG8tQAicHmeo+sz/OhrBuVv
      ZP9W2yFSNVBd+haMo345urOBcg7W7WRWQ0DVbY4BODg4NEaWZXNEXwhxrr4AU02fKqRpanS+
      bjKhjcpNrxumktDOB+Dg4LAUKGGKCChJ2OuUZIUQ4JxbCb2UOV6+cvX0e5bia3/5JXznmb+C
      zHN899tP4Iknv43RRJP4a7aFXDU6nU7jLmbLgrQftRSEiwJycHBYCoyxskeuanrRbc/Ljk2g
      uvgASgem6ndI0xQXLlwotJEkxu//yz8AUBD/3/4v/jM88fTz+PhDf45nnr+K3/vd38U3v/6X
      +NVf/XVMFGvVeWgtvu9DCLFRHwrdG1cN1MHB4cygXrxEWCjM8KxMgCRUz/NmfA0EIUTZm2Q0
      GmE0Gs01qjl68Vu4eN878bM/8Va85a3vwC2DFlrdHm65dBH9vT1wFASx3W5vPIOZ5t10xrGu
      nbmOYA4ODkuDMYYgCOYkaPILCCHKz01NQ91udyY2HygapRDhz/O8dJ5GUYQoimYct3mSwvMC
      5FmKjz30pwgGv4EsTTGJIghkGMc5bumHZfJXkQCWI81zeFxA8PXJxnRum4Tq+FY/Ow3AwcFh
      aZjs56bwwyYaAWMMURSVzKPdboNzXrZHTNMUeZ7D87yZWHcAuPz8X+HTn/404t6r8MwXP4DH
      n/kB+DSZi3OBbneA+PgQSS5n8heyPEeSZ0Xq15ojcqgRzTphywKmTmClI9i1hHRwcFgWUkok
      SYLJZIIsyxCGIYIgwHg8Lgk1UBA90hSoHLGN9LTbbYxGo5JpkJbRarVKrYNq5ydJgtFoVLR3
      9Dx8+QuPYZJKvP6ND2AvBD77uS+gs38rfvytD+ArX/w8JkmO1953P+647WK5vlzmiNO0TPXl
      jBehoGvQAnzfRxiGxppDq4ZuilPDYMuMYMcAHBwczgq1rAIwK3EeHR0hy7IZBsAYK4kRSaVZ
      lpX2/TiOy/3JF9But9HtdmfmpWzk0WhUOovrIggCpGmK8WSMKJ2VyBkYQq9ZWGndOQFspG7S
      Iu3LNYV3cHBYO6hh/CIQwyApn3OOOI5Lc4kQAhcvXjQeR9JtExCzyvMch0eHGEUTcMYAMHDG
      4PHVh4eS/X+TSXO6mQw4bQrvnMAODg5rBRHuNE0xmUwQx/EMsaf4dM45hBAzkisR/263OyeA
      6kRUCFFpv7dJw5xzXLxwEezgAGmSrDUR7Dwypk3zkRbmGICDg8PawRiD7/vwfb9kBBTFQz4B
      +jcMQ3ieB8/zMB6Py6xjIvCq6cjW9GSZ9e3v7eHw8HBtYaHUwH4bUDJgZwJycHDYNKgRSxzH
      iOO4JOpBEJQJZsQQqGRDWcJ4jSGaUkocHR2txUbf7/cxHA7ntBTKpcgkgwTgMVn6RNYdkfT/
      A/6vt2XI0mdzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='MapWithRadiusFilter' width='384'>
      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
      Ael32aAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='OptimalFlight' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOyddXhc15m43zs80oiZLLTAbBljihMHjaGmvLv9bdL22RQDTTdNWnfLW9hC
      2lA5bdNwYojtmCWzBZYtshgsphnR8L2/P0Yaa4S2Y8dOdd7ncRvdOfDBuee78J17JEVRFAQC
      gUAw7VBdbwEEAoFAcH0QAUAgEAimKSIACAQCwTRFBACBQCCYpogAIBAIBNMUEQAEAoFgmiIC
      gEAgEExTRAAQCASCaYoIAAKBQDBNEQFgGiLLbvr7B3C53NdbFIFAcB2ZMgD0tDTw0ksv8fvf
      /97n34n8EgD62mvY+r2f4/iAH5T4xiOf4e/b911WnVd++wyPbf3tB+v4Q+Jq2WkqbpodT0lz
      /4S/733jTyTFx7Ny1Uq+/PSPAPjm5z/lY/sdr/2R93PyL6NXN5nREfSJeCIQfKSYMgC0lhXx
      zPf+l9raWp9/3T0WAJyDvRzcdxiX/MEEUZxOJpob3/nj7/jjm2ODg6QA7hvrU0Z1Bcf4yjM/
      G3P8atlpKlxOF4o8vk0U1wAP/ddj/OXtwxSdOcNzP34aADduH9tXlJ6lqrL+8jqeavKXB7l3
      02enLCYQCD48NJdSKD5xPj/4wQ/G/S00aQGHD2+7qkKNpqWumubQ4Gvax9XCau6i8FzFmOMf
      hp2mQrZZMBsTuHlZ+qTlHt36y6vfueLm+JGTV79dgUBwxVxSAJgMR287P3juFb775FcBsDRV
      8qd3j7J2UQrPPf8S585XERWbyE9+8UvSZ0R765UWneLZ373A+dpGZiSmUFFcyfxNo1uX+enW
      b/L+vlwG/M5jayoEYN2mT3LXmmxPEcXN26/+lZdfeZ2Wtk6yl6/lJz/+Hia9RzVbfxc//N53
      2XPoBHpjAJ/9z0d4+LP3ja+LtY+f/fB7bN97GEXScueW+/nvx76KQeu5USrI2U1Np5uG8yd5
      d8d+NMZAPvUfn+c/P3MvAG/+9Tl27txHbVkVTzzxBABJs5fyyH98bHw7vXOEjAQTf/7TyzS0
      drB8zQa2/vcX+MMLv2XH7oO4JR1f/9ZW7lm3EoDujhb+9vJfOXrsBG2dvczMyuJLX36c+bOS
      pvTT7u2vs2//AZx9bTw5JNvsJWv4jwfHGJ2db/6NoORsVmXP8h47e/oIz7/0R0orakhMnsmi
      BfNYe+e9zMuM95Zpbqjkr88/x+EjJ9EZA/nmt7dyx5plnDn6Pn9/+z167Z08+cQTSACGMH78
      vW+inlJygUBwrfjAL4Ed/V387vcve/8e7GngG49+ni889RPWbv4Ef//HP5gV688XvvqUt0z+
      oR2svW0jMxes5Of/+zM+ec96JLt1nNYlFixeSWJ8DPFJGaxatYpVq1YxIybcW+I3//c0r+89
      yZcef4o///H31Obt4Zcvvur5UXHzb1vupMEVzLs7dvOH3/6Ul378JC/8c8c4fcl87r47OVVh
      4U9//Qd/+cOzlB7dwScf+rq3RMXZo3zu4f+H0xjFn/7xT57+2sP8+Ftf5Nm/vAtAysw5zJud
      SWBItFfWeRlpE9rp6196iJf++T6ff/wp/vDibzj+7h/JXLCCQVUIz/7uBb720IP8+4P/D/vQ
      85nivFyqW/v4/COP8fzvfkl2aiS3rFlDa599Sj8lpcxkxbJs1AaTV7aMtKRxyx7as50zpdUX
      /373Zdbd9THSF63ml7/8NZ/5+Gb+/vxPqW8yj6jVyYYtnyA6bS6//8vL/NdnN/Dg/Z/FLkNo
      ZAKrVixDpTKyYqjvlcsWeQKBQCC4fihTULp/m5K14Bbl1KlTPv9aO7sVRVGUvqZSJTxtkbd8
      87l9yvzlGxV5RBvm+kIlbdHKob/cyh1L0pW/vHXAp5/HH35QeXnb3nFl+N0zjypP/9/fxxx/
      5TdPK1/55s98jr31x58pDz32LUVRFKX4+C5l5sLbFdcIYUqP7VQylt01pq2yk3uU+KzFin1E
      YafVoqRHRSr5VR3e/h59+jc+9fL3v6GkLLrFq2/p/m3Kqi0Pj2l/PDtlr7zPp8zTjz+s/Pqv
      74444lIywsOVXteY5rx8fF228s6BIu/fi2dGKecae8ct6+pr8pFhmNG2f/zhB5XfvLzN84fs
      VJbNjFTe2JfnU+cL969Stu07N0LOIKXbNlJQWZmfGKhc6HUOFelVooJnKpOoIhAIPmQu6RFQ
      Q81Znnj8cZ8XhU//6OfcvmLxuOU1Gr3P1Z1ao/f+t6u/lRN1sH3LLVcQrsbvayQ6vR8oPQCc
      OXmclSsW097a4v09OGEmTflFDLjBf8Tzh4LjR9m06V506ouSawyBbNi4gtN5p8hOXT9u/wvX
      3EFf6VexyuB3mfdTkjT2Gni8YyM5W3CcbTt209VtQQFK6lrp62+/vI4vA3tPI+WD0dyzbtEU
      JbVoNCMf6EhodUaUCV/tCwSC680lBYDMeWs5dPiNq9KhrddCSEwYug9hBcJgr42D773Lw3Vn
      fY6vum31mMcPg4M2DNqwMW0YA0JwTpIvL0lqdBo+lMcZf332B3z32dd58htfZ/nKeFSSRHXh
      gWvap+x24xdoEAtGBIJ/QT7wS+DLxS8sit66WnpsbkIMl/EKULr8K8m4tCRmr1jLjr89P2XZ
      xLRUXvnH8VFHFc6eOs3izV+esF55Xi7q1DQMI2fIaxQNfvvcc7yxM5+FqVHeY6/9LujadDaE
      ITQOXVsFZ2pbWZh88SX+FV3XS1dYTyAQXBM+9As7lT6U21cl89R3fupN4W+9UEte4bkJ6wRG
      BHH6yGEmSG+fkFvu2sTpXa+z7cAx77HB3i5++LNfjslHv/nu+yg/vp3tBy8GgX1vvsipJjV3
      rZ7vPeZyubz/3dnayH8+9BW+9F9f9s75geFBnC84Ts/A1C9mLxe9RktTS6fnD0Uh97132Hei
      7Kr3MxJJbeSJR/6DB9bfzTu7D3Lm9Em2PvFV/rbzMlM6VXoCVK2cLL7M9QUCgeCacUl3AMpl
      XNJKKs2Y8hKeRyXD/Op3f2TDhk1kbXuV2EgTXf0OQiT9hL3c+8mH+d2fbicjay5hgXoe+tpW
      HvrURiS1lnEvt4cOGUPiefeNv/Lv//Exng6NIcCopbHhAh/790fH1NKZwnn79b/zwCfu5xcZ
      mbhdNirqe3jrzXcxai7Gyb889x32bPsjoYF+VFbV8W9f+QaPPnS/9/e4eav49NpMMtJmkpGa
      wKzFt/LCL793SXYCidGvACTVRbs9/a1n+NQ9a1i2fAUNFVWkZt9ERkbipXtHYkz7nuNj+x3Z
      6CPf/RmmuN/w4i9+iFOtZ/O9n+ST631XCnv0Gae/4YYkHd/7/lY2rV7ErDlZ2KUATue8d6mS
      CwSCa4CkKMp1uStXZDdVFedxoSc9PQW1avJpTJHdNDTUo9H7ExsdNf5ENmFdmfa2VpwyREdH
      o1FPfOPjctg4c6YIRa1jwYL5aEeU/eezz5DXHs3Wxz9Nt7mXyOgYDDrtuO20tTQxaHcRH5+A
      VnP1brR6ezqpqG4gMSWViNBr+/hnMu5bM5+HfvAG61fPvKx6fZZu2jp6iImLx9+on7qCQCC4
      Znzo7wCGkVRqZmbOmrrgiPKJSSlX2JeKqJjYSyqr0RlYvHTZhL8rioIpMBhT4OQrk6Ni4i5L
      xkslMCScxYvDpy54Ffntj/6H1CVruWlZNiq3gz+/+CuO1br405Lky24rICiUgKDQayClQCC4
      XK5bAPgoEhgSSYQ78HqL8aGTPieL3//2Z3zz0TpkSUX67PnsPbibIIMYPgLBR5nr9ghIIBAI
      BNcXkd4tEAgE0xQRAAQCgWCaIgKAQCAQTFNEABAIBIJpiggAAoFAME0RAUAgEAimKSIACAQC
      wTRFBACBQCCYpogAIBAIBNMUEQAEAoFgmjJpAHBa+8jNzeV0XgE2hwsUJ1U19YBC7v49FJw7
      T11lKe/tPoh8BZ3b7Y4Jf+torscy6BxxRKb4bDG9PR20d1uuoLfJaawqodfuu0tAybkS5Gus
      s93h2TfAZe2lvunqbO14+ngux08XAOB2OXG5PZKWlhZfUv2ScyVT6uYc6KayvvmDiElXayPN
      Hb1UV3k2oC87c5r3Dx2n39zB9u3b6TIPXnabI/W9VJwOu2evCa+vry7Den1UGR6j3r+HxvCF
      6rIx58y1ZOyccGlMNSac1l5yc3O9/5qaGmju6P0gol4yI+cYRXaxZ9dOyqtqKS08zcGjp66o
      zdH+mgz11q1bt07YkLmVerOLlJhg3t65nwXzZtPfP4Bs7+VkwXnmZKaSc/QYC7MXEuCnp7Ss
      HINfAJLbjs3hoqW1DX+D1nvcZRugu6ebxuZWQoNM/PPNtzD5GfELCEKjVtHR1kx9YxOBwSE4
      7YNojSYG+iwM9llwo+J8cQmJM+JwSloc1n46WpowD9gJDgygubGOlg4zYaHBmLvaqalvJCAo
      GI1ahd06QGVVFYpKi79RS3tbO3V1dRj8AtDrNNRWV1F8toColNn461QosouqygoKCkqYPW8W
      A9dIZ7d9kLfeeAs/fxNBQYEM2l3ITjvt7S1YBmx0d7RgdSoEmPyoq67APGAjOCiQjtYmGpva
      CA4JQaWScDmslJaWo9EbcdoGOHLiJAsXLiLQ5M/RAzu4YJYJMvlRcq4Ql9OFpDXgZ9D7tAn4
      6j03i4a6Gjq6LYQG+dNt7sfPaKC7uxuj0Yjd0s7Z6iasfWYCgkNxDPZSVV2DVm9koL8Po58f
      bvsgA3Y3vT3t1De2EBYe5v2M94WGWipKi1GbotFrZXRqib0HclmcPZ+iE4cJTsgiPiaCpvpq
      j4yB/vSY++hsa8UUFEjV+TJsLgj0N/j4M+/Ibq++Br3OxzY6NbR3dFJXV0dAcKjnU9+Km52v
      vorL6I+fwQ+73Y5Rq6K1rZ2mlnYUl5Xmtm7CQoOHxudFPfotZlrbWuk09xEaHISlp5PK6jpC
      w8Los5iR3U6amls4diKPxYsWYjJqfWTpG7TR0tKKpMhjfO5v1FFTXYll0E5IUCBdne001NWB
      xoCfUU/LhXo6zQOEBJqoGLaFyd/n/L0obyjd3T34+Rnp6e5Gr9NQVloKGgMGjTTGJrLb5e3b
      T6u6OEZDQhjsM/PWtm2YAoLoaallAD2d7R2Eh4fSO0J/tUoa+uR7BVanTKDJSN3weAoNoaer
      g4b6OhRJTUNtLTq/AHRqvHL5Gw0jdBh/TnA6XXR0tHOhqYWwsDAk2U15WSkuNPjpVF77lhTk
      esdEX0+Hz7kDoNJoCQ+PpKS0nJUrV9DbfoHmLhvm7g5Cw8OxDfRSfr6SgKBQBvp6kd1Oui39
      uB2DPvqOtFtIUCA9PT1YujtRG0w01VVNfK4NzTH97bWcbx0gLSGaYyfyWDB/vs9ccilzTICf
      nrdH+Esl4TN2ZIcNlU6PbaAXt6Sd+hGQzmAgdkYKKaF6+lwKFSUlyIoblVqHy+1CpQKX082u
      7dsJDA5m53vv0dJQyR/+/DesDt/jVcWnKapopLPxPJUXelBkGdeI/XY7OjoxaOD9/Qdob6mj
      o9fOjrde42hekXcnk8Hudi60dJC7bxc9VhdHcnJpb6om71wNfa1V5JfXs2Pnexh0arq6zQB0
      dXSgN/qxZ+duZMXGG2/swOhn5NChQxzbv4t2iw1pxDfxdu/Yhs0toSgySFwznWVFQZZlXC4Z
      3AOUVDZy6mgOHRYbB97fwYADjhw+RPW5k9R0DFJVdJq6ljbe23UAjeTCbLECsPPddzCaTOzc
      th2nrKBWqXA6HEMDTUZ2uZAVaLnQiEZv5MCBw75ttpnH6K24rJj7bJibKyk438iePbtBcXPg
      wCGvnRrqGzBoZA4dKaCjowM/PyO7du+iofwMNc09FJw4Qnt7K/ty89C4+zh4xHNXUpZ/lNK6
      Du8JWFp+HgUFlUqLw+lEkd2oVBLVZ0fI2NrGi799jtqWLk4f3s+AW8vpnL2YBwd8/DlS39G2
      GehpZce+HIxamYO5Fze0cSsybpfL6+vWhkpOFVXSXHOWvLJGzucfp62zfYweVcWnqW3r5cL5
      Aoora9m5cy+Bfhp27z3EqaO5vPvebmTFo5fd4Rwjy3Mv/IHu3sFxfW7rtWCTVVQWHqeutY9t
      b7+BxmDkwMHD1Jflk1/awMBAP6dyRtjCenG3Ontf5wh5Czlw8CAKCocOHWL/nvfQ+geyd+d7
      49pkZN+1rX0Xx6hnQCHLMu4hAzc2NtPRUEZVQ5uP/gAlebk0W+x0d3UijxxP5XXs3vkeKq2B
      119/Fa3BQM4ouVzK1HOC3dLOweOFaBQbu/fnsG/3DmSNkaP7dtLacsFrX++YkO1jzh0ASVLh
      7++HXqvH398flQQNDfXI/R3kl1SyY/tOgoMD2blzj9evitsxRt/RPnv95ZcoKq+ltvjUpOfa
      8Lhzu9xotWpcLheSSoVbvvw5pqKxx9df4DN2qopP0W11U19VTEuP7dLfAfTbXOjVnv2dwiMi
      iIiIJjk5mYjICDLSUzD39VJXU0NAUAgScMsdG8hMS6RnxHGAhYsXMSM+DgU1ERGRZGRkYNCq
      QXZQfLaEytoGHA6bt9+QyHg2r7+TAD/fzUMMwaHMn51JZEgI7R2t2B0O+l0SWklh/pxMis4U
      Yen3OLmxvpry0nJ6+wZQgJSZWaSkpGLQg8WhsCx7LrHRkd62ZcnI3KwMIsM9362/Vjob/QOI
      ioggIyPN6whJ7ceCebOIiktiTlY6wSH+tDa34hi0IOkNoKjITIvnTFExg0O3empTCKnJyaTH
      h6AYg4mIDCdpRjwAEZGRzEhJIzTIRFxSMmmpKQQYDb5tup1j9LZ0d1NeVkZ7p5lBu52UqCBO
      nDhGfPrF7TEzZs8hLT0Vyemk+vx5yssrGLBambtoCSVn8mk2DxKEFYfTRmt3P0Emz+ej65t7
      uXXNUhLiYrxt+ZuCiIiIYGZqCpGRkSSnzaS3p2uEjA5mL1zGmpsW0dZtpq+rBUNAIE6H28ef
      I/UdbRuLTSZj9hxSZ6aicrnIPbCHotJqoiIiSEvPwOR3cVe6rFlziI2JImv2XOLjwulqaxuj
      B0DW7FksWjifjpZ6ugcc1F1oJSgoEEml4b77HyAlOZmIiAjSU5PGyLJ0zS0smpc5rs+7u1oo
      Ky3D3NeP1Wrz+C4lhUCjgaaGFlatXcmcrAxaunxtMUxfZ4ePvKnRwZw9d47g6BTM5h5aGuoI
      DDLhVvCxCeDTtyJpvGNULYEpKJSIiEhmpiR6xvaiRSQmxGPv7/bRHyAlaz797fVUVtb5jifr
      IKERscxMSyU5dSZpqano9YyRa6o5weSnJ3nmTDJmz0dy9uNWNMzOSGX+3HTaO3q99vWOieCw
      MefORMydn01aSiIOl53eni5qauoIDbvo14hAzRh9x/gsLYs7162hp6N90nNteI6JiIggKjbe
      M8eER5KaNMNnLrmUOUarM/j4C/AZO6OZNABIEpzNO8Hbb72JKSoBvWpsFWnoynxGdARWh5Ph
      r0trNbpxj3vPMEkiUCOza88eegacKLKLAasdleJGHiokSRKaoXa84kogobrYkCQxIzGVgd4u
      nE4XOq2a5uYOgoP86ejoBqDHbMFg0OFwDj0/HBJFJUlEBBjZ9t4e8opKvI8njCo7e/buo7ii
      dlwzXS2dAdwuK3veP4hTAWnErmjDskhIpGXNorO9A5dLRi1baesZwE8n0W3pA8AfO/sOHKS8
      uZ9Qw8UtJAGCg0M5cWgPNQ2tIwTBp83hHdJG6m0b7EdSa3E6HUjA4hUr2bf/CNlzLm7KI434
      395eCzqtGpdbRmMIROlvIigikZDYGSg2K06nE43WY5+0pHDeems7R07kezQctRvcsO4+MmrU
      aNSe+rPSEmnv7kV2yajUko8/ffX1tU2IUeWVWZIkVt96J/NnpxMSEcie93bT0mGe0Neh4+gB
      cHjf+7y1+zBz5i0m3KjgdjlRqTUgacfsPDdaFp1WM6qviz7v67WgNRix24YnqovnRPrc2Wx/
      4w127zvsYwtkKwdyTgCMsfu8xYt55613WJw9l6TERCwDNmTF0+dImwBj+h4eo46hi0qruZ0D
      uSdGioXaGOqrP9De3IzeL4BeSw8Do8bTeDr7yAWXNCcUF+bx5qv/JDopi/AQf3bu2cfxvHJm
      xAZ77Ts8Jqqrq3zOnZycHF/7MxZJUhMRGYHT5UaRVF6/jqfvaLtptZ7dAqc61zyofGQYtsuV
      zDGj/TVy7PiZTOQe3M/xU4VISFd3PwCHw45Gq0M1ar/GiY4D2O129HrP1b3L6UCRVGg1l7/R
      iOx241YUtBoNsuzG4XRj0A8NFEXGandiNIy/BaHNZkOn1/vIZ7VaMRiNU+63+0F1RlGwO53o
      dbox5UbidrlQkNBo1LhdLtyKgk57cTvKwYEBDH5+4/bndDhQa7VjfhvZ5nh62202tDo9KpVE
      fVUZ56pb2XjnLePKJ8tunE6XVy/Z7QZJhUolocgyTpcb3YjtM+12GxqtDrVq8pvQ8WQEcDmd
      SCo16nG29xyt72S2GcZht6PV6SfdanS0HmeOvk/UvJuJ8teiUqlQFAXHFL68FFmGsVmt6A3G
      cWWS3W4UQK1We23RUHEWgmeQHBM6rrwulwvN0LnldDhQa7Tex3CT9j1qjCqyjNPt9hl/wLj6
      Oxx21GotarXKZzxNxGi5JpsTBjvqyWvoY+WCLNRq9ZDcg2h1hjHjYnhMKEPzxGjZJ0fBbnei
      0+l8fDGevhP5bKpzbTIue46ZYk6x2azo9R4ZxYYwgkuitbmJ8OhYNFPs3TydGOjrRecXgFYt
      bHI9cDvtDDpkAvyN11uUjywiAAgEAsE0RSwEEwgEgmmKCAACgUAwTREBQCAQCKYpIgAIBALB
      NEUEAIFAIJimiAAgEAgE0xQRAAQCgWCaIgKAQCAQTFOuSwCQ3S6crmv7HXGb1er9IuS1xuWw
      e7+OeLWw2y/9m97XGuc4+tltNqbDCsLLGavXelxbrVYU2Y3Vdnljw26zTV3oBsLpsOFyy1it
      1qkLT8EHPY9ulPPwWvlw0gBQfjaf1155mVdef4ei0soP3FlZsWdDksbKc1Q1dHuPlxQVYp9i
      D4+u1gYaWrsuua+CwwexylB4pnDScsWlpZ7/kB0Uni255PZ92jh9mE7rBz/xZWc/JZUNABw+
      fOCK2hjXTh9AN4CSU2P1O3wgZ9JNYy7HrgNdrdS3dABQWDi5v8bjcsfGeP16UZzs27OHl158
      gT179lB46qTPWJ2M0eN6ImpKi7Fdxp41wzY5mJOLbOvm8OnSS68MHMoZPZZkyoqvbDwMn8OX
      z8U+GypL6OqbeDOoqtI8GjqtHMzJHff3cf02bpcDHDx4+rIl9frnCutfC8b68NIYOaeMx6Rf
      XcuctwijTsWgPp6s5AhOHjlEW08fQWHR3LxiCcg28gqqWbw4i7xTBeg1bupbOomMnUF0gJrC
      8lq0On/W37EWS2cre/fto7ahhfTkcI7l7KMkT83ytbejOF0oiszOd94GjY5Fy28hOtyfnJyj
      rFmzimNHjzI7NQG7w8nJ3AN09lpJTMnC0d/DgiWLKM07TVr2Ig7v3I7V6Wb+stXez+m5HS56
      u9o4eqqAlpZWPvbxBziw7yAul4MVN61g7779NNbVsWLtOtw2Kz1tjezPPYUiqdi0ZQu7334F
      jTEQY1Ak61Yv89rG3m9hx+596ANCiDdJ7N+1E43byu0b7+fs0T302lxEJ2WRFuV3sb3Nm9i/
      812vjuX5OQw4nKTMyiYrNYGyogL2na7EOngTtt4etu/Ygd0lcf+Wu3hvx3ZcLoXsFWtJiAqh
      sbqMU0UVqNRatmy6lQN7j9Bt6eXW1YuxO53UVpzjTGkt/f02Pv2ZB3DbrFQV51NUeQG308pt
      6+8j1KSj7nwppTV1uBQdd66cy2s7DhLoryFl9jJiTTKHjhfQ3VrPloW3AlBfVUpBSRX1tS3c
      cpuV7dt3oUgKa2/fQOHx/VidCmkzZ46x6+i+z508QN+AjRkZ8zFXF1LZYeWmm1bgdMuguNnx
      7jZcskzWwmV01JXQ0+/E5oYH7tmIBOQdzaHd0ktwxAxmJwRjdzjJzztJV2sryXPmcSrnKIFB
      fsSlzSU53HDRB5vu4sjBo3Rbegnzh7pOT7+z0pM9jpW03Hbnnby/dxd33H4n9eWF7BsxVpsq
      i+iyDBAek8LShVnILjs7tu8AtZ6smXE+49rSUkV9Uwc6/2DmJkdQUt2MS4GGcwVE1DYyPzOD
      /DNnUGv92Lz5LlSKi2PH8lg4O4n3cs9x710rOHWmGpXkiRbDX+sc/vKQ3dJGZYedWQlBFFS0
      Y+uoptcmY3VJ3Lf5Lg7v2cmArGLA4fbx85y0GPbu20dXv40Z4Uaf8xTg8P7dXt+4eru951jE
      jATvObxq1SL27DkAKNx29yZOHtyNS1LT29tHQICJiJhkogPUE/Spx+mWKTxxhMZOMxmzFtJa
      e87bpxbJ86EySaK9oZJ2h4HZyREcPXmOVSuWkH/ymHe89LXX+8xJsnOQt9/dhU6jZu1dt1FR
      egans4vI2DTS4wO942DVkvn0uHRoB1rpcvuTGKLCpo0gOSaAA3v3ElHbyLIlC3zqxwRJk9rK
      0n6B1atXc/rEMWZmZnDgYA6KLLFhy2YKjx2gqaWbuQsXUlVVidXm4t57N3Mqdz9dvTYUtZGV
      C9M4fPwMklrD5s3rUQGlhSeoutBJU0cnbofv+Zaz+03UxkACw2LJTk/gwPHTOKw27t58D2dP
      HqSppZvomDDyS+qwDt6E5Bpk0aLFnMrLZ/7MeHLzSy7nEZBMe1cvmzdtwtLZNnT156azywwo
      mLu66Oxoxz8gmIzUFE6dLiAtOYnuxhoGZQgKj2ZWRgbr19+OVoKb1qzj7rVLqG1qoberE7fi
      oqPTQlxiGhFhJkBioKeDAesAHd19OK0D9A9Y6WjvJDgskuTkeLo6u1FgqL5EVHQkfkYN585V
      eKU2d3USGBbF/MxkYpIyMBmNRIYFo1WcVLWZyczM5O716wny02Du6uJEXhGb7gTI9SEAACAA
      SURBVL2P1Qtmcq68Br/AUDZu3ISjz3cbyqLTR1lx23o23umZGNfdtYElc9NpbqzFogSzafM9
      tNaWj2qv0qtjuL+TyhYLSSmpFBV6NhjJnJVF5pxsFs+fhSEghE0bNxKg09B1oZpep4bU1BkU
      nM7z9F98nvvu28LMWBM1LT2UV9Rw7/33gs1jp6JzNdx7z2YC/XQoQ/7pt3Sz6vYNLJ2bTluH
      R5+Q8HB0ag11VTU4HTaSsuayZdNdXKhu4NipfDZvuYcl82d79c4vOs89WzYzOyOF6vIiNIER
      zIgO4/S5cjo7OoiIjic5JW2MXUf3HR0VjdZgpLzsLLOysshe6pmEu7q76WmqJjg+g3vuu5ey
      c0UMOmQ2bdpIoE7nveuIjI5Co9ZSef68d2zUV50nY/EqZs6IJCwyiU1b7qP+/FgfDNtq/qyL
      /U7GxbHaxPnyKhITk6gsKwKguuwMSXNWsHnzRnSjxnVERBQajYbqmgpsg/2YbQp33HozszIz
      ue2uuwkwwKBDZt78uZ4TUdLQ1t5CWXEZNvsANRVlGEPC6eoe/67C7bDR09eP4nbQZe5n0AXr
      168nPlChvr4OmyGSDXevJ9hP4+PnxPRMZmVksmr5ojHnKeDjm5HnmCns4jlclneSm+/axKY7
      VnMy7xxo/Ni4cRPB4eFs2rQZS1fjhH0O9FuwOlw0tHSweeNGMlLifPocSUR8IsX5J6kqLiQw
      Mg5gxHhJHDMnue2DmPsHSZs1jwCdxMxZC9i0aTM9nfU+46Cxe5CK4mJqmrvoaqmluKSCqIhg
      kLRe/0SHB/rUn8pWKkc/reYBmprbOZ9/nIi4ZML8JcqrGikuKefue+4lITYSo15Hb3sdXf39
      tHW52LhxA05rL8dOnCI5LRWVvZuGTiugcL6umc2bNpKaEDXmfDMGhbFx4ybMnU0YTCaCTUac
      NgsNTd3e/m5aPM87p3R1e+6aurq7cTts1LSYL+8dgN1uR0HBZrV6r0Lcbhd26yBOGbKXr2Hh
      7JnsfG83KrWawJAwVty8iuEPr9odDu/3qyVJQpJGdC/Dlo89gMbazrHCMgAWL8zklb+/QuaC
      xd5iq9bdRnpSNLt27UGRXbhlhf7BAfpaamgZVLNyxVJ8PxwM9gEzOafLuPPWFdSUFqIOimdp
      9hxPty4HLllh+JN4OrVC/4ANS28vWp3B+5BMkiRcDjt9A57nkjqdHktvP46hnbckCVQqCUml
      xT7YhyK7sDrcvu1p9Bd1LKpEq5KIiopm2eLs4U5wOOweWYb6VUkqtDodklpLdMwMshfOGrKX
      G5vDRa+lD4NOQ1r6bJ+vUsqynfbOLjqHdkUbZvjKapiDhw6x+tZ1xEWFjSzg0UeScLrc2EY+
      f5TduN0KVpsVnVaLVqtjRloms1PiuHPjPcQEadiz/8QYu47sW3H2UljewtrVKzHoNEiShM3u
      YLiwVqenr68Xl8OG262MsMWw3Aon8gpZt24tphGbXJjCIkiMDvP+7bT140Ya5VO911Yj++3p
      7pnwncbFsSqhqDVERkVx002eu0GDXk9ffy9OhwNF8R3Xh3JPsG7drYQPbU6TlTl7qD0Zu8OF
      ITCM++9ZT/Hx/bT3e/aHiA4yUtLax8pZCWw7dI6slJixAo3A7XIzODAwZBWPBp3d/fgbtTgc
      DtwuBw6nPMbPdocTFGXMeTraNyPPMU89zzms02np7e2nr9eCTqdjxK4Cnv9XSRP2OYzd4URW
      FOwDnT59+thepSMu1EhOUR2zU2O9/vD4beycJGn9+dgD99Nee46y2s6hsS6hUvmOA51fMCp3
      H4pKi0GlwuIAP63Kxz/DfQ3Xn8pWi5Ys4v23/kFE8iy0Oh06ox+Z8xYRFxVMYloq/notOfsP
      kn3TatIS40BS0dffQ1dnBwNWBzq1Cj9TINlLVhDipwEk3C73kH72MeebgoLscmC1Ozlz4jDx
      mdnMyUgFCW9/I+cUl9ONoigMDnj22s6alTn5nsDDDtX7mfA36vHXqzh67BRZ87OJCA0CSUtr
      w3nqLrSSkJTCQHcrJRXVpGfNIXtuJvl5BfRZXSQnzUAlgV6jcOREAclpqfj5B+Bv1KLWGQgM
      MBEUEsSpY0foGXSzeOECDDoN/kFhmHssLF4wG0kCndFEY3UZVXVNzJmfzYzoYHKPHEPnF0zG
      nDk0VJXR2mEhOSmR0LAQgkNDUUsq3A4r3WYLVZWVZMzJpqo4H8ugi6SkJJKiQ8jJOUJEfDJG
      nZY5c2ZzLPcwfW49yxfNQUIiNDQUJInq0kLs2iAiggOIikuguOAEtRc6SE1KwDS0n6rBFIZJ
      NcipgrMsWraCWRlpF9vLzuLE0SEdFy8lWC9Ter4S/+BwIkKDUWmNdNSX02GxERsd6ekXiagZ
      yTjNrVTWNhAeFUtwoImY6HAO5+SiD4pmTvoMQE1oaBAM2SkrPYXy8+dp7zKTvXAekqQmJDTE
      K6fRPwA/gxaDVuLk6UKCwiJJSoxHozMQZPIHSc2sjGQOH87BrdaRlpqKVi0RFuRHztFj6P1D
      yV6ymLb6ShouNBObkMj5swU0dZjJXpxNQkSgj119+g4Ix2G+QM2FVhITk5iRnEz5uUJsbhWR
      EaFExydjaavlbHEFK9eswc+g9/ogJDQECYnB/h5KymtImJFIdHQEOqMJk5/BU05xsmvnXros
      Ztbcspa05KQRPp2NNGQrY0Cgt9++nk7Co6JG7KshERLi+a6+wW94rBpJjg6j6Fwpap0/sdER
      BIVF0Vx1jtLKWpJTU/Dzuziug/UShWdLiYxNID422ttOcFgIR3Ny0Bn8KDpzBn1gBLPSU1BJ
      EBIchEbvT2ZGGgoqkhNikSSJ0JCQof8PRaXRERpkQmPwo6K4iNauPlJSUmipLaOqtp74mXNI
      SUrG0lpHaWUNiUnJzIiJGOHnGfSZ26lu6mDl0mzf81Stw9xa6/VNSkKU9xxLTknCT+s5h5ff
      fDNnTx2jpbOPNauWo1ZJhIaFemUFidjIsHH7nBEfi39AMFEhRo4eO4EhKAZpsN3bZ0R4GP4B
      wRh1akJDQggL0NFkkZk9MwnAx2/JcWE+c5LLYefI0SO4VQYWzMtCo9YMnRcSc2bP8Tm3jVo1
      kfHJzIgJxT8okoiwYACvfwJCIgnw9/PWnzd71qS2iombQZ/ZwuKli4iNS6CyuIjmtk4Sk5Ix
      6LSEhoYSZNJz8uRJNH5BJCWlEhcZSE1DExZLH3ffdTtFhQV0mvtITk5Gq1bhp5M4eiKPkKgY
      5s1fSKv3fEui4Pghmtu6WHrTGuJio8k/fRKXrCEpOQl/g47Q0FCfOWVGdAjHTuQTGBZJckIc
      ap1BfA76cuhobyMiMup6i3FJFBee5EJrN/4hEaxevnjqCv9KyDbyz1SzKHv21GX/hSgoyCc7
      e9H1FuPqojjZ/s52Vt++gWDT+Bs6fZTJ2b+LvkEXabPnk5Ey47LqXg1/iwAgEAgE05Trsg7A
      7XJid7ouKVffYbdf93zzS8lH/qByXot840uR2zY4QI+596r3fTW4nJx3RXZjtzsvuw+n3Upn
      V8+Y41fVH4p8RbIJBNeaKw4AI/NLLyWPfyQ9jVWUVjV6c/Un49D+w5Pmm18qU+XDTsaRgwen
      LHMlcl6NvP/JOJiTO7neios3/vka5t7+q973ZAyvEZgqf/9yct6tXY2cuoK1Km+++SbdFs+L
      8tYL1XT0eib+q+mPwc4rk00guNZMug7A2tfNjt0jcn0P7UaWNEiGQGYE4c1ZNzhdKMDh93d4
      899DVP0+ed81RSe8edvp4UN5QZKEzdLO2doOblo0i9zco6xevQpLZzP7ck4QGhGNJNvYsW07
      1kE79z14P8f37Rw3x37D+jvYtXO3J/93/WbyD+6eMMfepPRxvrENrTGY9betgSlklySJyuIC
      DJGpRBocFNV0sXRBps+aBF857+X9bRfz2Lua61ixcgX/ePkVPv6ZT3PqxAluumn5ZeX9553O
      Z7C/i+CoFLobK7y6uSzN3rUXGpdjxLqIJUiS5NOHu7fVK++crBQqSs/Q2Wejx9JLa04pTS3d
      rLx5LUdyc7w+P7zrDdR6E32DDkx6NUlzljJvZgL9Xe0+ecf+ejX5J3Jp6epj0Grlnnvv5eB7
      F9dldLfU0NXail9IBHn5+TS3dbMsawZ2h5Oq0gJKKi+QODMD10A/i5csIu/UaRbOSUICnxz2
      zXetYt/Qmod7HrgPlXOA7dt3IeEgLHUBJUWnvbn3oTo3qQuW4+xqpMOhJysljvIzJ72+n5ca
      Q3tnJ52dPaSnJHMs5yBWbQQrli/jQm0lO3a48AuOZEFajG9+9gT5+pKj27tGIC3G31vn9ps8
      7yKqSgqQAuNITfhovEcS/Osz6R3A2dOjcn3VfqzfsBF3r4W0ETnrvV2duGw9Pvnvo/O+R+Zt
      j8QQFEF9xTk6L1Th1gYCcPREPus33cMtq1eASs+GTZtIjwug29I5YY79maJib/6vv2yZNMe+
      vKGdLZs2Y3KasThkZPvksgMkpSRz8vhxCvLziU9IAPBZkzBSztqqCp88dmd/D/V1tdjdDqrq
      6umy2MbINFXef09rHaEJGcxJCfPRbeTaC991EYzpw0deID0ri8zMeWTPzfTmDTeU5vv43C8o
      nE2bNxERFMTmzXfSVF3v8duovGOA7h4rd29Yz4L0eCprO3zWZQzn6K9auYKMzEzuuGWVN3//
      7PlGtmzZzIJZGXR2etoyd3V6x8jIfHI3bm8ev04FJQUnmLfqNu64eSWAT+59SkoCx47lkV9Y
      REJ8NICP7wPiUsnMymDFUk8abtasLFbcfBvJCdHEJ81k48ZN2HrNY/Ozx83XD/VZIzC6Tk3p
      Gc7WdYnJX3BDMWkAGJPrqwCKzIBtEPXInHUAlcYn/x1G5pyPn7ftQWLezDj+9m4OS4Zy8w1a
      FX0Dg54ce0k1lGOvAmniHHu9KdSb/1ve0DNpjr3bYcMlK/RZ7WgkaQrZPWj9QjAqA9R12YgN
      8wd81ySMlHN0Hvuc2Rm8+fZONt+zhffffpOZs2aPkWnKvH9NIFlpiaDS+Og2cu3F6Jzt0X34
      yDuK4bzhMT6XhtZtDLU1bJPRecfDKAp0dnQi97f4rMsYmaPvM24A3HacbtmTt+52ochuBqwX
      1x6MzicfueZBrVbjsDu8axVG5t4HRyVh7a7Dqugw6TyrQ8b4fuRIlCTPu5xR/hibnz1evn6s
      zxqB0XVCI6PpM3dhc7rp6Rn7zkEguB5Mug4gKjaOwhG5vvkncqm/0MzcxUuJCI/y5pfGxEQR
      HBGNxmHx5r8Hmfx8cs5x9Y/J2/b3NxIcGkpkZBiVNU0sWeCZGOPjYzl59Ajt5j5mxMUSEhaK
      BASERqN39Y6bY794ThpHh/N/Fy7ApHFNmGM/LyOJ3CPHiE7JJDEmAkmtRzWJ7H5GPSGhoegU
      K25DJEnxkQCUnSv0rkkICTR55QyNTWawo86bxx4eEYXbrZCZno4sy8ydk4lK4rLy/gFCwkJR
      qfUYJIdXt8GuZu/ai9SEcJ+cbY1KIjwy1tuHpaPporxDi5O86weG1juM9rlapRrKwVcREhoK
      qAgNDSIgKMg379ioo/p8CeWVlfhHJJA9fxa1lRfXZYSFBg/pB4q1l4LSGtJSZqAzmkhNiCIn
      9yiyWk+wQSH/bCmRsfHExcag0uiIDQvwWasgeWWGsMgYzpw6Tpu5j9SUNIL1jMi9j8Ha3UJ4
      2gKiQgIACA/y9/E9QGioJ7AEBgVTePIoKn0AoUEBhIaGoiAxf96cMfnZY/P14wg1GbxrBJYu
      WnCxTkoywWERLMxMorGtm56uDqKixJ2A4PpzWWmg+XkFLBq+or6K7N+9nczFq4kLD77qbV8t
      nFYL2/fksGHjBvQa8RXt8SjMK2De4uwxK7GvF5bONnJPFbF+/R3iu+cCwTiIdQACgUAwTREX
      RgKBQDBNEQFAIBAIpikiAAgEAsE0RQQAgUAgmKaIACAQCATTFBEABAKBYJoiAoBAIBBMU0QA
      EAgEgmmKCAACgUAwTREBQCAQCKYpIgAIBALBNEUEAIFAIJimiAAgEAgE05QpA4C5u52co6eu
      +8bsl8K+HW9gGdrQ5aPMW2+9Nunv+3e8gdl+dfTct+MNLFeprStD4WxR8XXsXyCYvkwZAHa+
      9hee/c2vKKnvnKrodedc/gkGHFdjC/nxKT1zlD1HC69Z+8McP3500t/P5p9g0Hl19DyXf4KB
      q9TWlaFw8tTJ69i/QDB9mXRTeJA5caaGp7787+zdu585D30ce7+Fxs5e0pI8++I6Bntp6uwl
      eUY8PZ2tHDp8BGNQOOtuuRmtWqK+poKYxJm01lcyIGvISEmk+EwhTa3thEUnsCR7rndHwcaa
      CkrOVxMSEU1sTAQJcfG47IPs33+AAafC2lvWERro5yOh22nnxPHjWJ0y7d0W7/GJZNEZjJw8
      eZrw2GRWLVsIgN06QH5eHpZ+KzMz55A2tGduVVUFaWlpnC3IR2cKIj+/gAsDRkJ1LmLik/DX
      uJC1/oQFBwIKFecrSM/IoKejBVnrj9pl5Xx9C8sWLRhXnpH09nSQV1CEWmf0bksJUFtZyqmC
      sySnz2XpwtljPNTd3sqZc8W4ZFi4aCkRoSbOnS1j7ryLZUvLypiVlTWhl9ubGzhVUkRUQho3
      LZ6Hvc9CfYeF9JQZHhs7BqlqbCcjNclbxz7Yx/GTp0GtZ+mypRi0qnH9Otr/0UHGMba59dbV
      U/ptZBtZaSkT6iIQCC6dSe8AWiqLCE6ez7xlqyg+eQQZ0OrU/OD7P2H4mvHgrrc5UVTDoLmN
      J578JpHxSQxcOM8Pfv4cAG+9/CJvvvZ3fvLz5+k293H+3GmOFpYQGBTEgXde5i9vvQ9A7q43
      +eHPn0Nn9KP6zBH+8Oq7gMzWb36dfkVPVKCeJ77+BE754sMoxW3nsUc+T0VDBxpJpq29C2BS
      WX75wj+IjI4h992/8dJr7wGwf+9OGtp7CDAZ+dn/PMXZqmYAXnzhWX619Wne3nMIs7mH9rZO
      ejo7uHDhAn39Vs6dPMSxotIhaWR+/9vnATh38hCvvfEqjz76FPUXWiaUZ5iu5mq+/JXH6Le5
      GTR30md1AlCef5ifP/dnMjKy2P/6H3l3/9gr5Tfe/CdWF0guG1/7ylcYdMGrf/oNJfXtAPS1
      1fLsS/+YdBC8/tpbREbHsOe1P/C3d/ej0an47tPPYB/aWf7k/vc4cPyMt7xzoJsvfvErdFgG
      sXQ2cupM6YR+He3/0bYBeP75307pt5FtCASCq8OkdwD79+5j3e33otL4MTvOQEltO3OTI1mU
      HEhhRTOL0mPZf+gkT/3vpzn23t9Y//EvsHLZYli2mNwv/Bf2oShxtsrMr5/9BcMXvckz51BX
      38hdd9/Oy3uL4b47eGPb+/z0V7/DpFMzkBHDT1/ZS09dCUrkXO7fcDsAVefyKCi5wLK5nruP
      s8cPkLx8E5/7zAMAFObuBuDY/l0TyvLVJx4j1qRh+ZIFfOmrT8KD61m/+UHM3R00tbRz85ol
      FJ+vYl5aLM3nS1n8xa18df0qAFS2DiosAdy76WYAOs5P/Khm/8F8Xnrhd4SY9Ox788/jyqMf
      Cr/vvv4KDz/+XVbNTwbgQM4Bz/E33+GJb32fxDB/Zs/8bx771q/Ysm6ZTz+f/+JXaG66QLe5
      l7Q4fxo7rXzqE/fz6uvv8t3HH2b/+7u4Y8OWSQfBI1/7OrEmDcuy5/DlR7/NZ7as465VWezJ
      KWTzLdns2neIzz/1E2/5I/t2ctsDn+Fjm9f5tDOeX0f7P2dHqY9tRjKZ30aPIYFA8MGZJADI
      HDhwmMDqdna+At2tjbDvIHMf/jgbNm/gb7v2kGpaiSosjWCjBnO3hX0HXuXssT0AuHVGhh9k
      fOlrX/SeuKcO7ODP7+xn5fJl6OQB5KErep3JgEnnu5usudtCRdFJtm71vH/o77MwX3PxDsBi
      NpOamjpG8slkYeh1tkpjxODn6e9Pv/4hVd0wf3Y6Tc0dRId7ykSnz+HBocn/cvm3hz/nneAm
      l2dYjxnj6GHmxV/9FK0KQCYiLtrnd9ll4xtf+wrxGdkkxEbQY/bYc9bSW2l/4XP0WP+DQ8fO
      8MNff3EKaT36qvUmDDrP3cc9D3yCR7//HLcviKJXFUpCmL+3dHtbJwkLlvu0MJFfwdf/o23j
      q++ljSGBQHB1mDAAtFScIWbR3fzgvx8BQHYO8J9ffAL54Y+TPGc5bc/+nV27erlz00YAYuNi
      maufwSP/di8A/f39GIeucCXp4mSwb88envnh/xFj0mBuqeBY1Q6PILKDvOIaFs9JoaqqEoCI
      uFjCIxP59tatqAC3y47ddfGpVWBwECeLK9l481IA3G7XlLIw9MahqfIMkiYCkCk838Svf+t5
      DLF/h5MWZazcw3UddrvPkeEdld1OB84Rs/rIupPL49GjrKySmCWZoMi4ZXmoXjRL7vscy2cn
      AtDX3+/Td099GQEpi/jal78AQHXx8aHO1dy7fh0v/epXBKUsxs8TQXC73UiShEo1+smfxyb1
      pafQmjx3IQGRSaT4O/nNCy+z7m7fO4j0jDT25p9kzdKZHhswsV/Hs+NYu05tp4nqCASCK2fC
      AHBg/z7W3b7Z+7dK68+sOCOltZ3MSQ7n5uUZvLz7LG997qsALL99IzuefIKnqs5iVLnoGtTy
      8//99ph2l628if958kmS44PpsZhRGeMAeOyxb/CTn/+a19UaoiJCQBWEKSqFNfPC+K8vfZ3U
      GVHU1tXzxNM/ITlWC8D8m9bxj1e/wrf/pw7JMcCZgnI+NYUsP/7O08SGmaioqedb3/0RoCIx
      zMR3vv9jJEcv7R1trNrwb+PaZNasBfz6hSfpqiti/pK1ZKSm8/z3n6UyL4cLF5oZcI9vzonk
      Gb7fuefBz/Lo409RsGgJbU0XaDM7APjkfz7Mk089w8GsufT1tBOTms2XH/6kt93g+DSazvwf
      v/iljfYLtTS2tLBl6Cp53cZ7+OX69Xzv+de95b/z6MPc/u/f4ObsTO8xjU7Hz7/3HcJMOqrr
      m/j2D37s/e2Tn36Az379x3zp8W/46LNw9d3s2f8Mjz/1DHrZxqoNn5jQr5fDpY4hgUBwlVCu
      EJfToQwMDo453t/Xq/T1D0xa19zdpXT1WHyODQxerFNwYJvyq9+/7v3bbh1UeswWRZbHaUx2
      K60tzUr/oHVKWX6x9TGloWdQ6TGbFbdPY7LS3toybhujcTrsSmdXt7d+f69Zae/oUsYTbSp5
      RuJy2pWmpibF4XT5qie7FbO5R7HaHOPXczmU5ubmMfWcg2blC488priH/ja3VCmPPPadMXLK
      bllx2G2KeRz71hUfV7b+/PcT6jPQ36cMjLDZeH69Ei5lDAkEgg+OpCjKDXFv/dofnuNEcSWK
      4sIp6Xnm298hKsR0Vfv4v+8+zscf+xGxJu1VbfdGIz93Ly++/BqffOirrF06B4CWhmpU/hFE
      hQVeUhtvvfwiO3Ly+d6Pfkpc+KXVEQgEHy1umAAguHoosowMqMc867903G43kkqFShJvXgWC
      f1VEABAIBIJpivgYnEAgEExTRAAQCASCaYoIAAKBQDBNEQFAIBAIpikiAAgEAsE0RQQAgUAg
      mKaIACAQCATTFBEABAKBYJoiAoBAIBBMU0QAEAgEgmmKCAACgUAwTREBQCAQCKYpIgAIBALB
      NOVfPgDIQ9srflSRZfkjrwOAy+W63iJ8YIQONwZCh6vHv3wA+Kh/7fpfJQC43e6pC93gCB1u
      DIQOV48J9wT+V+Fbvz9AWX3X9RZDcIV8/6FbmZsSeb3FEAj+Jblh7gBkp5XGlk4AWi804hx1
      0dvb00F7twWnw448yUV9ybkSPvrXywKBQHDtuWECgOLsp7SqEYCakmIcCnR1tlNeWkJnTy8a
      lQpJJbHr9dcpraqmf9BGR1szpWUVyAoosovKinKKikr5aD/0EQgEgg+HGyYAjMe2t99AYzBy
      4OBhBrvbudDcgVuRcbtc2Pu62Jebh8bdx8EjBezesQ2bW0JRxPW/QCAQXAo3TACQJAmXwwGA
      c+gFSVxSMmkpKQQaDUOFVERFRJCWnoEy2IvDaaO1u58gkwZZMjI3K4PI8NDrpYJAIBB8pLhh
      AoDKEILlQgkHDx2kpnsQPzWABHiCAxJIqAiJCGTPe7ux6wJRbFacTicarQ6jys6evfsorqi9
      rnoIBALBRwVJuYHyJBVFZmBgEH9/E5I0cTmH3Y5WpwdFxulyo9NpAbBarRiMRkZW/eYLe0UW
      0EeYGykLyG63o9frr7cYHwihw43BjaLDDZUGKkkqTCbTlOV0w4aTVOh0F29ijEbjmLLrspOZ
      nxZz1WT8sBleA6BS3TA3a1eE2+VCrbn84RYZ4n8NpBEIBHCDBYBrwa3ZyajV6ustxhUzvGJQ
      cwWT543EjXLFIxAILvLRvqwUCAQCwRXz0b6svATESuDpyZzkSH7w8K3XWwyB4IbmhrsDOHUs
      F5vL8166+OzZScuWFJd+GCIJBALBvyQ3VABw9HdytugsZ0qrAWhtagJFpq62msrqWhTA3NVO
      aVk5NoeLxsYmADraO7BbBygrK6W9y3wdNRAIBIKPDjdUAMjPK2Tjg5+huarEe0x2Wamurqfg
      +EEKyut47dV/4nDY6er+/+zdd3hb9b348bckS16S9x5xbCfxiLPJJIOQBEiAhlloob3lXij9
      0UWhlAKF0ha6KO2FLqC7pe0tYSckhMTZiZ3hleW995At25K1dX5/OAmELMvbyef1PDwPkc45
      38+R5PM533lMuF1OcvfsoKGti46WFpqbm/nX6/+RtYCEEGIAxlECUKioqiYvdx8dbY0YLf2z
      gpvrqjG71MyankmftY8777yLzpYGKmua6DObKKuqJXnyJI4eKyAmLpHY6HBZC0gIIQZg3HQC
      Oy1dTJ29lEVzMzG11lLX2ExoeDiG4DCc5lJK+zykzLiKgzk5oNEQFRaCFZO4ZQAAIABJREFU
      n2oas2emsW3nPqIiIqmuqsTuULjIHDIhhBCnjJsEoA0MY9Hc/nV8QqKTCIkGSALgjjtuP7Pd
      jKnJn9hrEgA3rls9SlEKIcTlY9wkgJFy/41zsTrGx9N3BsPj6Y9drZ64k9kAnE4nWq121MoL
      9Bu9soSYqC77BJAcGyIzgccBmQksxPgzsa8qA1DdbJIawDgw2jWAkTBa5xDopyUlLnTEyxHi
      sk8Af/wgX2YCiwlFZjGL0TKOhoGerb2phvfe38R7GzdhNJnPeX/vrl2AQktz86jHJoQQl4Nx
      mwD6erqYNmMha1evYMvmTYCHA3t2si17Jw63B7vVSlXZSTa8sYF9uXm0NdSyZcsWDheeuOSx
      hRBCjOMEcJrO30BIaDB1pUUogbFkJUeRk18CQMrUdNKnTmPporkEBIWQNm0aRYeOMHFb/IUQ
      YvSM+wTgcTnoNvVitdloqKukuqWblITI/jdVnJr1q2Lvrm3YnG4MQfIAESGEGIhx2wns568n
      9+BeSgpUrLh2NTEhOo6XfUh3N4TbHISGhwNqXM4+9uYeIUJmAgshhFfGbQKITprKXUlTz3rt
      9jvv+PgfyfEArFt/22iGJYQQl41xmwCGi8wEHh9kHsDAySxmMVou+wQgM4HHh8thJvDlcA5C
      fNLEvqoMgMwEHh+kBjA+nD6H5NgQ9P66sQ5HjLHLPgHITGAhzvXc/dcyIyVqrMMQY8zLYaAK
      ubm5/f/ntnM47ygFBQUX3aOg8MLvG5trePO9rd6FAOBxUHBUJnwJIcRQeFkDUNHe1IDVpdBa
      egyVfwQGPw8oTspKa6ivq+Xqa5aRs3c3DqebuQuXE6QPwtnXTc6RQnp6epi3aDmxEcEAFBQc
      w0dx0Wt34+ltJ+9YMTa7k2C9L+Y+hTVrrqHwyAHauyxcvWwFbc312M0mtCGxBAX447L3sXvP
      PgJCIkiNDSfv2EkiYicxf/b0EfiohBDi8uL1RLBZmakcK67meFkdM9KSKK+oBMXB22+/Q9a8
      +RzZs4uUrPkkRhvo6OyjurwMp8VEt0vL2jXLyM87fefuodfh4eq5GRQcLcXU0Yw+PIlJEb4E
      x6UTqu2jrr6a5h6FJVdNZ8/eXAoP7sFo8yE1MZrq8nL27tpJ5rxFzM7KkJnAQgjhJa8TQOK0
      6dSXH8Ol0uGr+XjK1ex5VxMdHozD7iQoKBCPcvaTeUNCQ9BotWhOzd3tqK+go6uXg0crqa0s
      BsBgMKDx8SFQr0en02Lrs9LS3MCxkhrSpiWjj4hl6YJZqE4Va3V6CAvS4+/vLzOBhRDCS153
      AqvUOkL83EROmQ1AeHgYoCEstL9ZZ8HSxez4aCtdHY0sXJ1BaHg4Gq0fIXqlf7uwEAAamzu4
      6/OfI8hXw4E9e/Hx1xOg04I7GF+dBndwKOFJU4gsLqa7u4eA4D7CQsNOR0FoeDgpk2PY9N67
      hEbFyExgIYTwkkpRPnWrPkTNteUUFlfSZTTymTvuRu87tsMXv/vqNhkFJMSnTORRQJfDfIzx
      cg7DngDGm4oGo8wDGAcupzH0E9nlMA9gvFw8h2K8nMNlPw9AZgKPD+PlBz8Ucg7icjOxryoD
      IDOBx4fL6e55IhuLc5BnHI9fl30CkJnAQowtecbx+DX6D4RRPGRv2cz7G9/nSFExB/bsP++4
      /a7Wespqm0Bx8/Zb76EA1cVFdFqcFzx0R0sTzsu6R0MIIYbPqCcAR08L3So9n7n5M8zMSMVi
      6QPgeNFRik+ewOFW6Os20m1zcvLoCbpbaqlvqKG1x86JshqCArTkHz7A1o+2YbY6OFF4mM1b
      ttBqNPLuf95g85YttHR0j/ZpCSHEhDPqCUAXHEtMgJvDhw9xvLgSPHayt23Fjo7QQA37cws5
      dDAXQ2gcisvC8dJKbr/tM5QcO44HDbaOOgpK6gk3+LJzby4ni08SERGFzseXzPRprL7+BmJO
      LTUhhBDiwkY9AbisFqbOmMu8uXOoKC8HlQ/hBl+6e3qJSUqnq6kEkw3Cg/yIMuiobrWQkDiZ
      1sqDBMUkoXg8BAaFMHlKBrOnp3LduvXEhvqyL7cIlUrB7nDD5T2yVQghhsWodwKrNBqKDu/H
      4XSzZNnV2HtMJE9NpaSoALPNxeSYcLTxMwDImj0HQ5sZUJE14ypip0zFYPBjWnQDR/LyyZgx
      ixOF+fTanMy/ahGBGgd7dmxl7oKriY0MGe1TE0KICWVcTQTr7mhl76Ei1q27btiqJjITWIix
      NdyjgC6HuQzj5RzGVQIYCW63WyaCjQPj5Qc/FHIO44Ocw/AZ/WGgQgghxoWJfVs5ADvyq+no
      sY11GIPm8XgAUKsndq52u1xoJngtRs5hfJBzGD5jH8EIy86vlj4AIYQ4j3GaABTef/M/qHwD
      8A+KZPWKxWe9W1BQwJw5c87829hSh4VAXJ3NxKVn4Texb5aFEGJUjM8EoDjp7HFw1z234++r
      peJ4Hscqm3Ha+7j+pltwuj3gsbF92z46u3u4dtlV2B197N62jcjqehYuXCKTwYQQ4hLGZwJQ
      6Vh7/TVsfv8dAsJjiPW1c/XqG9B111BUXI6lsxNwU1JWxYMPPUB3XQlmmx+Z6enMWr2WwIk7
      6EcIIUbN+Gws8Thxqf257Y47sHS2Av2Te9va2tAH6s9sNmXadLSfeC6xSuXB7nDJTGAhhBiA
      8ZkAVGqqS4rYvOVDZl3V3/6/e/sWGnvVzElPYuqUVFBpmZKaCEBAaASxkWFkLVhAzo6tNMti
      cEIIcUkTYiJY5YkCwlNnEuLnfduOzAQWQojzmxAJYCicTueEHkN/ucwDkKdpjQ9yDuPDeDmH
      8dkJPIxUKtWlNxrHJnr8p03k5ThOk3MYH+Qchs8VkQDGy4c9GG53//PSJvI5QH9NRs5h7Mk5
      jA/j5RwmdruCEEKIQbvs+wCEEEKcn9QAhBDiCnXFJADl1GgaMXYURUEqnGNPvofxw+MZ2+/h
      su8EBtj63luYXQpBEQmsWbForMMZMHNbLW9tyyUmIoQ5CxYRFTqx1jeqryrhnew8vvHAPdh7
      u/j3W++jUcG169YTP0Ee2ZmXs5vd+eU88tX7UZy9/Onvb5OYEMO0rDkkx0eNdXgD4OH9N95A
      8fXDoWj4zKqlE/J7qD55lCMny3HbzFx1zQ3UFxdg96jw8Q9i9fLFlz7AOHBo706au8yYOru5
      6wuf54M3/oWi8SF+6iwWz8kYk5g0zz777LNjUvJo8Vg5Ud7CrbfezNHCI2Skp491RANWU1GC
      ISqFhfPnEKwPHOtwvOZWVNgUHVOSYjlZkMO0+au5eu5U9uUUMW3K5LEOb0B8Aw30dhpJz0in
      q7mWHrWB5UsWERU2cZJx8tR00tOmkl94FK2rd0J+D4HBYcyckYWvYqOtT42xrYGlS5eRMXXK
      hBkqHZ+UzJTkydSUniAmJhyj05/PrLuOvNx9pGeMTQK47JuAPE4bal3/xdPXz3+Mo/FOVPxk
      1M5uNm74P4prmsc6HK+FhYVz+k/T2tdHoN4fHz8DWrd9TOPyRnhY+Jn/9w2KJDJAzY4P3yen
      oHgMo/KGCouplX/+89+sWnP9hP0edDofdn/0AeVtdpbMnkZWZgalJ4/z57/+E/cEac3q62rn
      /Y3v0+32wW3tI0AfAIC/TjdmMV32TUBqnYGezgY8bgcm08RaI8juVJg5ey5xwVrK2jvJmBw7
      1iF57fTfZlR0NBVllXhCXGhCJkLTycdOn4PD4SAjaybTUmLZdbACGJu7Nu942Lx1B3fdcy++
      PhocE/R7KM7bjy5mKitmTgMgINDA1LQMGmrqcSmgmQCVAKtHxW2338mh3Zsxuf1oqjqOMyOR
      bqt7zGK6IoaB1lYUU3C8jLmLljIpJvzSO4wTxtZGDh4pROPrz8qV16DTTKwK29EjudS3GkGl
      47q1q8jduR2LU8Wq1avPWsV1/PKw66OtWJweUOm4eslccg8cxKPSsPyalej9x+7ObcAUJ1s2
      fYgL0AYEc8OqpezdMdG+B6gsOcHJ8ioAps+ej7m9lrqmdhKS05g9feoYRzcwRXk5NLaZ8NOH
      snLZIkqKDlNW28LSFSsJD9Zf+gAj4IpIAEIIIc41sW4phRBCDBtJAEIIcYWSBCCEEFcoSQBC
      CHGFkgQghBBXKEkAQowhxeOmu6d31Mt12K30Wc+eCOZ2ObH02Qa0//ZtH+IYwRlYB3dn09Ft
      HbHji36SAIQ4H4+TL99zG/98b+fIFtPXyjMvvjaofU8c2Ut+cdWg9i3M3c6b23LOeq29NJ+/
      bdh2yX3rig9RVNaG7nxzCDxWXnzx9xfd39bVyIZN2y+6TWpqIr9+5dWzXistLeXBBx+ktLT0
      kjGKgbnsZwILMRh1xUfIWLqWw/t2cteaWbz8l/d45KF7+d+Xfs/yBWls2LiHoMgEvnzbCv76
      5oc0GHtZNTeJguJaAsIn8437buG5Hz0PWl+mz11BiNLG7ryTxE+dyUP/9VnwuHjhx89htttQ
      a6KoOpnPq3/bgI9/EN/44np+8us/4YOLdXf9D5ruOvYcLsCpCuCb96w9VV4PAV01dGhD+eK9
      d1JS3cKX1i/nL+/uITMU8otr8QTFoO6sosnYw+pb7+HahTPpMTbz3E9fxGrpZuHae/nonX+d
      iev2BUmAit1bN50p74bFadj8EkkJcZJfZ+G2G1aw8d0PuO1/HuNk4X7+8PpGnDYLsbExNLe0
      8twLvyBE78vJwv388V8fgL2Xzz/4LQoOZvPAfQ/w2l9eI8Jl5d/Zh/EoEOr6+HO5YX4Kf/zn
      u+iConn28a+j6f4jPQ4PQbr++9S0tDReffXVi39xwitSAxDiPHbt2oUhOBJzaxXdGGitLKTs
      WB4u/wg2/HMDC5Yupe7oPpq7uskvreXZp79L6rRMwiMiyTm4n/yDu0ldsIqHPncz9U0tbNi0
      laVLl7JvRzZuoLk0H7shiWe++00ANr23gamzFuLuriPvRA2JU+fw4x9+l40bPyQ5NZXIsHDK
      DuXQZe49Vd4TXH/T9dx0x90sykqmvqkZPE4ampsxdbTQiYH71y8kp7SVpVdfxVtvbgJgz5Z3
      Wbn+i3zh7vUA58QFnFVe6ow5vPfuW2zbvJn0zCwA2kxuJkXpMfd0MXf5DaxdlMmS1bcyPTmM
      5k4rddX1mHu6mL10DXfffj0llfXUNdQBUN9Qz/U3rWXmgiXcdfPqs8pvaarH4lBYteJqACbF
      hdNs7DvznZyuATz44IO8+OKLo/AruPxJAhDiHB7yjtcQH+ZLVmYqe/bns2zBDH76i9dYs3oV
      /gEBaAOCuP2uewnQqpk7Zz7BAb688pe/s/6W9egDdISFhJB/6Ai7cw8B4KdWYwiN4Av33Ika
      0Pnp6Ghvp6GhEYAAf380ai0333I7seEBWCy9nDx+AkNoMH979TVW37ye8BA9KjhTnsZHQ1tr
      G1arDWNHFxVlFWfOYPmSq9H6BqDYrMQnpfPZW1fDqXJbWlpoaW45b1zAWeUFhsUT42vjSLOD
      jEn9y6j4+7qxOPqfr6FSqVChoEIFn1qVU636+PJi6emlvraG7l4rGh8NnR1GzBbLWeVPnjqb
      rz/4JV5/+ed0ORRMPT3oAz9ebuN0DeDVV1/l0UcfHbZv+0p2+S8HLYSXPA4LSmA0665bRVZ6
      Ot0WC4vnzaHDpmbd6sXMmDWDg3t2YVO0zJ0zE7+AYBLjozCoFXYfLGDu3DksXLiEUIOOzrZW
      7NowHrj3Fnbt3oNPYDhZaakEhEbjMFZzvKqd+XNmsW7tWo4V5NLebWNaYiTvb8lG0frz31+4
      h/i4UD7atpvpc+YxY1YW/qfKi4yM5ejhfegiUtFZ2mjudjJzRhbJSYmERScQHhFJYmQABw7l
      ETd5KpPiokhMTqUgZxcujZ45s2exetmCs+LSBQYxPSPpTHlZWZmo+jowxGUwOzMVALe5jRNN
      VqanTCI4NJyoiBDCYxIJCwokNiGJAD8fUlNS+t8LDyUkNJzEkEByCk4yc9YssmZdRV9zDY0m
      B7ffvOZM+ZMi9Gzc/CGZi1cyNy2eDZv2csfN151ZUba0tJSnnnqKTZs2nfmvrKyMJUuWjNlv
      ZaKTtYCEGAHm9gZefu2vuBQND/y//0ds+MAfvNLdXMXOwnpuWbtiBCMcaCw1vPznDXzz0W8R
      5NffZai47fz857/kW48/gW6E2hA+euef6JPns2T2tJEpQACSAIQQ4oolfQBCCHGFkgQghBBX
      KEkAQghxhZIEIIQQVyhJAEIIcYWSBCCEEFcoSQBCCHGFkgQghBBXKEkAQghxhZIEIIQQVyhJ
      AEIIcYWSBCCEEFcoSQBCCHGFkgQghBBXKEkAQghxhZIEIIQQVyhJAEIIcYWSBCCEEFcoSQBC
      CHGFkgQghBBXKEkAQghxhZIEIIQQVyhJAEIIcYWSBCCEEFcoSQBCCHGFkgQghBBXKEkAQghx
      hbpkAjB1trFn/yGU0YhmiLZvepNuh3uswxiyt99+46LvZ296E5N9eM5z+6Y36fbyWHZTM5uy
      9wxL+UKIsXPJBPDBG3/jN79+iRO1HaMRz5Acy8vF4vCM2PFPFu5n6/6CETv+aTk5+y/6/tG8
      XPqcw3Oex/JysXh5LJe1lyNFx4alfCHE2PG5+NsecgurePLr/8W2bdlk3X8XdnM39R09TJmc
      CICjr4fGjh6SJyXQ1dHCrt378A+OYNXKFWg1KmqryohNmkpLbTkWjw9pKUkcLyygsaWN8JhE
      5s+dgepUafVVZZworSQ0Moa42EgS4xNw2fvIzt6BxalwzcpVhAUFnBWh22knNycHq9NDW2f3
      mdcvFIvOz5+DBw8TEZfM0oVzALBbLeQdOUK32crU9CymJCcAUFFRxpQpUzian4dOH0xeXj4N
      Fn/CdC5iEyYT6OPCow0kPCQIUCgrLWNaWhpd7c14tIFoXFZKa5tZOG/2eeP5pJ6udo7kF6HR
      +WP9RC2muvwkh/KPkjxtBgvmTD/nG+psa6Hw2HFcHpgzbwGRYXqOHS1mxsyPtz1ZXExmRsYF
      v+W2pjoOnSgiOnEKi6+aib23m9r2bqalTOr/jB19VNS3kZY6+RN7qSg5VsDJ0koy58wnPTUJ
      gG5jG7v37EXtq2flqmsJ9NWe+Tw+/Tl9+reRMSXlgjEKIYbfRWsAzeVFhCTPYubCpRw/uA8P
      oNVpeP65n3H6nnHnlnfILaqiz9TKY49/l6iEyVgaSnn+xd8D8PY/XuOtN/7Jz158hU5TL6XH
      DrO/4ARBwcHsePcf/O3tjwDYu+Utfvzi79H5B1BZuI8//ec9wMOz3/0WZsWX6CBfHvvWYzg9
      HzdGKW47j371y5TVteOj8tDaZgS4aCz/++q/iIqJZe97r/OHNzYDkL3tA+raujDo/fnFD5/k
      aEUTAK+9+hteevZ7vLN1FyZTF22tHXR1tNPQ0ECv2cqxg7s4UHTyVDQe/vjbVwA4dnAXb7z5
      Hx555ElqG5ovGM9pxqZKvv6NRzHb3PSZOui1OgEoydvNi7//K2lpGWRv+DPvZR885zt6863/
      w+oClcvGw9/4Bn0u+M9ffs2J2jYAelur+c0f/nXRH8GGN94mKiaWrW/8idffy8ZHp+YH33sa
      u7v/sz6YvZkdOYVn7ZOz/QO25xQSHRPJD596AotLwdbdxsPffgzfoHBUdhPfePhJXAoX/Jw+
      /dsQQoyui9YAsrdtZ9WaW1H7BDA93o8T1W3MSI5iXnIQBWVNzJsWR/augzz583s4sPl11t31
      IFcvvAoWXsXeBx/CfipLHK0w8fJvfsnpm97kqVnU1NZzw9o1/GPbcbjtOt58/yNeeOl36HUa
      LGmxvPDvbXTVnECJmsHtN64BoOLYEfJPNLBwRn/t42jODpIX3cx9994BQMHeDwE4kL3lgrF8
      87FHidP7sGj+bL72zcfhs+tY95nPYupsp7G5jRXL53O8tIKZU+JoKj3JVV95lm+uWwqA2tZO
      WbeBW29eAUB76YWbarJ35vGHV39HqN6X7W/99bzx+J5Kv+9t+DcPfPsHLJ2VDMCOPTv6X3/r
      XR576jmSwgOZPvUJHn3qJdavWnhWOV/+yjdoamyg09TDlPhA6jusfP7u2/nPhvf4wbcfIPuj
      LVx34/qL/gi++vC3iNP7sHBuFl9/5BnuXb+KG5ZmsHVPAZ9ZOZct23fx5Sd/dtY+i1ffyNe+
      fB8Ah7I30m1zcTJ7M2vvvJ/rVy0DoLmqhLwTDRct+9O/DSHE6LlIAvCwY8dugirb+ODf0NlS
      D9t3MuOBu7jxMzfy+patpOqvRh0+hRB/H0yd3Wzf8R+OHtgKgFvnz+mGjK89/JUzf+CHdmzi
      r+9mc/Wiheg8Fjyn7uh1ej/0Os1ZEZg6uykrOsizz/b3P5h7u5nl83ENoNtkIjU19ZzILxYL
      p7qz1T7++AX0l/eXl39MRSfMmj6NxqZ2YiL6t4mZlsVnT138vfXFB+4jVO87gHhOn8ek85yH
      iddeegGtGsBDZHzMWe97XDa+8/A3SEibS2JcJF2m/s8zc8G1tL16H13WL7HrQCE/fvkrl4i2
      /3w1vnr8dP21j1vuuJtHnvs9a2ZH06MOIzE88Lz7nB1vN7FzYs/8OyYikj5LL5pztvzYJ38b
      QojRdcEE0FxWSOy8tTz/xFcB8Dgt/M9XHsPzwF0kZy2i9Tf/ZMuWHq6/+SYA4uLjmOE7ia9+
      8VYAzGYz/qfucFWqjy8W27du5ekf/4pYvQ+m5jIOVGzqD8Tj4MjxKq7KSqGiohyAyPg4IqKS
      eObZZ1EDbpcdu+vjVqugkGAOHi/nphULAHC7XZeMhVM9Do3lhah8IgEPBaWNvPzb3wKQvclJ
      s3Ju3Kf3ddjtZ72inNrE7XTg/MRV/ZP7Xjye/vMoLi4ndn46KB7cHs+p/WKYf9t9LJre377e
      azafVXZXbTGGlHk8/PUHAag8nnOqcA23rlvFH156ieCUqwjozyC43W5UKhVq9adb/vo/k9qT
      h9Dq+2shhqjJpAQ6+fWr/2DV2ovXIE5LnDyJnKICls2bAkDB8WLuXPk52toH9jkJIUbXBRPA
      juztrFrzmTP/VmsDyYz352R1B1nJEaxYlMY/PjzK2/d9E4BFa25i0+OP8WTFUfzVLox9Wl78
      +TPnHHfh1Yv54eOPk5wQQle3CbV/PACPPvodfvbiy2zQ+BAdGQrqYPTRKSyfGc5DX/sWqZOi
      qa6p5bHv/YzkOC0Asxav4l//+QbP/LAGlcNCYX4Jn79ELD/9/veIC9dTVlXLUz/4CaAmKVzP
      95/7KSpHD23trSy98Yvn/UwyM2fz8quPY6wpYtb8a0hLncYrz/2G8iN7aGhowuI+/8d5oXhO
      3xnf8tkv8Mi3nyR/3nxaGxtoNTkA+Nz/PMDjTz7NzowZ9Ha1EZs6l68/8Lkzxw1JmEJj4a/4
      5f/aaGuopr65mfWn7qZX3XQL/7tuHT96ZcOZ7b//yAOs+a/vsGJu+pnXfHQ6XvzR9wnX66is
      beSZ53965r3P3XMHX/jWT/nat79z3vM6m4oFK9fx/uOP8cPnq3F2N+OXdBXpk0LxtwzscxJC
      jDJlkFxOh2Lp6zvndXNvj9Jrtlx0X1OnUTF2dZ/1mqXv433yd7yvvPTHDWf+bbf2KV2mbsXj
      Oc/BPG6lpblJMfdZLxnLL599VKnr6lO6TCbFfdbBPEpbS/N5j/FpTodd6TB2ntnf3GNS2tqN
      yvlCu1Q8n+Ry2pXGxkbF4XSdfXoet2IydSlWm+P8+7kcSlNT0zn7OftMyoNffVRxn/q3qblC
      +eqj3z8nTo/bozjsNsV0ns+35niO8uyLfxzAmZ11RKW1pUnpMJrOetWbz0kIMTpUiqKMizr4
      G3/6PbnHy1EUF06VL08/832iQ/XDWsavfvBt7nr0J8TptcN63PEmb+82XvvHG3zu/m9yzYIs
      AJrrKlEHRhIdHjSgY7z9j9fYtCePH/3kBeIjBraPEGJiGTcJQAwfxePBA2jOaesfOLfbjUqt
      Rq2SHlohLleSAIQQ4goli8EJIcQVShKAEEJcoSQBCCHEFWpcJQCPZ+RW8hRCCHE2r2fkdHZ2
      kpOTQ09PDykpKcybNw8fn+GZ2CP90UIIMXq8GgX07rvvYjKZWLJkCUFBQVRWVpKfn8+6devO
      uyZPQ00lbl0QSXGR5OXuo9uuYsXyq3H29bBr914mp80gPXUSTmf/+jNSAxBCiNHjVQIwm83o
      9Xq6urpwuVy0t7eTmZl55vVPclp7ePPNDYRNnktmtIqyDhWpoS5qen3pqT/BsutuZvvGt7jx
      znvOWqtGo7nY0mFCCCGGi1dtN3q9npaWFnJzc6mqqkKtVpOQkEBQ0LkzRbd9tI01119HXmkH
      zY2NZC24nugAhZLNO8AnkFBDAJlpSbR2WUmO+vRKkyNDUTw4u/NQqX3RBs0clTKFEGK88roT
      OCAggMOHDxMaGkpwcPB52//NHU3Ut5oozC+k/ORRXGotdqsdj9OKEy3KqaWEbRYrWu3o3fE7
      TYcwlz1Db8njOHuOjlq5QggxHg1qJnBrays9PT2o1erztv2f5ra2sz2vgWVZCbzx3hb8NQoL
      rr2Jzpoi6rvsdHb28KUv3HUmC410E5Cjcx/miucBMKQ9hzZ43oiVJYQQ453XCcBoNPKnP/0J
      g8GAwWDgtttuIyAg4JL7OR0OPICvTgeAtc+Czi8AjfrjtWZGOgEoigdn135QadGFLhqxcoQQ
      YiLwevym3W4nPDwcRVGoq6sb8H7aUxf+0/wDRqfd/5NUKjW6sGWjXq4QQoxHXvcBxMXFsWDB
      Avz8/Fi/fv2A7v6FEEKMP14ngLa2NiorK7n33nspKiqis7NzJOISQggxwrxqAlIUhVdeeYWm
      pibKy8vx9/cnJCRkpGITQggxgrzuBLbZbFRUVBAREQFAdHQ0qmF6aIhMBBNCiNHjdSewx+Oh
      oKAAgLy8PH7xi18M21pAQgghRo/XV25fX19WrlwJ9A8JNZlMZ2rSn3HcAAAgAElEQVQDQggh
      Jo5BDQPdvXs3AKmpqYSHhw97UEIIIUae16OA1Go1bW1tNDY2UlxcjMvlGom4hBBCjDCvawAd
      HR0kJCRw5513jkQ8QgghRonXCSA4OJjs7GxqamoAePjhh9FqtcMdlxBCiBHm1TDQ05sO17DP
      T5NhoEIIMXq8qgEcP34ch8PB9u3bz7z2yCOPSA1ACCEmIK8SwIwZM1AUBafTidVqBfo7hYUQ
      Qkw8Xl+9a2tr2bdvH4GBgQQGjv6KnkIIIYbHoFYDNRqNlJeXU15ezvm6EHo629n+0VZ27TmA
      063Q09nGBxs3UtfUDkBxUR5bt+3A7nQP/QyEEEIMitcJoKmpidTUVFauXMnKlSvP22nrdLlZ
      tHQFicEajhwvY/OH21i5Zg27s7fR01FPcb2J+TNS+GjH3mE5CSGEEN7zehhoTEwMDoeD4uJi
      oH8xuE8ngfCoaMpLTrJz/yFuvvtLdDYEE+Dnx+SIIGqaWkjPnEFYTBSqghIAnE4n0L/OkEws
      E0KI0eFVAti3bx9LlizhoYceOvNaR0cHbW1tZGZmnnlNUWBq+nQig/3YX1SM3e4AoNNiJ1kf
      SK2pE4/TgNPR3wR0ehSRDAMVQojR49U8gJqaGt577z3UajX+/v6YzWYiIiK46667zhoKerzg
      INVNRux9FhatWENPfTHFtc2ERcaxcul83n37bWwuD1evvI7EqNAz+0kCEEKI0eP18wAAXC4X
      NpuNwMDAYZ0UJglACCFGj9cJYCRnA0sCEEKI0eN1J7DZbOZ3v/sdcXFxXHfddURHR49EXEII
      IUbYoJqAnE4n7777Lm+99RYLFy7ky1/+8rBMCrtUDUBxOPDY7GiCDEMuSwghrnReJ4Cenh5e
      euklrr32WhYvXkxdXR2KopCcnDzkYC6WADwWC82PPY7HbCbi4W/gP3fukMsTQogrmdcTwYKC
      gli8eDGVlZW8/vrrJCQkDMvF/1Kc9Q24OztRHA5sJ4tHvDwhhLjced0H0NTURF1dHWq1Grfb
      jcfjGYm4zuGbnkbQZ27GZTRiuOH6USlTCCEuZ14nAL1ej8FgwGg00tTURF9fHzqdbiRiO0fI
      5z83KuUIIcSVYFCdwAA2m+3MRLDhcqlOYI+i4FEUfGQJaiGEGDKvagCHDh1i586dZ702Wg+E
      cbhd/CZnH2aHnXtmzyM1bPgSjxBCXIm8SgALFixgwYIFHD9+HKPRSERExKg9Dayhu5tWcy8A
      J1pbJAEIIcQQed0H0NjYSG5uLjqdjqamJhITEwkKChqJ2M4yOTSMALs/7SYL8xdPGvHyhBDi
      cud1Y3pAQABdXV00NDRw4sQJ/Pz8RiKuczR19JJ/sIP6Uiv7ChpGpUwhhLiceV0DCA0N5f77
      76e8vJypU6eO2gggX60Glap/qelAP3kIvRBCDJVXo4AOHz5MdnY2jY2NJCUlUVNTw69+9ath
      6we41CigurZuOkx9zEqNRqORkUBCCDEUXg8DbWpqYt++fXz2s5/lH//4B+vWrSM8PHxYgpHV
      QIUQYvR43QQUGxtLd3c3P/3pT9Hr9YSGhl56JyGEEOPOoCeCjQSpAQghxOjxugYAYDKZ6Ojo
      wGAwnPd5AJ2t9ezefxi3x8M1a26gp7mS/OPlxCWlsWT+dD7auIlum50Vq28gKlSWdhZCiLHg
      dU+q0WjktddeY9u2bWzbto2+vr5ztnErOm5efysr5mdytKSKvKNl3HHHHbTUFNNcW4Y2ajK3
      3Hw9e/fsG5aTEEII4T2vawB2u53w8HAURaGuru6820TGRFNTdoI9h45x+523saOtBoCYID2t
      nd3ERKag9QsiwL+/eKfTCYDH48Hlcg3yVIQQQnjD6wQQHR1NVlYW5eXlrF+/noCAgHO2aa4p
      Ia+siXvvvRs14HT2X9Tbe63Mm2qg1mTE49RjszoAzgwjlT4AIYQYPV43AVmtVnbu3Mk999zD
      9OnTz7tNc1MLKpeVDzZupKq+hfSkWN56+22CouNJSE6jvfoYb7z9PlctXjLkExBCCDE4Xo8C
      6u3t5fnnn8fPz4/AwEAefvjhUZsIJoQQYvh4nQBcLhcNDR+vxTNp0iTUw7Q+vyQAIYQYPV5f
      uZ1OJ4cPH+bw4cP85je/GbVHQgohxJVIURRqykupLisZ9mN73Qms1WqZM2cOALW1tZhMpmF9
      KpgQQoh+iqJQcrSQhpoqAKLi4gnUD9/cqUHVAIqKiigqKmLWrFnDtg6QEBOdqdOIubdnrMMQ
      lwlFUThZmE9DTRWJyamoVCoaqquGtQyvE0BfXx8Gg4Hbb78dm81Gd3f3sAYkxESjKAqVpcUc
      3ruLw3t3yVwWMWT9F/88mupqSEnLIH3mbKLjEmiqr8U9jL8vrxKAoij89re/5Z133uGFF17g
      +PHj6PX6YQtGiInG7XJx9HAuVSUnCYuMwuV00lJ//gmSo0HxeLAVF49Z+WLoPr7415KSlkFq
      eiYA8ZOTcTmdtDYN3wOxvB4FZDQaKSgoYPXq1cMWxGkyCkhMJH0WM0WHcjH3dDMtayZJqVPJ
      3ZWNx+NmybXXjXo8ittN5yuvYtm7D/111xH2318a9RjE0Fzo4n/agR0fodH4sHDFtcNSntdN
      QEFBQRw/fhyLxTIsAQgxEZk6jRzeuwubtY+5i5eSlDoVgKQpU7H09tLZ3jaq8SgOB+0vvIhl
      3358oqOx7NqF22we1RjE0Fzq4g+QMDmFHlMXPaauYSnT6wRgs9lwOp387ne/44UXXjizjo8Q
      V4rG2hry9u/Bx0fLgmUrCY/6eEXc6LgEfP38qKuqGLV4PDYb7S+8iK2oiLD7/5vIxx5FcTgw
      b9s+ajGIoRnIxR8gNmESGo2GhprqYSnX6wRgMBiYNWsWUVFRREVFoVKphiUQIcY7RVEoPVbE
      ycI8QsIjWLBiJYGGs4fkqdVq4pOSaW9pxto38rVkt9lM24+ew3biBOH/7yvoV61Cm5CA36yZ
      9G75EEU6pMe9gV78AbQ6HTHxibQ01uMahptvrxNAU1MTjY2NQH+bvdvtHnIQQox3ToeDgtz9
      1FVVMCl1CnMXL0Wr1Z1328TkFFQqFXWVI1sLcHd30/aj53HU1RP52LcJXL7szHtBN92Ip6cH
      y569IxqDGBpFUTied7j/4p+eedGL/2kJk1Nwu1w0DcNgA68TgF6vx2AwYLVaqa6uxmq1DjkI
      IcYzi7mXQ3t30tXRTsasOaRlzbpozVfn60d0fAKNdTXDcpd2Pq72dlqf/j6ulhYiH3sU/zmz
      z3rfb8YMtJMn0/PBZhSZrT8unb74tzTWMyVjOqlpGQPaLyg0lKCQkDOTw4ZiUJ3AN9xwA0uW
      LOGhhx4iJCRkyEEIMV4Z21o5tHsnToeTuUuWkTA5ZUD7JaVMxe1y0VhXM+wxOZubaf3hj/BY
      LEQ9/RT+M2eed7ugm27E1diIrbBw2GMQQ/Ppi3/ytHSv9k+YnIqlt4cuY8eQ4vA6AXR1dfHc
      c89RXl7Ob3/7W2kCEpet2spy8nP24R8YyMIVKwkNH/iSJ0GhoQSHhtFQXcVwPnbbUV1N6/d/
      gGKzE/X0U/hOmXLBbQMWLUQTGUHPB5uHrXwxdB6Ph6OHcwd98QeIiU9A4+Mz5JnBXicARVGY
      P38+N910E2lpaXR3d8uCcOKy4na7OVmYT9nxo0TFxjF/6Qr8AwK9Pk5iSip9FjPGttZhicte
      UUHbcz9G5asj5rkfops8+aLbq3x8MKxdi/3ESeyVw7uEgBic0xf/tuYm0mfMGtTFH0Dj40N8
      0mRamxpwOhyDjsfrBKDT6WhsbOTVV1+lq6uL119/nebm5kEHIMR44rDbyD+wl8baapKnpTNz
      /iI0Pl6vmQicHhLqT21l+ZDjshYW0fbD51AbDEQ/8zQ+0dGX3gnQX7MClb8/vZs+GHIMYmhO
      X/zbW5pJnzmbxJQL194GIj4pGUVRaKwd/JBQr3/ZgYGBJCYmYrPZiIuLY/ny5TIUVFwWertN
      FB7MweGwM3P+QqLjEoZ0PLVaTcLkZCpLTmIx9w56Fce+I3l0vPQy2vh4op54HE1w8MBjCAhA
      v3oVvR9sxtV+Nz6RkYOKQQyN2+3m6OFcOlpb+i/+yalDPqbeEERoeAQNtdUkTZk2qOuw1zWA
      yspKdDodGo2GlpYWTCbTOdt43E727fyIwuL+zFRVUsSbb77JgcPHAA8fbXyfDRs20NbV63XA
      QoyE1qZGDu3dBSjMX7piyBf/0xImD21IqHn3bjp++St0kyYR9b0nvbr4n2a44XpQqejdvGVQ
      MYwlRZn4zctut5uiQzl0tLaQMWvOsFz8T4ufnIzVYhn0zHOvE0B8fDzHjh1j3759nDx5kuDz
      /CA72poICwmmtaM/OeQdLeOOO+6gpaaY5toytFGTueXm69m7Z9+gghZiuCiKQkXxCY4ezsUQ
      FMyC5dcSFBI6bMfX+foSk5BIc0Od10NCzdnZdL7yGn7TpxP1zPfQDHLhRZ/wcAIWL8K8azee
      vr5BHWM0ue1tWBv/janwv+gteRLFM/g27rGmKArHjhzE2NZK5ux5Ax5FNlDRcQnofH2pr64c
      1P5eNQGZzWa6u7v5whe+gNlsvuBKoFGxSeh9oL6kE/Dg5+8LQEyQntbObmIiU9D6BRHg31/8
      6eUkPB6PLKUrRo3b5eJkUT5d7W3ETUoiJX06qFTY7fZhLSdu0mSa6+uorSwnYYB3f73vvkff
      O+/iN3cuQQ99BSfAEOIKWLeWvn376fpgM/rP3Dzo44wUxePA2X0YV2c2irkQUPAxzMTVW0RP
      9R/wS7h/rEP0Wv/DXApob2lmWtZMImJih/23BRATn0hddSU93SZ8/fy92terBFBfX8+BAweo
      qKhgxowZ5Ofn85Of/OQSzwRW43T2X9Tbe63Mm2qg1mTE49Rjs/Zn9tMPlZfVQMVo6bOYKTyY
      g6W3h7QZs5g0xA65i/H1jSQ0PILmhjpS0jIu2lareDx0v/kWfe+8S+CK5YR9+QFUw/E3kZKC
      b1YWth07CLv1FlSD7Ngebm5rA/b2rdiN2SjOLlTaCPziPotf1I3gCsBc/jIu4weoo65Ba5g+
      1uEOmKIoFBcV0N7cREp65pnFAkfCpNQp1FVV0N7cNKCZxJ+kefbZZ58d6MaRkZEkJibS0NDA
      fffdR3l5OdOmTSMgIOCs7RqqysjJK8JobEer0xMRAHtyDxMSFc+sWTPJz9lN0YkSFi27huDA
      jzOWoijD9oB5IS7E2NZKfs4+3C4XcxYvJSY+ccTL1PhoaaypJig45Jz1g05T3G46//gnzFs+
      RH/ttYR9+f7hufifjiEkGPO27fjERKNLShq243pL8ThwdO6jr+5VrPV/wGUuQRs0m4BJ9xM4
      +SF0wXNw1LTQ+uRTWPfW4zPNgdtRgG/kDajU2jGL2xsVxSeor6ogeVo6U7y8KHtLq9XRY+qi
      o7WVxJTUAXUGK4pCU0+3988DAMjOzubw4cPMnDmTdevWDSro85EagBhJiqJQV1lB+cljBBoM
      zF64ZFDj+wfD4/Gwf/tWAvR65i1Zds77rs4ujC+9hL2snKBbbyHks3eOSBzNjz+B4nIR9+IL
      I3L8i3H11WBv34rDuAPF1YPaLx7fiOvwjViNWhd2ZjtrYREdv/wVmpAQFJcLRdeG/929+EWv
      IzD566Met7cqS4upKjlJwuRkMmbNHZUy25ubKDyUw8z5i4iOiz/nfbfHQ05dDd02K1q1mrK2
      FnrtNu+HgQKsWrWKVatWDTloIUaL2+2m5GgBTXW1RMXGkTV3/qDH9w+GWq0mMTmF8pPHMfd0
      ow/6ePCE7eRJOl76NYrVSvg3vk7g4kWDLsfZU4il5jfoQpcSkPilc9433LiWzt+9grWwCP/Z
      swZdzkApbht2407s7R/htpSASosudDG+kTegDZ5zzvaWnFyMv/s92vh4Ir/zGJ5uEy3PPIsz
      z4Fq/ma0oYvQhcwf8bgHq66qkqqSk8QmJpE+89zzGynh0TH4+fvTUFN1TgLosdn4V1Ee1V2d
      Z73u63Z7XwNQFIV///vfuFwuYmNjWb169bDNA5AagBgJxrZWSo4V4rDbyZg1l+i4+DGZu+Jy
      uTiQvZWgkFBmL1yC22zG9Le/YzmQQ8CihYTcfdeQxunb27fSV/samsBUXL0n0AbPRT/lCVSa
      j5toFZeLlqeeBiDmJ8+jGqEmV2fPMaxN/8JlLkOlUqMLX4EudDGagCmoteeOHFRcLrr+/jrm
      bdswrL2B4NtvQx3YXzuzHT9B+y9/ju91XWin+ROU8Qs0/iPfbAfg7M6jr/5v+ASmEJD01Ys2
      QZUeP0pdZTnJ09JJScsY9ebs+upKSo4WsmD5SoJDw/AoCgdqq9lRVY7V4SDC35/102fiaWii
      6c0NNMTFetcHAFBRUYHD4cDlctHX10d8fDz+/t71PF+I9AGI4XS6yedEwRF8/fy4aukKQsMj
      xmziolqtxuVy0VhbTbhHwfTzF7GXVxB6z+cJvefzZy54g2Fv34al+n/RBs/BMO1ZfAKnYGt+
      E6fpMLrQJag0fgCo1GrU/v6Yt23DNzUFbWzscJ3eGba2LVgqfgwqLQGJ9xGY/E10YUvQ+MWd
      ieOTPHY7HS/+kr6cHILvuJ2Qz92NSvfxUts+UVFoQsMxv1WIT0YvLnspvpHXoVKN7LXCZamg
      t/RpVICr9yjuvip0YcvOW25bcxNlx4v62/wzpo/Jb0xvCKKuuhKXw0lodDT/LipgX20VeDxE
      +Ptx79yFRFRU4Xz510S4Pcz/whe9TwB6vZ6NGzeSn5+P2+1mzZo1w3aykgDEcHG73RQX5VNT
      UUZUbByzF12Nr++5F5/RpjcEUVdZjiUnF0OHkajvPk7AwoVDOqaj6wCWyhfwCZqDYerTqNQ6
      NP6JaAKnYW/bhNOUeyoJ9N+oaePjsezdi7OxEf2KFcNxWkD/pC1rw9+wNvyZXmcSVsP/IyRu
      Phqf8z83AfofaNPx819gP3mSsAfuJ+jG8/cp6pKS8JgdWA9WoElpQaXWojVkDVvs58Rla6K3
      5HHUPgaCMl9E7ReHveUd3NY6dGFXn5UEjG2tHD2cS8LkZKZlnX9l1tGgVqtxOOxU1Nexub2N
      mq5O/NVqgnx1fG72fAKyd9L1pz+jmzyZqKeeRBcf530CUBSFyMhIFi5cSGZmJlqtFj+/4fnD
      kgQgBqPT2seRhjqC/Pzx12qxWa0U5u6no7WF1PRM0mfOHhdNi4rDQc/r/8Tc1krvpATS7/tv
      fBOH1pThMB3BXPE8PvppGKb9EJXG98x7Gr84fPTTsbVtwtF1AF3oUlQa/zPNPpbt2fjNnoVP
      WNiFDj9giseBpfpF7G0f0G5Jp6prOZ3GLtqaGwmPikan8z1nH7fJRNvzP8FRV0fE179G4LKl
      Fy3Db3omtsM1uB1NeHyPog1ZeFbn8XDxODrpLXkcFCdBGT9H4xuNT+A0VBoD9ta3z0oCpk4j
      Bbn7CTQEMWvB4jFfFqemr4/tnR04PB78NWr8fXy4JWUaga//C/O27QQuW0rkIw+fmVTodQIw
      m8385S9/QavVsmnTJvLz88nKyjpnKOhgSAIQ3mrsNvHqoQOcaGvhYH0tdoeD1qOF2K19zJy/
      6MxSDGPN1dFB+09/jjUvn+CsGbQH+uEbFExIWPigj+nsOYa5/Ado/BMxpD2P2ufcv0GNbzQ+
      hhnY2zbh6NqPLnQxKk0g2vh4ej/ahqfXTMCiodVAPK5ezGXP4ug6RGPvfFr6FpE8LYPkaem0
      NNZTX12FPij4rLWQXK2ttP7gh7iNnUQ+8i0Crpp3yXJUajX+8+bS+0Y+6sQO3I6T+EatHdam
      II/LTG/pk3icRoLSn8cnYPKZ93z06ag0gdhb+2sCdnUm+bkH+psXr16Gj8+5/QOKx4Nl777+
      4bdRUWiCgoYt1rPiVhQ+Ki9lc3kJQUCm00m3VstNfnoMr/0JR20doV+4l5DPf+6socVeJwCL
      xUJJSQm33norBQUFXHPNNXg8HiKHYZEpSQDCG6Xtbfw57yC6LhPrduyhJyyUow4rjYqHzLQM
      0pImj2o8bmsDHqcRtfbspSRsx47R9tOf4+npIfzrXyN83VqMba2YjB0kJg9s3PanuSwVmEu/
      h8Y3BkP6T1BrL3xh0fhGoQ2ahb11M47OPWhDFqDxD0Ox2TDv2EHg8mWD7n9w25rpLXkSp6WK
      GtMKnH5LmbP4amLiEwgI1BMTn0Bnezu1leUoikJYZBSOmhrafvxTFJuNqO89hV/mwJ6EBaDS
      avHLyKL33f1okptBcZ53NNFgKB4H5vIf4baUo5/yPbRBM87ZxkefcSYJGJsK6VPSmLdkOX7+
      5yZfl9GI8eVf07vpAxw1tZh37ASNBt+pU4a1873P4eDvBUfIa6pnfsIkEjQaAnvNpDW1EfHm
      O2j8A4h8/DsELFxwzr5eJ4DTd/pbt25l7dq1hISEkJycPCxVbEkAYqDyGuv5v6MFhHQY+bzd
      jWfGdPx81MQ3t2Jyu8m3WqgzdREfFIz+PM0Pw0nxOLA2/ANL5c+wt32A296Cj2EGoKXn/Y10
      /v5VNOHhRD35BH7paQBoND401lYTFBLq9SqhLkslvSVPoNIaMKQ9j0Z36VqEWheJNnge9vaP
      sHdsRxeyAF1SRv+D452ucx4pObA4KugtfQKnrYvqnnVEpq4jc/a8s/pafLRaYhMnYbdZqa+q
      pLu9Dc/vX0OtVhP99FPoJns/IU0TFIQmIAHrsQMoAf2jndS6od2AKooHS9ULOE2HCEz5Fr5h
      F26Ocqon0VDbQqR/EbHRPgTGrDynFmLevZv2F17E3dZG6H99kfAvP4C7rQ3zh1ux5hfgm5qC
      JnToa041dpv4w5EcWs293JI5A4fTzvGOdmJsdnQmE9ERUUR99ztoY86/fLjXCcDj8bBx40aM
      RiPFxcXcdNNN6HQX7uTxhiQAcSkei4Xs/CNsqqtmkt3JHYnJNOn9MfZZmJScSuqxk6Tv3oev
      w0FxkJ4DjfXY3S4SQ0LwUQ9/P4DbWktv2Q9wdO6h1D2dZiWFMOteHMZs+vYdp3fDbgKuXkLU
      499BE/rx41MD9Aaa6mqx9lmISxz4RdBta6K39AlUal8Mp9qnB0qtC0MbfBUOYzb2ju34xa7A
      3W6h70AOhuvWnDXy5lIcXQfpLXsGu11FO18ibd56omLjzlubUavVRMXGQX0DTaZOemKiSLrr
      bgKGMBtZGx+Pu1aNmyJcjmP9s4RVZ3+/Hd19vLe/lKaOHiZFBaPRXPja0lf7exwd2/BPvB+/
      6JsuuJ3dauXI/j302MKJS8rA3fnBWX0Crs4ujL97hd733sc3JZnIJx7Hf/Ys1H5+BCxahC4l
      mb4DB+jd/CEeqxW/9PRBz/bOa6zn7wVH8PXx4b55C2k0GSlsamBmXhFRHZ30pCQz9XN3o73I
      ZEevE0B9fT1Wq5WwsDAiIiJISUmRBCBGRV9ePu9u28o+nYZZMXGsiIunorYKt9vN9DlXMXnq
      NAKXLEbl40PInn1kNrbgSZ/GwS4jRxrrCdTpiAvyfjnl81EUD7bmDZgrf0aP3cL7luvItc6i
      3B5LhTOZKFUdQWFlaDOCCbvjUdS6s+/yVSoVHo+bxtoaYuIT0fleupbitrfSW/LdU52Tv0Dj
      5/0QTrU2BF3IAuwd27G3f0Rg5nos23JQ+fvjl3Hpp1MpioK15T36qn+JzR2BOv4JUqYvvWT8
      lr37sP/5rwRrdfQmJ9HY1kKAXo/eMPg2cd+0TGw5NRB8AsVtQxdyFQDNxl7+vvUov37rEEer
      Wjlc0sT+Y/XERRiIDT+3tmVt+j9szW/gF3MbAQn3XrA8p8NBXs5eHDY785YsIzh2wcd9ArZ6
      3BW+tL/wIq6GBkLuvouwB+4/p81fGxuL/tqVuLu7MX+0jb6cXLRJk7ya/+F0u9lYcoKt5SWk
      hIXzP/MWUdzaxMG6GjKKTnBVfTMxd99Fo6kTHx8tYREXPrbXCcDX15empia6uro4duwYy5cv
      lwQgRpTLaKTtj3/i7aZ6jk9OZF5UNKmWPprragiPimbu4qWEnBrJolKp8MtIxzctDeeBHBKL
      jjMjawYN+gBy6moobW8jMSQUwwAuuOfjdLtpNFagrvsZjo6PKHMkscfzWVLiruKWzBnMrm+i
      r6Ccg7oFdGsDmKQvx9G+BTQG8P//7Z13eBXnmeh/M6dXHfUOEqI30bFxAYyJuxNS7Hhv6rZk
      ncTZbIrtrO+unWSzN/fJc7PJ5m7cdm82PcQOdlzAxtjY9CKhAkhIAvV6dHqfM+X+cYRoAiQB
      NoT5Pc95zsyc73vnm5nvvO/X5n2nYTitfjtdbrpOtGXm0IourMxPrkzRlBiu2f+K0X5u61nV
      NAaiETpH3vh0nGfoSzRlYfasRPK9Qzq1G9XrQGrsxHXnHRccm45Fwgw3/RgCL2JwLydr9vfI
      yi2/6BxG5M2t+J97HsvsWZR+9asUV1Ti93pHrz0nL39S8yCCIGCdvoxE4wEU9tEVm85/vtHB
      M6/UcrzfT1axgdI5FhzZBrzeBG8f6KDuRD9DSghvMkI4lcQS2UG65znMueuwV3zpvOVIpyVq
      9+wgFomwaOUqPCPxoY3OOSDYSQ1uIrptPwZTRWZp77Kl55UlmEzYly3FPGsmyUN1RF7fjOzz
      YZ0z+6K9sHAyyX/V7OPo0AA3V0zjwYWLOdTbxXsnWqlqbuVWGQoe+xa28vJx+Qea8JvAoVCI
      2tpa1q5dO5Fs40J/E1jndDRVJfbuewxt3MjmZdV0lRSz0GqnZMSn/awF1ZRMmYocayEdbsSU
      tQSjvXI0v+zzMfzjnyC1tOJYfzsd69fxWlszcUliRflU7pwxG/s4Gi+qpnHMO0TDQA+G4Lvc
      ZNmOxWghmP1JzLnrcIgW9h3tZW9DB6GmY8xRQtz2xYdwlOXS2neY4vBvyNWOM6iW0ut6iIqi
      aiqzczCIIkfrahno6eLWO+7BaBr7LVNVjhBp+haq5MU16/v2uVUAACAASURBVF8wOjPzCIl0
      mu5QgK5gkI6An+5QgORp7tRL3FksKy1jYVEJrjHegcj0KB5HCQ2QeMmJ5yNfxnnrrec+B02j
      s+0o6uDTeMxtWArvxz7lCxddfaOpKuE/biL0wotYFy8m/2tfHVVwGdccdfSNGPEFy1ZgMk28
      IalqGkcP1rNx11bqh8oRRMguMVJaaWd6QR6z8wuwmkx4o1GOt4bYfqCLpCSTXWZi+bR+HvC8
      Tke6jNeT95FlzyLXbifX5iDHbifXnvl2m8zU7d1F0O9j0cobySs8ZazTPT34fvYMWvYRzLck
      sJd/EVvJh8ddfk2SCP7hBSKvvY4hy032X/3VeVdEnfD7+HVdDZIi88CCRSwoKqGut5vNzYep
      PNHJ3eWVuO+8YzT9xfwDwSQMQDqd5qmnnuLuu+/G4XCwYMGCy9Zq1w2AzknS/f34n/9PAseP
      88r6NfhyspkjK5SoKtl5+cxbtASj3Eqi/wXkcO1oPoNjJpb8u7DkrkEwWNEUheCvf0Pk9c1Y
      Zs/G+Xdf4J3AMLs627EYjXxo+ixumFKBeFYLSdU0uoMB6vr7aBjog7SfOx3vUGXuwuheRNTz
      BWpOSOw90sORjiE0DYrENFmlhbT0+NE0yHZZWTGnlCUzi5nrOYLS/zxpOcHOxHKatJXMKyyl
      yuFkoK6WmfMWMnX6uS6DVTlKpPkx5EQXydJvMqBV0BHw0xUMMBSLomoaAlDodFGZk0upO4uy
      LA/tfh8HervoC4cRgOm5+SwrK2duQSFmwykfSKrkI9z8GEq4B3n/bAr/4UdnnD8SCtHSsJt8
      4fc4zUPYyv8KW/HHzvvcZEXhhH+Yo4P9+EJB3IfqKTOamf+Zz+AaYyy6u/0ExxrrsNkdVK+4
      4QwfSecjnExybHiIurYB9tX14x1KYDQJ3FdVy6wKK4XzH2GqJxuDKCKn06RSSVRFRdNUvIEI
      v3nrMAfbw3iscTbMbUMpWM1ANEUMjQQCCQG00+qDCLhUlek5eSybOZupnmxEIPzKq4ReeBHR
      aiH7s59FLdhKOrgf+9SHLziPMBaptjb8Tz9LuqcH+02ryP7MpzFkZRGXJE74fbT4vNT0dpNj
      s/PpxcvItzto7DjBa+2tlMeTfHReNfZpZwabuZgDQpiEAUgmk7z77ruj+7fffvtlU9q6AdDR
      VJXwy38i9MdNBK0W/nTHWuIOBwvSMgWiyPTZcyjKHiLZ/3uSkQ7a/PnUD01jKD2XQtMRproH
      qMj2UeSWsOStw1JwD0Z7JbE9e/E//QyCxULulx8mPK2SPzUdps03TIk7i/vnzKcyO4fBaISD
      PV00DPQTTCYwiQZmWtpZY9lGLG7k0PASar2Lae0NIGgaJVKYJW5YvbqaqhULEe12gtEkB5v7
      qG3tp+ZYP0lJxmwyMK/MwIKsnSwq7CBtsrMltoZ+pRC7qlFhtTJ7+gwC8RgpWUYURMwGlWXy
      L1Bjx3gxejft6SkACIBRECj3ZFOVk8u0nFzsJjMmgwFRENFkgSyHBYNBZDAaob6/l0N9vfgT
      cUyigXmFRSwrLWdaTi4GUUSV/ISbH0UJ9+Cc9gSWkptQFIWO1mP0nThIlec1rKYEzqpvYs4Z
      w5OponDc5+XwYD/N3kHiaRlF0zipWARAFCDX7qDU7SHLasNhNuOyWHCaLSixKB2HGzGjMW/x
      0nPCcaYVhfaAj5ZhL22+YVra/fi60yQjKrluGxtuncOaxVMxeH9FcuAFZPtf41MqCfp9xCIR
      zlZxVmMAs7iH3zQupSOYQ6FT4NapIoXOkYasICCJIimjkaTBQNpsJmax0B0KomoaJtHAlHSa
      wtp6qkwW5nzxCxnPpWqaaNu/jKwk+gaWvNsmVvcVhYEXXqS55iADM6oYmDOLgWgmbK5JNLCs
      rJw7ZszGkk5zeOubbLYaKcvN4xNzF2A+z0Rvy9GjHDlylDnLbyaR1nBYzZQXuLFZMr3NCRsA
      WZZ5/vnn0TSNoqIi7r//ft0A6FwWpPZ2fM88R7qjA//M6WxashDFYmZxWqbc42b6lBje/l00
      dko0DJbSPFxESjEhiGBziCTjKqqSkWU1SlR6fFR4fEwvy2XmjBUUmUrx/eRnpLt7yHrgE2Rt
      +AiNA338qekIkVSSbJsdfyKOURSZnptHdX4W1uFt1Bzt4GDfVDqCeQiaxpRUkEWJAW6aVcSU
      227CtvD8r/+nZYWmzmH2He3h4LF+BvxRAMrcfhYX95By5zFom0ZKE0EQEMkoTJD5qHMz08w9
      vBK7gzapCoMoYBQENAVScZVkUiWVUEkmTn1LSRVNA7PJwNyp+cwoy2H21DzmVuQzEAtT19/L
      4cF+YpKE02xhQVExy0vLKbZDqOYRNEMQ+7RHOdSQQE20Mj37TcxmI86ZT2FyZfzaq5rGYDRC
      XzhEq8/LMe8Q8ZPhLjUNcziBGk5jzi3GZjNgMouYLCKCIZMvpShj3itB0zAjkONy4bJacVks
      RFIpOgJ+UrJMZFjB1yWRimnkZdn56C2zWDkjl3gkSGDYSzgwzDTnbzGIKVr9D+DIKcWTk4vN
      4UAUDYiiiKAEUHq+g9ksYpn2r+w7ofLzzfUEo0lWLyzn8/csIds1tm+zpCRR/+KLtAz201dW
      gt+ZUboOs5mqnFwWFpVQ4LCSbPsOrnQLiaK/47g8i7gkoWoa+U4Xxa4sCpwuzCOeaE+28I/7
      fZzwD48qfLOqUdTXT5k/yMKPf5wpFZUYRJFkTy+HfvVbtsyYgSaYubViJomkQjCSIJKQCEaS
      BKJJonGJUCxJLHluGFJBgFy3ncpiz8QNQEtLC93d3fh8PiRJ4p577iH7MqxnBd0AXK+oqRSh
      P7xA5PXNGDweBu+9i00mAYMssyCZJiXF8SVC1PdY8MYzqzisNhFPrpH5VQUsn1lKVX4eQ9EI
      J/r9tPUGON7rJxCQiMeUUaNgtwjMKPSQ13iQqUk/M+dWMvMLn0OxWdnZ0U5POMj0nDzyTS7q
      WobYdaiRdq+GoGlMTQVYFOtnmRih7KbluO68A2Ne3gWvS5JlBqNhBiNhBiJh+sIher1hAsNp
      At40kZCCpoHJJFDuEXAWWMidko3VbKQi/BIuyUvAsIqAsII+X4Rub4gBf5R0+sy/rMtupjjX
      RUG2g6JsB1kuK52DQZo6h+n1RkDL/OnLC7KYMzWPqrJsRLvKkBTm6NAgsqpS4HAy09vDPPer
      uF1RhmLzKXAcwWjNxzjtKXqTVrpCAToDAXrCQRLpNJqmIcU1UnGVVFQlFZYhJBFl7LkMs8lA
      rttGWkijGhRMFhGjWcBkEUa3rSZwqCqSAJrZgsVkpqc7Rl97HCmhkWuDG6ucVJe7iIQCqCPG
      xGqzkZ2XT362hMn7fdTeHDyrfoix8NQy2TPmUmb/AKMjE54znkzz+7cP89reVowGkYfWzee2
      ZRVIqkJalkkpMsl0muGduwi0tSJZLGhLFzNsEBmIRkirGvJpPR6LILPB+RpTjL28k7qDHuYj
      IBBPZwyBooHH7kAZmbQHMBsMVGZnenO5FieiJNC28U/0dPTjc+fhL5uGP5wgHE8xlsYWRQG3
      3UKW04LHYcXlsOBxWPC4bER9g6SjPm5ZfSuRRJr2jgba22vpiWRP3AAoisKzzz5LW1sblZWV
      fOlL5585nyi6Abg+0FSVdHcPUmcnqaYmkg2NKH4/jjWrOb72VjYeaSU4LIFfxhfWUDUQDZCV
      bSQ3z8yiGUUsqihlWm7eeVe6aJqGLx6jLxTkeF+Ath4fXf1elLCP/rAbVct0951WIzPK86gq
      ycZiNrL7cDft/UEENKYYgswPelmYHCQ3y451zWqsq1ahmoyZP7Kqomhq5ltVUTSNSDLJQCRE
      fySMPx4bHX5wW6wUubMocrkzH3cWmiJwqKWfXTU7aexKE5WsGEfWqsuKOnotRoNIXpad0jwX
      eR47xbkuinIcFGY7KcpxYree30VxKJ6kuWuY5i4vTZ3DtPUESKczsrMcFqaVZZM0JUmZJEwO
      sIhpPuF6lTLTAL1yIW9KGxhKiiiyRiqWUfTJqJpR+jEVTT1VxtJ8F9OKs6ks9lBR5KEg20Eg
      ksQfTuALx/GHE/gjCYZDidFjaVk9p8w2IzgtAjluG8MxDV84Qb5DYEWpSIVHQBMEEqJA1GDA
      OuJOw263IwAGUcQaeImy1Jt4e24mdcNnkVUVVU0xLfw0cuwYtYZPEbfMJC0rpBSZlCwjyTK+
      UJLjzTGCPhmbQ2TqDCue3HPvrdVowm42YzeZsZvNOMxmbCYzNrOZUCrFcd8wvUEvH3W+ylRT
      H4fNDzFsqqZpaIDwSExgVdaQ4ipySkOOa8gpDZtmxR86s9VuNIjkO0zk9HdidJnxVRST73aw
      fs5sPE4rWU4rbrsFp82MKApomgqajKZKoEloqkxgqIfmhhpmzp2FXatBGn4LRDPWwg9P3ABE
      IhFeeOEFbr/9dson6ciqqb6GrqEQa9asxmI6pfB1A/DniRKOILW1kmptI9XahnTiBNrISh7s
      DuSqGbTPWkKD5mDX0S7SKQ0BjRJ3kKxcM8acIqqriplTVMT0vAIskwzkoqgqgagXS3QvbW0H
      ON4XpTOUQ3swj96wB00TqMrxsqykE2u+h1ZxEcokYiadruyL3VkUubIuuNpIUyXivb+j4fAO
      mry5yKpI+bT1lJXNoyjHQY7LdsGXmCaCJCsc7/dxrMvH0Q4vR7u8RCIZhSMIYHWJuLNUprqH
      6YwWEIsKpGIq6eQpNeFUUkzNsTNzwXTKCz1ML8umLM89qTKGYykCkQS+cMYoDIfj+EYMRL/X
      j0FJsaTMQmmhlZAAYVEkIgjIaKNG+GwEVDbYN+IUImyMf4qkZuVD1teoMJ7gvfA6OuMVmKU0
      xnQaUzqNSUpjkuXMdzpNeCDJexQzYHZR5FTYEGqicmoJxQ8+iCM7M7kspRVSaRlZUUlK8sh+
      5pOWFaLJFMe9/WQFNpFOy7wbWUYkbkZKqKSTKsppIzOioJJri1HoDFPoCJPviOJyqDjtKmW5
      dgqcVlJHGwm5raRtJjwWEzYjoMmgptFGFD2alDl2IUQL1oJ7sBZ/AtE0iSEggIGBAd577z1q
      amp44okncJ0nxulYRIa72bq3hTXLqthV38F9d6wZ/U03ANcWqqqRSsskUjKReIp4SiaWlEhK
      MpFQjHBHF8G2dqLeAAnRSEI0ETeYSAmZ7aRoJGE0j3ZpHaYU8wr6WFDYiyc/G3PRbeTkzKUy
      Jw/TFagX6chRUkMZ/ziptIqiGbAm0vT2LCW84gFMDgcGQcQgioiCgEHMbBtP3x/53TCy7zBb
      xrW0dCzaj7yNMvwCRVW34Sz7+GW+2rHRNI2+QJimzmGaOjO9hD5vFE0FUVMpTEcpkiKUSmGm
      kKBqRTVlq5aNurS4kiiKQiIWxe50XXSloaKqaGgoqoamaajJHpLNXyXaZQHsOMuHSL5tQ647
      azmsICDa7RhyczBkZ2NwuxE9HrTsHN62lPDCzhbktILbaUWSTyn4iWpNAY1sW4xCR2RE0Uco
      cQXJtUcpdEYwiioggmhCEEyZb9ECgpFYWiUsqdjMdnKd2SAYEUTzad+ntgXRBIIpc1w0IQhG
      EK34h/10tXcyZ8WDuHNOLWOdcPMmmUzy4osvEo/HufHGGyfsCnqgv5/ZcxeQU1SAcKgZyCwt
      BUilUmiaRmqkm2SxWPTt82xLisJ7fd0klIzFFxA4OQo53m1RAEUGgyZCWgMFjIIRLa2CAooq
      EomniCXTyCpEk2kSKZlYQiKeShNLplHVi/wTBA+GXA+iUUA0CBhMIBoy2xYj2E0Cq1x1LMzp
      oDIniupaRcLxl3iyqojFYrisdpLxON5IZLShEbls2x5cBV/AkPM/EPo2Yx/sBfMN5K2ZwbTc
      3LHz2p1jHne4XKBBcHgYZZLl0axTaA+uw5hYQLiv7wpc79jbQjLGyukFrJxeQCQSIf36Frr3
      1lIYD2HRVCwzZ5BasICsW25BtNvxRyK4IpH3pWyRaAxt5H2DieXNI+3egLN8IxBFTa7EUD4T
      0zw3UUHAVVKMITubuMGAe2QOMxKJYDtNzh0uF8tnF7FlfxuJNJiMBjRVxmGzYDYaUGQJl8OO
      2SQiJRM47FacdhuaKmMxGXDYbYiagslkwCkOoMoJEIxYbS4kSQGDBYvFgZRWUUULFqt9zP+8
      22JBCoewmcxgs52RJjlOfSFkpYmkoad7gALVdOr4RHsAkiSRSCRwOp3U19ezcOFCjBPoknc2
      1+Enl8WzSnj5lc18+P5T62X1HsD4iUsSv66vIZxKoiiZsWhZPflRzln6NhbRgEJnQ/KCaUQD
      iEYBgxEMRgHBIGAwCogj+6Ih81tGwZ86dvrvF5SPwgOed5hVMn+0W3o9M9DTTVZOzvsWrH4s
      ZK8X39PPYK6sxLlmNaaysotnugrRNJV4x08QTLnYyz79QRfnAyfgG8Zqs51RtyZkAFKpFHv2
      7OHgwYM0NDTw4IMPctddd03oRTA1HePnv/oD2W4bFXNXsnhOxehvugG4fKiaiqJqyKqCPDJJ
      KavKyLHMtpRIcvhPezCgYhc07KKK1SRitJqwGEUMZhGDwYBmsaBYLchmM4rFgmKzZbYNImlV
      QUAYHRoxnjYsYjxtyMQgCBgNBkRBOG86HR2d95cJGYC6ujqeffZZ/v7v/54tW7bwyCOPTOqk
      ipxGklVs1jNXcOgGQEdHR+f9Y8JDQMPDw7z77rvs3buX8vJyHn744QkNAV0I3QDo6OjovH9M
      ahXQSaLRKHa7XfcFpKOjo3MNckkG4HIjy/JVEb9VR0dH53rgqpp5u1Tlr2nauFa/XGkZ6hgv
      p1yLMvR7cXllXA1l0GVcfWX4IPXW5Rm8v4xcyhCQMuIX5IOWoarqJQ9lXQ0y9HtxeWVcDWXQ
      ZVx9Zfgg9dZV1QPQ0dHR0Xn/uKrmAHR0dHR03j+umR5AMhZmy+uv0Xy86xKkaDQ11hFJXsRh
      0gUIB7xsfWMz+2sbJpVfTsXZ+d52trzxFsFIfNLlADhcd5BQ/Fx/3+PBP9jLjh072LlrN/Ik
      mwCRoI8tr7/GocZjk8qvygl27NjBjh072LW/9uIZxiCdirN921a279iDfDG3FOeTkYyxbesb
      7JvkMx3s7aCrzwtA2D/Ea6+8Mro/GRmaqlBXWzOh56LIEjWHMuXXFJn9e3ay5c1tROOpScmI
      R0Ns3/YWW7dtJz6GT/nxyDhJzd7dpCcwTH76vejtOsGOHTvYfaBu/ALOkpGKR3jrjS3sOnBo
      3PlPv46B7o7Renq8s2fcMmLhIEeOtQEQjwTZ+sYW9hyoYyK19HQZsXCAN7a8TkPT8XHnP1tf
      dbY28drmN4iM1ItrxgC8uWUzK29ZS+O+d4lPpDadRn3NHmpr9jMcHv+f4mxOtHVw4y1rifU1
      0xucuBwlLTN9zkJuXbWEbW+9PelyDHQ0s33HbvxRaVL5G2rrmFW9mMWLFjG5kUeN11/fwq23
      fYhpU4omJUE0Wlm6dAmLF83neGvbpGTsfWcbFQuWUZ5l4EBj66RkbHtrK9XLb0ILdtHcOTSh
      vIM9bRzYv5+m4xnF8PqWraxdv553t21lvLX0bBl73t3O/j0HSE2gmm/f9iYHazNKsr+vk9zS
      Km5aNpu33tkzKRlpSWLhshtYOqeMt3ccnJQMgOZDe9i15xDSOLXe2ffiUMMRFi9dyqJ543c+
      d7aMLa+9zpIbb2X+zGkXyTn2deQXl7JkyRJyrCpDgfE12lQpytbtO2iozyjebW9tY9mq1Yjx
      flq7/JOSsXXrVm5avY6upgMMhhLjknG6vuoaHOa9g02svWk5m9/YClxDBgCjg2yXnbmzpjIY
      GN/Fn0310lXMm1F58YQXYNHy5UR9fXQGFQrcE/f6aHG6GWhv5re/3cjchdWTKoOmSLyzp5G1
      t4wdPHo8pNU0h3bvYF9tI5NafKUm6O8bZtvWzdQ2Nk+yFAJ2u4OWhhqW37x6UhJmzJ7B65s2
      8caOfVRNHTvw9cUQBfAHAmRleeju7Z9Q3sKy6dx288qRPRWn243daqUiz01i7MBXF5EBq9au
      o7Ks8AI5zmXdHfdSmJOJp1tSXsWUwiy2bt3O3PmzJyUjKyefY/X72PjyW1RXz5mUDCkWorHd
      x7K541e8Z98LORVn5/Z3aGwefwPhbBlDQ/3sfm8bO/bWjrv1ffp1GIwmHA47ja29rKieOa78
      otnJR+6/D9uIu/sZlUX8cdMm9te3U1ronpQMQVEJBPx43C76+8fXwzxdX9mkABWzZmN353BS
      dV0zBuCkF8tkLIHJ9MG9LNZ2tIadh1r41EOfxCRObtlq9bIbuPeeu2hsqJ9U/qOHDoBBpL6x
      mfr6yclYf89HuOPOuzDH++j2X9gh3NiIVFTN5L777ic4OMA4dd05aGqapi4/c6ZOTOGdpO5I
      Kw/9xUM8cP966g5Prgew7kN3EQsM4Q1GcNgm5t32TITRJYFxSeEifvCuGHIywq9+uZGb19/L
      zKmT650BrLx5LXfdfjP1NeMfOjmdA/t2IBiNNLW1UV93ZFIyPvKxB7nz7nvoO3aExCRXW+aX
      VXDvvfeRLQQZjk9u+LentZ7iGdWTfqYt7X38xScfYP2qRbR0jH8Y6XTuvO9ehvp6iMSiWG32
      ceU5XV85bGaSycyohZQeWTX05JNPPjmp0rzPxPy97G9opmMgxC0rFzGZ59BwcC81dQ30e30U
      FJTgtI8dTepCvLzpJdwuJ22tLRSVT8M6QWM02Huct97bi394CKMjmxmVUyZchoKSKSyYNxej
      lqBsxmKyHeePCHU+3t26mZYTnbT3DLFyxdKJGzPBSPuxek509xKIJqieP3dSz+TogV3kVVVT
      lDu+VtHZxINeahqb6DjRQeXMORTkTFxOf+dxugeG6eru47Z1azBPILBJz4kWdu3dT1tnF25X
      DunQAM0nOgklZBbNG1/r+2wZx5sP0XD4KP5AgKKyynHUMZXtb27hSPMxAsEYyfAgvf4oweFB
      ZEwU5I0nZOuZMpDi7KupY2hogOyCEqaUjseQnCnj1vV3sWD2dJIBP4tWrcI0jtt69r04uHsb
      HV29DEVSLK2eN646drYMIRWgsaWT7n4/y5cswnDRun7mdVROr2LrW+/wodvXYhhndzkRGmbr
      2+9yrPUYqmDBJko0tXXQ0dnJnAWLyHJcvKFxtgwpHsIXCNLni7P25hWM5y97ur4qn1VN/c6t
      dHd14CqYSkV58bW1CigRj2G22sfxAK9uZDmNqoLZPHHFfTlJJZOYLBbES3gBLx6LYbXbL0nG
      pZKWJBANmIyT7xnG4zEsl6luxWIx7HbH5IbWriJOxukwmT7AeqppJFMpLBbrJd3PRCKO2WL9
      QL3OSlIKg8E0+ehumkYsHr+kuqWqCsmkhN2eCXx/TRkAHR0dHZ3LxzUzB6Cjo6Ojc3nRDYCO
      jo7OdYpuAHR0dHSuU3QDoKOjo3OdohsAHR0dnesU3QDo6OjoXKfoBkBHR0fnOkU3ADo6OjrX
      KboB0NHR0blO0Q2Ajo6OznXKeWMCtzYdIRw/00tkQVEZ5aWT89o4KrdxPwlLAQtnVpxx/K1X
      X+TtnQe46xOfIys9iKVoJrMqivH29ZA2OSjJP79Dqxf/uJGPffSBSyrX6bQ07CNlK2TBjIqL
      pr1SjOe6dXR0dC6F8/YAjjUfpr6+nl8891M2vfom9fX19A6e3wf10bpdvLHr4m5j+zuP09k/
      cMaxSH8LG7cc5J+/+z1WLZ5JT9sR+geDAAz2nKCz78JBOvbu2TXm8Zd+/190DE886tZA1wk6
      +gYunvAKMp7r1tHR0bkUztsDuHfDgwD8NhWgeMndrFl5MiiExqF9uznW3sOCJcuZN3MaoYCX
      mppaemI2cswyxWUVlBTmcLjuEL0DQ+QWlbN8yYIxXbmmoiF2796Lx5NFQ10tU6adGXChrGom
      snjS97VKQ81Beof8lJWXUlhcTkGuBxAY6OnkQE0tnoIp3HLjUnq6TlBTewjFXYU3z8bMOdXY
      TQo7du5C0UTmVy+mOD/nvDcmGQux+bVXEMxO1q5djcUIjQ1NLFg4bzTN0aYm5s45FSxDUxVq
      DuwjEEmycNESCvM8dLQdo+V4OyaLkxtvuhGryUDA249qcmCQExzr7Gfp/Bl0DwYpK8zmwIFa
      Fq1cdcZ1y6k427a9TSytsWbtOnLc9nNkrFy66PxPWUdHR2cMJjwHsOm//51N22uorJjCz//v
      D9m6u55UIs7Q4DCBYS89PT1EogmONR5g16EjuLOyePulX/Lff3xzTHmqLNE74CUSDdLT00vo
      rDi5DXveYU/DUQB++r0nePntfTgddl76zX+x73AmEpW3q41nf/FbPLkFvPK7p9l7uJ1wMEA4
      GGGgr5ee7h4kWeF7TzyGN5xE1NJs2vTyBa/zlU1/wuL0MNRxmH/8zg8Bkd//v3/nyEjIwMhg
      Oz997jen5dD41ye+xe5DLYhqim3v7URN+vnVC69gtjnwdh3l8Sf/NwCN+7az8YXf8w//8G06
      e/pJ+Xt57r9/ztf/7ivUNjajaqdft8qTj32NqGah0G3hm1/7JmlVO0eGjo6OzkQ5bw9gbFTe
      3NnIT599DoMA1bMr+OZTP2P9j77DLTcvpyXkYsN9J0P7TaFyxnw6Oru58671/HLrYfjoh86R
      aPPkc89tNxMQWtmwYQMAbTvPPbMU7uWIz8TPfvQVALRwL6GR3/KnTOefvv1Y5niwC69vkBtW
      38Ds2ZWsuet+5pQ4AQjG40yfMYPF82ax7iIOtT/xqc9w2+qVsPoWHnv4bwlKKn/xyY/x+z+8
      zFPf+Bu2vbmZD93z4dH0oZ4mfMZCvv3Fz50h5/FvfJWOjg7ycrJ5Y+/To8e3vVPDc8/8B9lO
      C7H+FnZs28F/PP+fLJh+ZljDQMcRtIIFfOye9Zl703iQ2iM958jQ0dHRmSgTMwBqCrM5ezQs
      mtWTj1mKjJl0/9uv8vOXtnHTDSsxqzFU9dLCDkixjMemcQAABDdJREFUKIXnjZM6Ptnffuxx
      frfxBZ79cRsLblrPlz93oYnjUzJzc2wkJJW5K25j6JnPE0h8ju276/j+T744msY7OExZ8ZnR
      vYZ7W3nsf/6AVbfcSlaWk0TiVDi6z/zN589Q3Lfdd/85yh8g6A/RUr+PJ58cBiAaCVFt1EiN
      IUNHR0dnIkzMAIhWFGkIf0wix2Gmr+0wQvZJpSUgpVKjSd964w3+5/d/RLHTSLC/hd1tr15S
      Qe25JbTW7ccb+Ax5WTbajp8gf9HFAryfLFOmB+DOL+WrX38UUPn65/+W6KcfwGnQkGUFo/Hs
      W5GxcqmYn6buFPkOIwiw4e51PPfjH5M1bRn202LclVVVceT5l1C0T2IQMuajdte7fOSzX+Te
      1ctQZInNb20/JV0402idvX+S/NIS8gqm8k9PPokIKHKKlCxy8Pj58+jo6OiMh3EZAEE8GWpP
      4G/++rN8/ZGvsKR6Lgdr6/nH7/4vAObOXcRPnnkUX0c91cvXsPKmG/nOo49SWeYhEAoi2s5t
      3Y4iigiCeP59QDS7+NZXPs93//nbWCwW7GaN/PPqv4zyvuXGm/nBdx9n3vRyPvbZL/GLHz6B
      KX8qFi2FUDoNuwG6juzj8X/fyK+f/j+juTVN5eXf/Yqje9+hpekon/nSNzCO9HrW3fsR/u3u
      u/nu038444xWTykfXlvNFx9+hMqSbOxFs/j4mhU8/tS/cbxuAV1d3USS6Yvd6nNwFk7j1oW5
      PPzlr1E1pZD2jk6++cQPJixHR0dH52wmFRIylYwzOOSjuKTkjDiscloiFImRne1BFARCAT+K
      YCTHM7mA32cTT8Sx2zIrY57/4ZPMuf2z3HSRXkAiHkOSVbLcLgCCfh+yJpKXm1lf/+N/+SdW
      bfhLls+tGM2jqRqaphKORHC63BhPi+EpJ0J8+Zvf5T9++sMxZ9ClVJKkJON2ZXodyXiMYDRO
      QX7+uII4nw8pmSCeSpPldl/zsWZ1dHSuDq6hmMAq33/8UXySipSMkVM+l3969JHR+YjJUl93
      iOpFi8eVtmbHVp795UYe+uuvsmbF/Es7sY6Ojs4HzDVkAD54NFVFBQyi7kFDR0fn2kc3ADo6
      OjrXKXpTVkdHR+c6RTcAOjo6OtcpugHQ0dHRuU7RDYCOjo7OdYpuAHR0dHSuU3QDoKOjo3Od
      ohsAHR0dnesU3QDo6OjoXKfoBkBHR0fnOkU3ADo6OjrXKboB0NHR0blO0Q2Ajo6OznWKbgB0
      dHR0rlP+7A2AqqpXVL4syxdPdBXLV1X1it6jK13+9+Mc17r89+Mc17r8K32OK/0/g8mV/8/e
      AFxpb9eKolzT8q90xbzS5X8/znGty38/znGty7/S53g/DMBkyj+xoPDXIP/4/Ns0dfo+6GLo
      6OjoXHVcdT2A/bt3kJQzrfbDDQ0XTHvk8NH3o0g6Ojo6f5b8fwiZhUPM3IzJAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='384' name='SelectedAirport' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='318' name='TotalFlightsByCarrier' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAE+CAYAAACEB8e6AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3df3BT54Hv/3e/CAuZYIFzReQExzE3SnAdTO1sfBOuv3Eomdpdf68zkC5L
      MjelXbaX3JKl7CwQwroNNJQ4hA4st+zgad2MSy5lvS1O2PEde1vikK9KqXqDLiSqSZQvjoHE
      CiqGI0BCRhm+f0g2/iGDTfz7fF4zMLbODz1Hkp/POc/znEdfunbt2jVERMR0/q/RLoCIiIwO
      BYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExK
      ASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNS
      AIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQU
      ACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkF
      gIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoB
      ICJiUgoAERGTUgCIiJiUAkBExKQUADKuhcPh0S6C3KKLFy9y8eLF0S6GqSkARERMSgEgImJS
      CgAREZNSAIiImJQCQETEpCyjXQCRL+qJDftGuwgi45KuAERETEoBICJiUgoAERGTUgCIiJiU
      AkDGgCh+z0EaDjUTHe2iiJiIAmAERduOsq+6mgZP203X9R/aT/WeBtqGqkaMBTlQvZNtO/fR
      MtZq2fBJflpdS13dMQWAyAhSAIygzy98SJPHw1snL9xkzTDv1Tficb9F8PMhevKONtweH37f
      ES4m2We47TgHD3oIxobo+QZjEkwHsKdoXLLICNLf20iypABgG8iqNsCwMXmonnvSDApyXZyd
      kc+s1N4LwzRs30WjYcfxSCEOfSpETEF/6mZhzWTpqjX9Lu4MnFExVFc5IjIoCoAJIBpqp/3y
      ZWIxmGKfiSPNOsg9TOr6afKkG6zWQ4z2YBvGpRhgwX5HBumpA/s4xaJhwp+DhRikpJGaMoUU
      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
      xhKdwM3HWpNuBcD5NhLvGjNS+l9NBkcBIBNH6l3McwIE+OP7/YwWj7Xxv73xXuLcL2eMWNEk
      oaMD6NlPf9e8HAACRw4T7Gez08f/d3wb1zwy1II3ZBQAMoGk8dCjLgA8v6pPWpmcPlSHD8BW
      SJ5qkiEUwnPQQ/uNBvJwmsa34mf59993R9ejaa7/hAsg4uGAJ0lwx05TV+sDoPDRL6sHZwgp
      AGRCyXzkazgBDDc/2n2wx3w/7cf3szlRkbhKv0afmSLk1oU/5le11byw8kUOePyEewVBLNTC
      vhc3401M+TB/TrcpuS3ZlC1wAuCpruRgS493jQNbN5N41/hqgd61oRGPUU0HLRNO+9E9vFAV
      n1wMu4uigllw4STuzu8GyCrj1Q3lt3S3qvQjdprqNZvxdLXt2MhyzeGOOyZz+bNT+PzXp4he
      sPJllub1/k6GIPvWVdCUGAzkKixi1lQ4ecTd9d0AZWtepdyld22wwv4DbNj2Fin27p0nHRhG
      RAEgE1Pw6H5+VNXY554we/4SKp5dqMp/WETxH67nX99opDXJqE6bM5en//Zvr8/Q2lssyP4d
      P6LR3+ddY9GaCkpV+d+SaMsBVlXWJ12mAJCJK9pOs+8jrtpmELt4nmmZc3BlqBIZCdFQO2fP
      GVyJxbBYpmC/fSbpaQObIa79dDMftV1lxrQY5yPTmJPXe/poGSoKABERk1InsIiISSkARERM
      SgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGT
      UgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSk
      FAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEp
      BYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExK
      ASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNS
      AIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGT+v8B8i9GGTQJ1gUA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='TotalFlightsByHour' width='384'>
      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
      aaNh93O5r/4PyHemhtrvJjgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
