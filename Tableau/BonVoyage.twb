<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='BonVoyage' path='/workbooks' revision='2.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Selected Airport' datatype='string' name='[Airport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tampa International Airport&quot;'>
        <calculation class='tableau' formula='&quot;Tampa International Airport&quot;' />
        <members>
          <member value='&quot;Aberdeen Regional Airport&quot;' />
          <member value='&quot;Abilene Regional Airport&quot;' />
          <member value='&quot;Abraham Lincoln Capital Airport&quot;' />
          <member value='&quot;Adak Airport&quot;' />
          <member value='&quot;Akron Canton Regional Airport&quot;' />
          <member value='&quot;Albany International Airport&quot;' />
          <member value='&quot;Albert J Ellis Airport&quot;' />
          <member value='&quot;Albuquerque International Sunport Airport&quot;' />
          <member value='&quot;Alexandria International Airport&quot;' />
          <member value='&quot;Alpena County Regional Airport&quot;' />
          <member value='&quot;Antonio B. Won Pat International Airport&quot;' />
          <member value='&quot;Appleton International Airport&quot;' />
          <member value='&quot;Arcata Airport&quot;' />
          <member value='&quot;Arnold Palmer Regional Airport&quot;' />
          <member value='&quot;Asheville Regional Airport&quot;' />
          <member value='&quot;Aspen-Pitkin Co/Sardy Field&quot;' />
          <member value='&quot;Atlantic City International Airport&quot;' />
          <member value='&quot;Augusta Regional At Bush Field&quot;' />
          <member value='&quot;Austin Bergstrom International Airport&quot;' />
          <member value='&quot;Austin Straubel International Airport&quot;' />
          <member value='&quot;Baltimore/Washington International Thurgood Marshall Airport&quot;' />
          <member value='&quot;Bangor International Airport&quot;' />
          <member value='&quot;Barkley Regional Airport&quot;' />
          <member value='&quot;Barnstable Municipal Boardman Polando Field&quot;' />
          <member value='&quot;Baton Rouge Metropolitan, Ryan Field&quot;' />
          <member value='&quot;Bellingham International Airport&quot;' />
          <member value='&quot;Bemidji Regional Airport&quot;' />
          <member value='&quot;Bert Mooney Airport&quot;' />
          <member value='&quot;Bethel Airport&quot;' />
          <member value='&quot;Bill &amp; Hillary Clinton National Airport/Adams Field&quot;' />
          <member value='&quot;Billings Logan International Airport&quot;' />
          <member value='&quot;Birmingham-Shuttlesworth International Airport&quot;' />
          <member value='&quot;Bishop International Airport&quot;' />
          <member value='&quot;Bismarck Municipal Airport&quot;' />
          <member value='&quot;Blue Grass Airport&quot;' />
          <member value='&quot;Bob Hope Airport&quot;' />
          <member value='&quot;Boise Air Terminal/Gowen field&quot;' />
          <member value='&quot;Bradley International Airport&quot;' />
          <member value='&quot;Brainerd Lakes Regional Airport&quot;' />
          <member value='&quot;Brownsville South Padre Island International Airport&quot;' />
          <member value='&quot;Brunswick Golden Isles Airport&quot;' />
          <member value='&quot;Buffalo Niagara International Airport&quot;' />
          <member value='&quot;Burlington International Airport&quot;' />
          <member value='&quot;Cape Girardeau Regional Airport&quot;' />
          <member value='&quot;Capital City Airport&quot;' />
          <member value='&quot;Casper-Natrona County International Airport&quot;' />
          <member value='&quot;Cedar City Regional Airport&quot;' />
          <member value='&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;' />
          <member value='&quot;Central Nebraska Regional Airport&quot;' />
          <member value='&quot;Central Wisconsin Airport&quot;' />
          <member value='&quot;Charles M. Schulz Sonoma County Airport&quot;' />
          <member value='&quot;Charleston Air Force Base-International Airport&quot;' />
          <member value='&quot;Charlotte County Airport&quot;' />
          <member value='&quot;Charlotte Douglas International Airport&quot;' />
          <member value='&quot;Charlottesville Albemarle Airport&quot;' />
          <member value='&quot;Cherry Capital Airport&quot;' />
          <member value='&quot;Chicago Midway International Airport&quot;' />
          <member value='&quot;Chicago O&apos;Hare International Airport&quot;' />
          <member value='&quot;Chippewa County International Airport&quot;' />
          <member value='&quot;Chippewa Valley Regional Airport&quot;' />
          <member value='&quot;Cincinnati Northern Kentucky International Airport&quot;' />
          <member value='&quot;City of Colorado Springs Municipal Airport&quot;' />
          <member value='&quot;Cleveland Hopkins International Airport&quot;' />
          <member value='&quot;Coastal Carolina Regional Airport&quot;' />
          <member value='&quot;Columbia Metropolitan Airport&quot;' />
          <member value='&quot;Columbia Regional Airport&quot;' />
          <member value='&quot;Columbus Metropolitan Airport&quot;' />
          <member value='&quot;Corpus Christi International Airport&quot;' />
          <member value='&quot;Cyril E. King Airport&quot;' />
          <member value='&quot;Dallas Fort Worth International Airport&quot;' />
          <member value='&quot;Dallas Love Field&quot;' />
          <member value='&quot;Dane County Regional Truax Field&quot;' />
          <member value='&quot;Daytona Beach International Airport&quot;' />
          <member value='&quot;Deadhorse Airport&quot;' />
          <member value='&quot;Delta County Airport&quot;' />
          <member value='&quot;Denver International Airport&quot;' />
          <member value='&quot;Des Moines International Airport&quot;' />
          <member value='&quot;Destin-Ft Walton Beach Airport&quot;' />
          <member value='&quot;Detroit Metropolitan Wayne County Airport&quot;' />
          <member value='&quot;Devils Lake Regional Airport&quot;' />
          <member value='&quot;Dillingham Airport&quot;' />
          <member value='&quot;Dothan Regional Airport&quot;' />
          <member value='&quot;Duluth International Airport&quot;' />
          <member value='&quot;Durango La Plata County Airport&quot;' />
          <member value='&quot;Eagle County Regional Airport&quot;' />
          <member value='&quot;East Texas Regional Airport&quot;' />
          <member value='&quot;Easterwood Field&quot;' />
          <member value='&quot;El Paso International Airport&quot;' />
          <member value='&quot;Elko Regional Airport&quot;' />
          <member value='&quot;Elmira Corning Regional Airport&quot;' />
          <member value='&quot;Eppley Airfield&quot;' />
          <member value='&quot;Erie International Tom Ridge Field&quot;' />
          <member value='&quot;Evansville Regional Airport&quot;' />
          <member value='&quot;Fairbanks International Airport&quot;' />
          <member value='&quot;Falls International Airport&quot;' />
          <member value='&quot;Fayetteville Regional Grannis Field&quot;' />
          <member value='&quot;Flagstaff Pulliam Airport&quot;' />
          <member value='&quot;Ford Airport&quot;' />
          <member value='&quot;Fort Collins Loveland Municipal Airport&quot;' />
          <member value='&quot;Fort Lauderdale Hollywood International Airport&quot;' />
          <member value='&quot;Fort Smith Regional Airport&quot;' />
          <member value='&quot;Fort Wayne International Airport&quot;' />
          <member value='&quot;Fresno Yosemite International Airport&quot;' />
          <member value='&quot;Friedman Memorial Airport&quot;' />
          <member value='&quot;Gainesville Regional Airport&quot;' />
          <member value='&quot;Gallatin Field&quot;' />
          <member value='&quot;Garden City Regional Airport&quot;' />
          <member value='&quot;General Edward Lawrence Logan International Airport&quot;' />
          <member value='&quot;General Mitchell International Airport&quot;' />
          <member value='&quot;General Wayne A. Downing Peoria International Airport&quot;' />
          <member value='&quot;George Bush Intercontinental Houston Airport&quot;' />
          <member value='&quot;Gerald R. Ford International Airport&quot;' />
          <member value='&quot;Gillette Campbell County Airport&quot;' />
          <member value='&quot;Glacier Park International Airport&quot;' />
          <member value='&quot;Golden Triangle Regional Airport&quot;' />
          <member value='&quot;Grand Forks International Airport&quot;' />
          <member value='&quot;Grand Junction Regional Airport&quot;' />
          <member value='&quot;Great Falls International Airport&quot;' />
          <member value='&quot;Greater Binghamton/Edwin A Link field&quot;' />
          <member value='&quot;Greater Rochester International Airport&quot;' />
          <member value='&quot;Greenville Spartanburg International Airport&quot;' />
          <member value='&quot;Gulfport Biloxi International Airport&quot;' />
          <member value='&quot;Gunnison Crested Butte Regional Airport&quot;' />
          <member value='&quot;Gustavus Airport&quot;' />
          <member value='&quot;Harrisburg International Airport&quot;' />
          <member value='&quot;Hartsfield Jackson Atlanta International Airport&quot;' />
          <member value='&quot;Hattiesburg Laurel Regional Airport&quot;' />
          <member value='&quot;Hays Regional Airport&quot;' />
          <member value='&quot;Hector International Airport&quot;' />
          <member value='&quot;Helena Regional Airport&quot;' />
          <member value='&quot;Henry E Rohlsen Airport&quot;' />
          <member value='&quot;Hilo International Airport&quot;' />
          <member value='&quot;Honolulu International Airport&quot;' />
          <member value='&quot;Houghton County Memorial Airport&quot;' />
          <member value='&quot;Huntsville International Carl T Jones Field&quot;' />
          <member value='&quot;Idaho Falls Regional Airport&quot;' />
          <member value='&quot;Indianapolis International Airport&quot;' />
          <member value='&quot;Ithaca Tompkins Regional Airport&quot;' />
          <member value='&quot;Jackson Hole Airport&quot;' />
          <member value='&quot;Jackson-Medgar Wiley Evers International Airport&quot;' />
          <member value='&quot;Jacksonville International Airport&quot;' />
          <member value='&quot;James M Cox Dayton International Airport&quot;' />
          <member value='&quot;Jamestown Regional Airport&quot;' />
          <member value='&quot;Joe Foss Field Airport&quot;' />
          <member value='&quot;John F Kennedy International Airport&quot;' />
          <member value='&quot;John Wayne Airport-Orange County Airport&quot;' />
          <member value='&quot;Joplin Regional Airport&quot;' />
          <member value='&quot;Joslin Field Magic Valley Regional Airport&quot;' />
          <member value='&quot;Juneau International Airport&quot;' />
          <member value='&quot;Kahului Airport&quot;' />
          <member value='&quot;Kalamazoo Battle Creek International Airport&quot;' />
          <member value='&quot;Kansas City International Airport&quot;' />
          <member value='&quot;Ketchikan International Airport&quot;' />
          <member value='&quot;Key Field&quot;' />
          <member value='&quot;Key West International Airport&quot;' />
          <member value='&quot;King Salmon Airport&quot;' />
          <member value='&quot;Kodiak Airport&quot;' />
          <member value='&quot;Kona International At Keahole Airport&quot;' />
          <member value='&quot;La Crosse Municipal Airport&quot;' />
          <member value='&quot;La Guardia Airport&quot;' />
          <member value='&quot;Lafayette Regional Airport&quot;' />
          <member value='&quot;Lake Charles Regional Airport&quot;' />
          <member value='&quot;Lambert St Louis International Airport&quot;' />
          <member value='&quot;Laramie Regional Airport&quot;' />
          <member value='&quot;Laredo International Airport&quot;' />
          <member value='&quot;Lawton Fort Sill Regional Airport&quot;' />
          <member value='&quot;Lea County Regional Airport&quot;' />
          <member value='&quot;Lehigh Valley International Airport&quot;' />
          <member value='&quot;Lewiston Nez Perce County Airport&quot;' />
          <member value='&quot;Lihue Airport&quot;' />
          <member value='&quot;Lincoln Airport&quot;' />
          <member value='&quot;Long Beach /Daugherty Field/ Airport&quot;' />
          <member value='&quot;Long Island Mac Arthur Airport&quot;' />
          <member value='&quot;Los Angeles International Airport&quot;' />
          <member value='&quot;Louis Armstrong New Orleans International Airport&quot;' />
          <member value='&quot;Louisville International Standiford Field&quot;' />
          <member value='&quot;Lovell Field&quot;' />
          <member value='&quot;Lubbock Preston Smith International Airport&quot;' />
          <member value='&quot;Luis Munoz Marin International Airport&quot;' />
          <member value='&quot;Mahlon Sweet Field&quot;' />
          <member value='&quot;Mammoth Yosemite Airport&quot;' />
          <member value='&quot;Manchester Airport&quot;' />
          <member value='&quot;Manhattan Regional Airport&quot;' />
          <member value='&quot;Martha&apos;s Vineyard Airport&quot;' />
          <member value='&quot;MBS International Airport&quot;' />
          <member value='&quot;Mc Allen Miller International Airport&quot;' />
          <member value='&quot;McCarran International Airport&quot;' />
          <member value='&quot;McGhee Tyson Airport&quot;' />
          <member value='&quot;Meadows Field&quot;' />
          <member value='&quot;Melbourne International Airport&quot;' />
          <member value='&quot;Memphis International Airport&quot;' />
          <member value='&quot;Mercedita Airport&quot;' />
          <member value='&quot;Merle K (Mudhole) Smith Airport&quot;' />
          <member value='&quot;Metropolitan Oakland International Airport&quot;' />
          <member value='&quot;Miami International Airport&quot;' />
          <member value='&quot;Midland International Airport&quot;' />
          <member value='&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;' />
          <member value='&quot;Minot International Airport&quot;' />
          <member value='&quot;Missoula International Airport&quot;' />
          <member value='&quot;Mobile Regional Airport&quot;' />
          <member value='&quot;Monroe Regional Airport&quot;' />
          <member value='&quot;Monterey Peninsula Airport&quot;' />
          <member value='&quot;Montgomery Regional (Dannelly Field) Airport&quot;' />
          <member value='&quot;Montrose Regional Airport&quot;' />
          <member value='&quot;Muskegon County Airport&quot;' />
          <member value='&quot;Myrtle Beach International Airport&quot;' />
          <member value='&quot;Nantucket Memorial Airport&quot;' />
          <member value='&quot;Nashville International Airport&quot;' />
          <member value='&quot;Newark Liberty International Airport&quot;' />
          <member value='&quot;Newport News Williamsburg International Airport&quot;' />
          <member value='&quot;Niagara Falls International Airport&quot;' />
          <member value='&quot;Nome Airport&quot;' />
          <member value='&quot;Norfolk International Airport&quot;' />
          <member value='&quot;Norman Y. Mineta San Jose International Airport&quot;' />
          <member value='&quot;North Central West Virginia Airport&quot;' />
          <member value='&quot;Northeast Florida Regional Airport&quot;' />
          <member value='&quot;Northwest Arkansas Regional Airport&quot;' />
          <member value='&quot;Northwest Florida Beaches International Airport&quot;' />
          <member value='&quot;Ontario International Airport&quot;' />
          <member value='&quot;Orlando International Airport&quot;' />
          <member value='&quot;Pago Pago International Airport&quot;' />
          <member value='&quot;Palm Beach International Airport&quot;' />
          <member value='&quot;Palm Springs International Airport&quot;' />
          <member value='&quot;Pellston Regional Airport of Emmet County Airport&quot;' />
          <member value='&quot;Pensacola Regional Airport&quot;' />
          <member value='&quot;Petersburg James A Johnson Airport&quot;' />
          <member value='&quot;Philadelphia International Airport&quot;' />
          <member value='&quot;Phoenix Sky Harbor International Airport&quot;' />
          <member value='&quot;Piedmont Triad International Airport&quot;' />
          <member value='&quot;Pittsburgh International Airport&quot;' />
          <member value='&quot;Plattsburgh International Airport&quot;' />
          <member value='&quot;Pocatello Regional Airport&quot;' />
          <member value='&quot;Port Columbus International Airport&quot;' />
          <member value='&quot;Portland International Airport&quot;' />
          <member value='&quot;Portland International Jetport Airport&quot;' />
          <member value='&quot;Pueblo Memorial Airport&quot;' />
          <member value='&quot;Quad City International Airport&quot;' />
          <member value='&quot;Quincy Regional Baldwin Field&quot;' />
          <member value='&quot;Rafael Hernandez Airport&quot;' />
          <member value='&quot;Raleigh Durham International Airport&quot;' />
          <member value='&quot;Ralph Wien Memorial Airport&quot;' />
          <member value='&quot;Range Regional Airport&quot;' />
          <member value='&quot;Rapid City Regional Airport&quot;' />
          <member value='&quot;Redding Municipal Airport&quot;' />
          <member value='&quot;Reno Tahoe International Airport&quot;' />
          <member value='&quot;Rhinelander Oneida County Airport&quot;' />
          <member value='&quot;Richmond International Airport&quot;' />
          <member value='&quot;Rick Husband Amarillo International Airport&quot;' />
          <member value='&quot;Roanoke–Blacksburg Regional Airport&quot;' />
          <member value='&quot;Robert Gray  Army Air Field Airport&quot;' />
          <member value='&quot;Roberts Field&quot;' />
          <member value='&quot;Rochester International Airport&quot;' />
          <member value='&quot;Rock Springs Sweetwater County Airport&quot;' />
          <member value='&quot;Rogue Valley International Medford Airport&quot;' />
          <member value='&quot;Ronald Reagan Washington National Airport&quot;' />
          <member value='&quot;Roswell International Air Center Airport&quot;' />
          <member value='&quot;Sacramento International Airport&quot;' />
          <member value='&quot;Salt Lake City International Airport&quot;' />
          <member value='&quot;San Angelo Regional Mathis Field&quot;' />
          <member value='&quot;San Antonio International Airport&quot;' />
          <member value='&quot;San Diego International Airport&quot;' />
          <member value='&quot;San Francisco International Airport&quot;' />
          <member value='&quot;San Luis County Regional Airport&quot;' />
          <member value='&quot;Santa Barbara Municipal Airport&quot;' />
          <member value='&quot;Santa Fe Municipal Airport&quot;' />
          <member value='&quot;Sarasota Bradenton International Airport&quot;' />
          <member value='&quot;Savannah Hilton Head International Airport&quot;' />
          <member value='&quot;Sawyer International Airport&quot;' />
          <member value='&quot;Seattle Tacoma International Airport&quot;' />
          <member value='&quot;Sheppard Air Force Base-Wichita Falls Municipal Airport&quot;' />
          <member value='&quot;Shreveport Regional Airport&quot;' />
          <member value='&quot;Sioux Gateway Col. Bud Day Field&quot;' />
          <member value='&quot;Sitka Rocky Gutierrez Airport&quot;' />
          <member value='&quot;Sloulin Field International Airport&quot;' />
          <member value='&quot;South Bend Regional Airport&quot;' />
          <member value='&quot;Southeast Texas Regional Airport&quot;' />
          <member value='&quot;Southwest Florida International Airport&quot;' />
          <member value='&quot;Southwest Georgia Regional Airport&quot;' />
          <member value='&quot;Southwest Oregon Regional Airport&quot;' />
          <member value='&quot;Spokane International Airport&quot;' />
          <member value='&quot;Springfield Branson National Airport&quot;' />
          <member value='&quot;St George Municipal Airport&quot;' />
          <member value='&quot;Stewart International Airport&quot;' />
          <member value='&quot;Syracuse Hancock International Airport&quot;' />
          <member value='&quot;Tallahassee Regional Airport&quot;' />
          <member value='&quot;Tampa International Airport&quot;' />
          <member value='&quot;Ted Stevens Anchorage International Airport&quot;' />
          <member value='&quot;Texarkana Regional Webb Field&quot;' />
          <member value='&quot;The Eastern Iowa Airport&quot;' />
          <member value='&quot;Theodore Francis Green State Airport&quot;' />
          <member value='&quot;Toledo Express Airport&quot;' />
          <member value='&quot;Trenton Mercer Airport&quot;' />
          <member value='&quot;Tri Cities Airport&quot;' />
          <member value='&quot;Tri Cities Regional Tn Va Airport&quot;' />
          <member value='&quot;Tucson International Airport&quot;' />
          <member value='&quot;Tulsa International Airport&quot;' />
          <member value='&quot;Tyler Pounds Regional Airport&quot;' />
          <member value='&quot;University Park Airport&quot;' />
          <member value='&quot;Valdosta Regional Airport&quot;' />
          <member value='&quot;Valley International Airport&quot;' />
          <member value='&quot;Waco Regional Airport&quot;' />
          <member value='&quot;Washington Dulles International Airport&quot;' />
          <member value='&quot;Waterloo Regional Airport&quot;' />
          <member value='&quot;Westchester County Airport&quot;' />
          <member value='&quot;Wichita Mid Continent Airport&quot;' />
          <member value='&quot;Wiley Post Will Rogers Memorial Airport&quot;' />
          <member value='&quot;Wilkes Barre Scranton International Airport&quot;' />
          <member value='&quot;Will Rogers World Airport&quot;' />
          <member value='&quot;William P Hobby Airport&quot;' />
          <member value='&quot;Wilmington International Airport&quot;' />
          <member value='&quot;Worcester Regional Airport&quot;' />
          <member value='&quot;Wrangell Airport&quot;' />
          <member value='&quot;Yakutat Airport&quot;' />
          <member value='&quot;Yampa Valley Airport&quot;' />
          <member value='&quot;Yeager Airport&quot;' />
          <member value='&quot;Yellowstone Airport&quot;' />
          <member value='&quot;Yellowstone Regional Airport&quot;' />
          <member value='&quot;Yuma MCAS/Yuma International Airport&quot;' />
        </members>
      </column>
      <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
        <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        <members>
          <member value='&quot;ABE - Allentown/Bethlehem/Easton, PA (Lehigh Valley International Airport)&quot;' />
          <member value='&quot;ABI - Abilene, TX (Abilene Regional Airport)&quot;' />
          <member value='&quot;ABQ - Albuquerque, NM (Albuquerque International Sunport Airport)&quot;' />
          <member value='&quot;ABR - Aberdeen, SD (Aberdeen Regional Airport)&quot;' />
          <member value='&quot;ABY - Albany, GA (Southwest Georgia Regional Airport)&quot;' />
          <member value='&quot;ACK - Nantucket, MA (Nantucket Memorial Airport)&quot;' />
          <member value='&quot;ACT - Waco, TX (Waco Regional Airport)&quot;' />
          <member value='&quot;ACV - Arcata/Eureka, CA (Arcata Airport)&quot;' />
          <member value='&quot;ACY - Atlantic City, NJ (Atlantic City International Airport)&quot;' />
          <member value='&quot;ADK - Adak Island, AK (Adak Airport)&quot;' />
          <member value='&quot;ADQ - Kodiak, AK (Kodiak Airport)&quot;' />
          <member value='&quot;AEX - Alexandria, LA (Alexandria International Airport)&quot;' />
          <member value='&quot;AGS - Augusta, GA (Augusta Regional At Bush Field)&quot;' />
          <member value='&quot;AKN - King Salmon, AK (King Salmon Airport)&quot;' />
          <member value='&quot;ALB - Albany, NY (Albany International Airport)&quot;' />
          <member value='&quot;ALO - Waterloo, IA (Waterloo Regional Airport)&quot;' />
          <member value='&quot;AMA - Amarillo, TX (Rick Husband Amarillo International Airport)&quot;' />
          <member value='&quot;ANC - Anchorage, AK (Ted Stevens Anchorage International Airport)&quot;' />
          <member value='&quot;APN - Alpena, MI (Alpena County Regional Airport)&quot;' />
          <member value='&quot;ASE - Aspen, CO (Aspen-Pitkin Co/Sardy Field)&quot;' />
          <member value='&quot;ATL - Atlanta, GA (Hartsfield Jackson Atlanta International Airport)&quot;' />
          <member value='&quot;ATW - Appleton, WI (Appleton International Airport)&quot;' />
          <member value='&quot;AUS - Austin, TX (Austin Bergstrom International Airport)&quot;' />
          <member value='&quot;AVL - Asheville, NC (Asheville Regional Airport)&quot;' />
          <member value='&quot;AVP - Scranton/Wilkes-Barre, PA (Wilkes Barre Scranton International Airport)&quot;' />
          <member value='&quot;AZO - Kalamazoo, MI (Kalamazoo Battle Creek International Airport)&quot;' />
          <member value='&quot;BDL - Hartford, CT (Bradley International Airport)&quot;' />
          <member value='&quot;BET - Bethel, AK (Bethel Airport)&quot;' />
          <member value='&quot;BFL - Bakersfield, CA (Meadows Field)&quot;' />
          <member value='&quot;BGM - Binghamton, NY (Greater Binghamton/Edwin A Link field)&quot;' />
          <member value='&quot;BGR - Bangor, ME (Bangor International Airport)&quot;' />
          <member value='&quot;BHM - Birmingham, AL (Birmingham-Shuttlesworth International Airport)&quot;' />
          <member value='&quot;BIL - Billings, MT (Billings Logan International Airport)&quot;' />
          <member value='&quot;BIS - Bismarck/Mandan, ND (Bismarck Municipal Airport)&quot;' />
          <member value='&quot;BJI - Bemidji, MN (Bemidji Regional Airport)&quot;' />
          <member value='&quot;BLI - Bellingham, WA (Bellingham International Airport)&quot;' />
          <member value='&quot;BMI - Bloomington/Normal, IL (Central Illinois Regional Airport at Bloomington-Normal)&quot;' />
          <member value='&quot;BNA - Nashville, TN (Nashville International Airport)&quot;' />
          <member value='&quot;BOI - Boise, ID (Boise Air Terminal/Gowen field)&quot;' />
          <member value='&quot;BOS - Boston, MA (General Edward Lawrence Logan International Airport)&quot;' />
          <member value='&quot;BPT - Beaumont/Port Arthur, TX (Southeast Texas Regional Airport)&quot;' />
          <member value='&quot;BQK - Brunswick, GA (Brunswick Golden Isles Airport)&quot;' />
          <member value='&quot;BQN - Aguadilla, PR (Rafael Hernandez Airport)&quot;' />
          <member value='&quot;BRD - Brainerd, MN (Brainerd Lakes Regional Airport)&quot;' />
          <member value='&quot;BRO - Brownsville, TX (Brownsville South Padre Island International Airport)&quot;' />
          <member value='&quot;BRW - Barrow, AK (Wiley Post Will Rogers Memorial Airport)&quot;' />
          <member value='&quot;BTM - Butte, MT (Bert Mooney Airport)&quot;' />
          <member value='&quot;BTR - Baton Rouge, LA (Baton Rouge Metropolitan, Ryan Field)&quot;' />
          <member value='&quot;BTV - Burlington, VT (Burlington International Airport)&quot;' />
          <member value='&quot;BUF - Buffalo, NY (Buffalo Niagara International Airport)&quot;' />
          <member value='&quot;BUR - Burbank, CA (Bob Hope Airport)&quot;' />
          <member value='&quot;BWI - Baltimore, MD (Baltimore/Washington International Thurgood Marshall Airport)&quot;' />
          <member value='&quot;BZN - Bozeman, MT (Gallatin Field)&quot;' />
          <member value='&quot;CAE - Columbia, SC (Columbia Metropolitan Airport)&quot;' />
          <member value='&quot;CAK - Akron, OH (Akron Canton Regional Airport)&quot;' />
          <member value='&quot;CDC - Cedar City, UT (Cedar City Regional Airport)&quot;' />
          <member value='&quot;CDV - Cordova, AK (Merle K (Mudhole) Smith Airport)&quot;' />
          <member value='&quot;CGI - Cape Girardeau, MO (Cape Girardeau Regional Airport)&quot;' />
          <member value='&quot;CHA - Chattanooga, TN (Lovell Field)&quot;' />
          <member value='&quot;CHO - Charlottesville, VA (Charlottesville Albemarle Airport)&quot;' />
          <member value='&quot;CHS - Charleston, SC (Charleston Air Force Base-International Airport)&quot;' />
          <member value='&quot;CID - Cedar Rapids/Iowa City, IA (The Eastern Iowa Airport)&quot;' />
          <member value='&quot;CIU - Sault Ste. Marie, MI (Chippewa County International Airport)&quot;' />
          <member value='&quot;CKB - Clarksburg/Fairmont, WV (North Central West Virginia Airport)&quot;' />
          <member value='&quot;CLE - Cleveland, OH (Cleveland Hopkins International Airport)&quot;' />
          <member value='&quot;CLL - College Station/Bryan, TX (Easterwood Field)&quot;' />
          <member value='&quot;CLT - Charlotte, NC (Charlotte Douglas International Airport)&quot;' />
          <member value='&quot;CMH - Columbus, OH (Port Columbus International Airport)&quot;' />
          <member value='&quot;CMX - Hancock/Houghton, MI (Houghton County Memorial Airport)&quot;' />
          <member value='&quot;COD - Cody, WY (Yellowstone Regional Airport)&quot;' />
          <member value='&quot;COS - Colorado Springs, CO (City of Colorado Springs Municipal Airport)&quot;' />
          <member value='&quot;COU - Columbia, MO (Columbia Regional Airport)&quot;' />
          <member value='&quot;CPR - Casper, WY (Casper-Natrona County International Airport)&quot;' />
          <member value='&quot;CRP - Corpus Christi, TX (Corpus Christi International Airport)&quot;' />
          <member value='&quot;CRW - Charleston/Dunbar, WV (Yeager Airport)&quot;' />
          <member value='&quot;CSG - Columbus, GA (Columbus Metropolitan Airport)&quot;' />
          <member value='&quot;CVG - Cincinnati, OH (Cincinnati Northern Kentucky International Airport)&quot;' />
          <member value='&quot;CWA - Mosinee, WI (Central Wisconsin Airport)&quot;' />
          <member value='&quot;DAB - Daytona Beach, FL (Daytona Beach International Airport)&quot;' />
          <member value='&quot;DAL - Dallas, TX (Dallas Love Field)&quot;' />
          <member value='&quot;DAY - Dayton, OH (James M Cox Dayton International Airport)&quot;' />
          <member value='&quot;DCA - Washington, DC (Ronald Reagan Washington National Airport)&quot;' />
          <member value='&quot;DEN - Denver, CO (Denver International Airport)&quot;' />
          <member value='&quot;DFW - Dallas/Fort Worth, TX (Dallas Fort Worth International Airport)&quot;' />
          <member value='&quot;DHN - Dothan, AL (Dothan Regional Airport)&quot;' />
          <member value='&quot;DLG - Dillingham, AK (Dillingham Airport)&quot;' />
          <member value='&quot;DLH - Duluth, MN (Duluth International Airport)&quot;' />
          <member value='&quot;DRO - Durango, CO (Durango La Plata County Airport)&quot;' />
          <member value='&quot;DSM - Des Moines, IA (Des Moines International Airport)&quot;' />
          <member value='&quot;DTW - Detroit, MI (Detroit Metropolitan Wayne County Airport)&quot;' />
          <member value='&quot;DVL - Devils Lake, ND (Devils Lake Regional Airport)&quot;' />
          <member value='&quot;EAU - Eau Claire, WI (Chippewa Valley Regional Airport)&quot;' />
          <member value='&quot;ECP - Panama City, FL (Northwest Florida Beaches International Airport)&quot;' />
          <member value='&quot;EGE - Eagle, CO (Eagle County Regional Airport)&quot;' />
          <member value='&quot;EKO - Elko, NV (Elko Regional Airport)&quot;' />
          <member value='&quot;ELM - Elmira/Corning, NY (Elmira Corning Regional Airport)&quot;' />
          <member value='&quot;ELP - El Paso, TX (El Paso International Airport)&quot;' />
          <member value='&quot;ERI - Erie, PA (Erie International Tom Ridge Field)&quot;' />
          <member value='&quot;ESC - Escanaba, MI (Delta County Airport)&quot;' />
          <member value='&quot;EUG - Eugene, OR (Mahlon Sweet Field)&quot;' />
          <member value='&quot;EVV - Evansville, IN (Evansville Regional Airport)&quot;' />
          <member value='&quot;EWN - New Bern/Morehead/Beaufort, NC (Coastal Carolina Regional Airport)&quot;' />
          <member value='&quot;EWR - Newark, NJ (Newark Liberty International Airport)&quot;' />
          <member value='&quot;EYW - Key West, FL (Key West International Airport)&quot;' />
          <member value='&quot;FAI - Fairbanks, AK (Fairbanks International Airport)&quot;' />
          <member value='&quot;FAR - Fargo, ND (Hector International Airport)&quot;' />
          <member value='&quot;FAT - Fresno, CA (Fresno Yosemite International Airport)&quot;' />
          <member value='&quot;FAY - Fayetteville, NC (Fayetteville Regional Grannis Field)&quot;' />
          <member value='&quot;FCA - Kalispell, MT (Glacier Park International Airport)&quot;' />
          <member value='&quot;FLG - Flagstaff, AZ (Flagstaff Pulliam Airport)&quot;' />
          <member value='&quot;FLL - Fort Lauderdale, FL (Fort Lauderdale Hollywood International Airport)&quot;' />
          <member value='&quot;FNL - Fort Collins/Loveland, CO (Fort Collins Loveland Municipal Airport)&quot;' />
          <member value='&quot;FNT - Flint, MI (Bishop International Airport)&quot;' />
          <member value='&quot;FSD - Sioux Falls, SD (Joe Foss Field Airport)&quot;' />
          <member value='&quot;FSM - Fort Smith, AR (Fort Smith Regional Airport)&quot;' />
          <member value='&quot;FWA - Fort Wayne, IN (Fort Wayne International Airport)&quot;' />
          <member value='&quot;GCC - Gillette, WY (Gillette Campbell County Airport)&quot;' />
          <member value='&quot;GCK - Garden City, KS (Garden City Regional Airport)&quot;' />
          <member value='&quot;GEG - Spokane, WA (Spokane International Airport)&quot;' />
          <member value='&quot;GFK - Grand Forks, ND (Grand Forks International Airport)&quot;' />
          <member value='&quot;GGG - Longview, TX (East Texas Regional Airport)&quot;' />
          <member value='&quot;GJT - Grand Junction, CO (Grand Junction Regional Airport)&quot;' />
          <member value='&quot;GNV - Gainesville, FL (Gainesville Regional Airport)&quot;' />
          <member value='&quot;GPT - Gulfport/Biloxi, MS (Gulfport Biloxi International Airport)&quot;' />
          <member value='&quot;GRB - Green Bay, WI (Austin Straubel International Airport)&quot;' />
          <member value='&quot;GRI - Grand Island, NE (Central Nebraska Regional Airport)&quot;' />
          <member value='&quot;GRK - Killeen, TX (Robert Gray  Army Air Field Airport)&quot;' />
          <member value='&quot;GRR - Grand Rapids, MI (Gerald R. Ford International Airport)&quot;' />
          <member value='&quot;GSO - Greensboro/High Point, NC (Piedmont Triad International Airport)&quot;' />
          <member value='&quot;GSP - Greer, SC (Greenville Spartanburg International Airport)&quot;' />
          <member value='&quot;GST - Gustavus, AK (Gustavus Airport)&quot;' />
          <member value='&quot;GTF - Great Falls, MT (Great Falls International Airport)&quot;' />
          <member value='&quot;GTR - Columbus, MS (Golden Triangle Regional Airport)&quot;' />
          <member value='&quot;GUC - Gunnison, CO (Gunnison Crested Butte Regional Airport)&quot;' />
          <member value='&quot;GUM - Guam, TT (Antonio B. Won Pat International Airport)&quot;' />
          <member value='&quot;HDN - Hayden, CO (Yampa Valley Airport)&quot;' />
          <member value='&quot;HIB - Hibbing, MN (Range Regional Airport)&quot;' />
          <member value='&quot;HLN - Helena, MT (Helena Regional Airport)&quot;' />
          <member value='&quot;HNL - Honolulu, HI (Honolulu International Airport)&quot;' />
          <member value='&quot;HOB - Hobbs, NM (Lea County Regional Airport)&quot;' />
          <member value='&quot;HOU - Houston, TX (William P Hobby Airport)&quot;' />
          <member value='&quot;HPN - White Plains, NY (Westchester County Airport)&quot;' />
          <member value='&quot;HRL - Harlingen/San Benito, TX (Valley International Airport)&quot;' />
          <member value='&quot;HSV - Huntsville, AL (Huntsville International Carl T Jones Field)&quot;' />
          <member value='&quot;HYA - Hyannis, MA (Barnstable Municipal Boardman Polando Field)&quot;' />
          <member value='&quot;HYS - Hays, KS (Hays Regional Airport)&quot;' />
          <member value='&quot;IAD - Washington, DC (Washington Dulles International Airport)&quot;' />
          <member value='&quot;IAG - Niagara Falls, NY (Niagara Falls International Airport)&quot;' />
          <member value='&quot;IAH - Houston, TX (George Bush Intercontinental Houston Airport)&quot;' />
          <member value='&quot;ICT - Wichita, KS (Wichita Mid Continent Airport)&quot;' />
          <member value='&quot;IDA - Idaho Falls, ID (Idaho Falls Regional Airport)&quot;' />
          <member value='&quot;ILM - Wilmington, NC (Wilmington International Airport)&quot;' />
          <member value='&quot;IMT - Iron Mountain/Kingsfd, MI (Ford Airport)&quot;' />
          <member value='&quot;IND - Indianapolis, IN (Indianapolis International Airport)&quot;' />
          <member value='&quot;INL - International Falls, MN (Falls International Airport)&quot;' />
          <member value='&quot;ISN - Williston, ND (Sloulin Field International Airport)&quot;' />
          <member value='&quot;ISP - Islip, NY (Long Island Mac Arthur Airport)&quot;' />
          <member value='&quot;ITH - Ithaca/Cortland, NY (Ithaca Tompkins Regional Airport)&quot;' />
          <member value='&quot;ITO - Hilo, HI (Hilo International Airport)&quot;' />
          <member value='&quot;JAC - Jackson, WY (Jackson Hole Airport)&quot;' />
          <member value='&quot;JAN - Jackson/Vicksburg, MS (Jackson-Medgar Wiley Evers International Airport)&quot;' />
          <member value='&quot;JAX - Jacksonville, FL (Jacksonville International Airport)&quot;' />
          <member value='&quot;JFK - New York, NY (John F Kennedy International Airport)&quot;' />
          <member value='&quot;JLN - Joplin, MO (Joplin Regional Airport)&quot;' />
          <member value='&quot;JMS - Jamestown, ND (Jamestown Regional Airport)&quot;' />
          <member value='&quot;JNU - Juneau, AK (Juneau International Airport)&quot;' />
          <member value='&quot;KOA - Kona, HI (Kona International At Keahole Airport)&quot;' />
          <member value='&quot;KTN - Ketchikan, AK (Ketchikan International Airport)&quot;' />
          <member value='&quot;LAN - Lansing, MI (Capital City Airport)&quot;' />
          <member value='&quot;LAR - Laramie, WY (Laramie Regional Airport)&quot;' />
          <member value='&quot;LAS - Las Vegas, NV (McCarran International Airport)&quot;' />
          <member value='&quot;LAW - Lawton/Fort Sill, OK (Lawton Fort Sill Regional Airport)&quot;' />
          <member value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
          <member value='&quot;LBB - Lubbock, TX (Lubbock Preston Smith International Airport)&quot;' />
          <member value='&quot;LBE - Latrobe, PA (Arnold Palmer Regional Airport)&quot;' />
          <member value='&quot;LCH - Lake Charles, LA (Lake Charles Regional Airport)&quot;' />
          <member value='&quot;LEX - Lexington, KY (Blue Grass Airport)&quot;' />
          <member value='&quot;LFT - Lafayette, LA (Lafayette Regional Airport)&quot;' />
          <member value='&quot;LGA - New York, NY (La Guardia Airport)&quot;' />
          <member value='&quot;LGB - Long Beach, CA (Long Beach /Daugherty Field/ Airport)&quot;' />
          <member value='&quot;LIH - Lihue, HI (Lihue Airport)&quot;' />
          <member value='&quot;LIT - Little Rock, AR (Bill &amp; Hillary Clinton National Airport/Adams Field)&quot;' />
          <member value='&quot;LNK - Lincoln, NE (Lincoln Airport)&quot;' />
          <member value='&quot;LRD - Laredo, TX (Laredo International Airport)&quot;' />
          <member value='&quot;LSE - La Crosse, WI (La Crosse Municipal Airport)&quot;' />
          <member value='&quot;LWS - Lewiston, ID (Lewiston Nez Perce County Airport)&quot;' />
          <member value='&quot;MAF - Midland/Odessa, TX (Midland International Airport)&quot;' />
          <member value='&quot;MBS - Saginaw/Bay City/Midland, MI (MBS International Airport)&quot;' />
          <member value='&quot;MCI - Kansas City, MO (Kansas City International Airport)&quot;' />
          <member value='&quot;MCO - Orlando, FL (Orlando International Airport)&quot;' />
          <member value='&quot;MDT - Harrisburg, PA (Harrisburg International Airport)&quot;' />
          <member value='&quot;MDW - Chicago, IL (Chicago Midway International Airport)&quot;' />
          <member value='&quot;MEI - Meridian, MS (Key Field)&quot;' />
          <member value='&quot;MEM - Memphis, TN (Memphis International Airport)&quot;' />
          <member value='&quot;MFE - Mission/McAllen/Edinburg, TX (Mc Allen Miller International Airport)&quot;' />
          <member value='&quot;MFR - Medford, OR (Rogue Valley International Medford Airport)&quot;' />
          <member value='&quot;MGM - Montgomery, AL (Montgomery Regional (Dannelly Field) Airport)&quot;' />
          <member value='&quot;MHK - Manhattan/Ft. Riley, KS (Manhattan Regional Airport)&quot;' />
          <member value='&quot;MHT - Manchester, NH (Manchester Airport)&quot;' />
          <member value='&quot;MIA - Miami, FL (Miami International Airport)&quot;' />
          <member value='&quot;MKE - Milwaukee, WI (General Mitchell International Airport)&quot;' />
          <member value='&quot;MKG - Muskegon, MI (Muskegon County Airport)&quot;' />
          <member value='&quot;MLB - Melbourne, FL (Melbourne International Airport)&quot;' />
          <member value='&quot;MLI - Moline, IL (Quad City International Airport)&quot;' />
          <member value='&quot;MLU - Monroe, LA (Monroe Regional Airport)&quot;' />
          <member value='&quot;MMH - Mammoth Lakes, CA (Mammoth Yosemite Airport)&quot;' />
          <member value='&quot;MOB - Mobile, AL (Mobile Regional Airport)&quot;' />
          <member value='&quot;MOT - Minot, ND (Minot International Airport)&quot;' />
          <member value='&quot;MQT - Marquette, MI (Sawyer International Airport)&quot;' />
          <member value='&quot;MRY - Monterey, CA (Monterey Peninsula Airport)&quot;' />
          <member value='&quot;MSN - Madison, WI (Dane County Regional Truax Field)&quot;' />
          <member value='&quot;MSO - Missoula, MT (Missoula International Airport)&quot;' />
          <member value='&quot;MSP - Minneapolis, MN (Minneapolis-St Paul International/Wold-Chamberlain Airport)&quot;' />
          <member value='&quot;MSY - New Orleans, LA (Louis Armstrong New Orleans International Airport)&quot;' />
          <member value='&quot;MTJ - Montrose/Delta, CO (Montrose Regional Airport)&quot;' />
          <member value='&quot;MVY - Martha&apos;s Vineyard, MA (Martha&apos;s Vineyard Airport)&quot;' />
          <member value='&quot;MYR - Myrtle Beach, SC (Myrtle Beach International Airport)&quot;' />
          <member value='&quot;OAJ - Jacksonville/Camp Lejeune, NC (Albert J Ellis Airport)&quot;' />
          <member value='&quot;OAK - Oakland, CA (Metropolitan Oakland International Airport)&quot;' />
          <member value='&quot;OGG - Kahului, HI (Kahului Airport)&quot;' />
          <member value='&quot;OKC - Oklahoma City, OK (Will Rogers World Airport)&quot;' />
          <member value='&quot;OMA - Omaha, NE (Eppley Airfield)&quot;' />
          <member value='&quot;OME - Nome, AK (Nome Airport)&quot;' />
          <member value='&quot;ONT - Ontario, CA (Ontario International Airport)&quot;' />
          <member value='&quot;ORD - Chicago, IL (Chicago O&apos;Hare International Airport)&quot;' />
          <member value='&quot;ORF - Norfolk, VA (Norfolk International Airport)&quot;' />
          <member value='&quot;ORH - Worcester, MA (Worcester Regional Airport)&quot;' />
          <member value='&quot;OTH - North Bend/Coos Bay, OR (Southwest Oregon Regional Airport)&quot;' />
          <member value='&quot;OTZ - Kotzebue, AK (Ralph Wien Memorial Airport)&quot;' />
          <member value='&quot;PAH - Paducah, KY (Barkley Regional Airport)&quot;' />
          <member value='&quot;PBG - Plattsburgh, NY (Plattsburgh International Airport)&quot;' />
          <member value='&quot;PBI - West Palm Beach/Palm Beach, FL (Palm Beach International Airport)&quot;' />
          <member value='&quot;PDX - Portland, OR (Portland International Airport)&quot;' />
          <member value='&quot;PGD - Punta Gorda, FL (Charlotte County Airport)&quot;' />
          <member value='&quot;PHF - Newport News/Williamsburg, VA (Newport News Williamsburg International Airport)&quot;' />
          <member value='&quot;PHL - Philadelphia, PA (Philadelphia International Airport)&quot;' />
          <member value='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' />
          <member value='&quot;PIA - Peoria, IL (General Wayne A. Downing Peoria International Airport)&quot;' />
          <member value='&quot;PIB - Hattiesburg/Laurel, MS (Hattiesburg Laurel Regional Airport)&quot;' />
          <member value='&quot;PIH - Pocatello, ID (Pocatello Regional Airport)&quot;' />
          <member value='&quot;PIT - Pittsburgh, PA (Pittsburgh International Airport)&quot;' />
          <member value='&quot;PLN - Pellston, MI (Pellston Regional Airport of Emmet County Airport)&quot;' />
          <member value='&quot;PNS - Pensacola, FL (Pensacola Regional Airport)&quot;' />
          <member value='&quot;PPG - Pago Pago, TT (Pago Pago International Airport)&quot;' />
          <member value='&quot;PSC - Pasco/Kennewick/Richland, WA (Tri Cities Airport)&quot;' />
          <member value='&quot;PSE - Ponce, PR (Mercedita Airport)&quot;' />
          <member value='&quot;PSG - Petersburg, AK (Petersburg James A Johnson Airport)&quot;' />
          <member value='&quot;PSP - Palm Springs, CA (Palm Springs International Airport)&quot;' />
          <member value='&quot;PUB - Pueblo, CO (Pueblo Memorial Airport)&quot;' />
          <member value='&quot;PVD - Providence, RI (Theodore Francis Green State Airport)&quot;' />
          <member value='&quot;PWM - Portland, ME (Portland International Jetport Airport)&quot;' />
          <member value='&quot;RAP - Rapid City, SD (Rapid City Regional Airport)&quot;' />
          <member value='&quot;RDD - Redding, CA (Redding Municipal Airport)&quot;' />
          <member value='&quot;RDM - Bend/Redmond, OR (Roberts Field)&quot;' />
          <member value='&quot;RDU - Raleigh/Durham, NC (Raleigh Durham International Airport)&quot;' />
          <member value='&quot;RHI - Rhinelander, WI (Rhinelander Oneida County Airport)&quot;' />
          <member value='&quot;RIC - Richmond, VA (Richmond International Airport)&quot;' />
          <member value='&quot;RKS - Rock Springs, WY (Rock Springs Sweetwater County Airport)&quot;' />
          <member value='&quot;RNO - Reno, NV (Reno Tahoe International Airport)&quot;' />
          <member value='&quot;ROA - Roanoke, VA (Roanoke–Blacksburg Regional Airport)&quot;' />
          <member value='&quot;ROC - Rochester, NY (Greater Rochester International Airport)&quot;' />
          <member value='&quot;ROW - Roswell, NM (Roswell International Air Center Airport)&quot;' />
          <member value='&quot;RST - Rochester, MN (Rochester International Airport)&quot;' />
          <member value='&quot;RSW - Fort Myers, FL (Southwest Florida International Airport)&quot;' />
          <member value='&quot;SAF - Santa Fe, NM (Santa Fe Municipal Airport)&quot;' />
          <member value='&quot;SAN - San Diego, CA (San Diego International Airport)&quot;' />
          <member value='&quot;SAT - San Antonio, TX (San Antonio International Airport)&quot;' />
          <member value='&quot;SAV - Savannah, GA (Savannah Hilton Head International Airport)&quot;' />
          <member value='&quot;SBA - Santa Barbara, CA (Santa Barbara Municipal Airport)&quot;' />
          <member value='&quot;SBN - South Bend, IN (South Bend Regional Airport)&quot;' />
          <member value='&quot;SBP - San Luis Obispo, CA (San Luis County Regional Airport)&quot;' />
          <member value='&quot;SCC - Deadhorse, AK (Deadhorse Airport)&quot;' />
          <member value='&quot;SCE - State College, PA (University Park Airport)&quot;' />
          <member value='&quot;SDF - Louisville, KY (Louisville International Standiford Field)&quot;' />
          <member value='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' />
          <member value='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' />
          <member value='&quot;SGF - Springfield, MO (Springfield Branson National Airport)&quot;' />
          <member value='&quot;SGU - St. George, UT (St George Municipal Airport)&quot;' />
          <member value='&quot;SHV - Shreveport, LA (Shreveport Regional Airport)&quot;' />
          <member value='&quot;SIT - Sitka, AK (Sitka Rocky Gutierrez Airport)&quot;' />
          <member value='&quot;SJC - San Jose, CA (Norman Y. Mineta San Jose International Airport)&quot;' />
          <member value='&quot;SJT - San Angelo, TX (San Angelo Regional Mathis Field)&quot;' />
          <member value='&quot;SJU - San Juan, PR (Luis Munoz Marin International Airport)&quot;' />
          <member value='&quot;SLC - Salt Lake City, UT (Salt Lake City International Airport)&quot;' />
          <member value='&quot;SMF - Sacramento, CA (Sacramento International Airport)&quot;' />
          <member value='&quot;SNA - Santa Ana, CA (John Wayne Airport-Orange County Airport)&quot;' />
          <member value='&quot;SPI - Springfield, IL (Abraham Lincoln Capital Airport)&quot;' />
          <member value='&quot;SPS - Wichita Falls, TX (Sheppard Air Force Base-Wichita Falls Municipal Airport)&quot;' />
          <member value='&quot;SRQ - Sarasota/Bradenton, FL (Sarasota Bradenton International Airport)&quot;' />
          <member value='&quot;STL - St. Louis, MO (Lambert St Louis International Airport)&quot;' />
          <member value='&quot;STS - Santa Rosa, CA (Charles M. Schulz Sonoma County Airport)&quot;' />
          <member value='&quot;STT - Charlotte Amalie, VI (Cyril E. King Airport)&quot;' />
          <member value='&quot;STX - Christiansted, VI (Henry E Rohlsen Airport)&quot;' />
          <member value='&quot;SUN - Sun Valley/Hailey/Ketchum, ID (Friedman Memorial Airport)&quot;' />
          <member value='&quot;SUX - Sioux City, IA (Sioux Gateway Col. Bud Day Field)&quot;' />
          <member value='&quot;SWF - Newburgh/Poughkeepsie, NY (Stewart International Airport)&quot;' />
          <member value='&quot;SYR - Syracuse, NY (Syracuse Hancock International Airport)&quot;' />
          <member value='&quot;TLH - Tallahassee, FL (Tallahassee Regional Airport)&quot;' />
          <member value='&quot;TOL - Toledo, OH (Toledo Express Airport)&quot;' />
          <member value='&quot;TPA - Tampa, FL (Tampa International Airport)&quot;' />
          <member value='&quot;TRI - Bristol/Johnson City/Kingsport, TN (Tri Cities Regional Tn Va Airport)&quot;' />
          <member value='&quot;TTN - Trenton, NJ (Trenton Mercer Airport)&quot;' />
          <member value='&quot;TUL - Tulsa, OK (Tulsa International Airport)&quot;' />
          <member value='&quot;TUS - Tucson, AZ (Tucson International Airport)&quot;' />
          <member value='&quot;TVC - Traverse City, MI (Cherry Capital Airport)&quot;' />
          <member value='&quot;TWF - Twin Falls, ID (Joslin Field Magic Valley Regional Airport)&quot;' />
          <member value='&quot;TXK - Texarkana, AR (Texarkana Regional Webb Field)&quot;' />
          <member value='&quot;TYR - Tyler, TX (Tyler Pounds Regional Airport)&quot;' />
          <member value='&quot;TYS - Knoxville, TN (McGhee Tyson Airport)&quot;' />
          <member value='&quot;UIN - Quincy, IL (Quincy Regional Baldwin Field)&quot;' />
          <member value='&quot;UST - St. Augustine, FL (Northeast Florida Regional Airport)&quot;' />
          <member value='&quot;VLD - Valdosta, GA (Valdosta Regional Airport)&quot;' />
          <member value='&quot;VPS - Valparaiso, FL (Destin-Ft Walton Beach Airport)&quot;' />
          <member value='&quot;WRG - Wrangell, AK (Wrangell Airport)&quot;' />
          <member value='&quot;WYS - West Yellowstone, MT (Yellowstone Airport)&quot;' />
          <member value='&quot;XNA - Fayetteville, AR (Northwest Arkansas Regional Airport)&quot;' />
          <member value='&quot;YAK - Yakutat, AK (Yakutat Airport)&quot;' />
          <member value='&quot;YUM - Yuma, AZ (Yuma MCAS/Yuma International Airport)&quot;' />
        </members>
      </column>
      <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='105.0'>
        <calculation class='tableau' formula='105.0' />
        <range granularity='5.0' max='200.0' min='0.0' />
      </column>
      <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
        <calculation class='tableau' formula='&quot;Departure&quot;' />
        <members>
          <member value='&quot;Arrival&quot;' />
          <member value='&quot;Departure&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Airport Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meadows Field&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mercedita Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Central West Virginia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle Tacoma International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampa International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tri Cities Airport&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Wichita Mid Continent Airport&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South Bend Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Springfield Branson National Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Pounds Regional Airport&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;The Eastern Iowa Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane International Airport&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Theodore Francis Green State Airport&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='airport_delays' inline='true' name='federated.0pfv4211ega3oh17lckf50a9x4eu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airport_delays' name='textscan.1mz03xn162phb810hklkc1o1bxv0'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='airport_delays.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1mz03xn162phb810hklkc1o1bxv0' name='airport_delays.csv' table='[airport_delays#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airport' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='string' name='Carrier' ordinal='5' />
            <column datatype='string' name='FlightDateDay' ordinal='6' />
            <column datatype='real' name='Hour' ordinal='7' />
            <column datatype='real' name='DepartureDelay' ordinal='8' />
            <column datatype='real' name='ArrivalDelay' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDateDay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FlightDateDay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>FlightDateDay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
      <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
      <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
      <column caption='Flight Date Day' datatype='string' name='[FlightDateDay]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Sum' name='[sum:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Airport)' hidden='true' name='[Action (Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Airport]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/airport_delays.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/10/2018 12:13:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='165091' timestamp-start='2018-08-10 00:13:45.543' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport</remote-alias>
              <ordinal>0</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>5</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDateDay</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FlightDateDay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDateDay</remote-alias>
              <ordinal>6</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>7</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>8</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>9</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1328</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.29868' measure-ordering='alphabetic' measure-percentage='0.506601' parameter-percentage='0.194719' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>2</bucket>
            </map>
            <map to='asterisk'>
              <bucket>92</bucket>
            </map>
            <map to='asterisk'>
              <bucket>130</bucket>
            </map>
            <map to='asterisk'>
              <bucket>168</bucket>
            </map>
            <map to='asterisk'>
              <bucket>218</bucket>
            </map>
            <map to='asterisk'>
              <bucket>254</bucket>
            </map>
            <map to='asterisk'>
              <bucket>300</bucket>
            </map>
            <map to='asterisk'>
              <bucket>352</bucket>
            </map>
            <map to='asterisk'>
              <bucket>398</bucket>
            </map>
            <map to='asterisk'>
              <bucket>436</bucket>
            </map>
            <map to='asterisk'>
              <bucket>474</bucket>
            </map>
            <map to='asterisk'>
              <bucket>554</bucket>
            </map>
            <map to='asterisk'>
              <bucket>606</bucket>
            </map>
            <map to='asterisk'>
              <bucket>690</bucket>
            </map>
            <map to='asterisk'>
              <bucket>758</bucket>
            </map>
            <map to='asterisk'>
              <bucket>844</bucket>
            </map>
            <map to='asterisk'>
              <bucket>916</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1076</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1382</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1564</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1842</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2092</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2336</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2692</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2940</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3212</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3480</bucket>
            </map>
            <map to='circle'>
              <bucket>70</bucket>
            </map>
            <map to='circle'>
              <bucket>112</bucket>
            </map>
            <map to='circle'>
              <bucket>146</bucket>
            </map>
            <map to='circle'>
              <bucket>208</bucket>
            </map>
            <map to='circle'>
              <bucket>238</bucket>
            </map>
            <map to='circle'>
              <bucket>278</bucket>
            </map>
            <map to='circle'>
              <bucket>336</bucket>
            </map>
            <map to='circle'>
              <bucket>376</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='circle'>
              <bucket>422</bucket>
            </map>
            <map to='circle'>
              <bucket>456</bucket>
            </map>
            <map to='circle'>
              <bucket>530</bucket>
            </map>
            <map to='circle'>
              <bucket>584</bucket>
            </map>
            <map to='circle'>
              <bucket>680</bucket>
            </map>
            <map to='circle'>
              <bucket>730</bucket>
            </map>
            <map to='circle'>
              <bucket>824</bucket>
            </map>
            <map to='circle'>
              <bucket>894</bucket>
            </map>
            <map to='circle'>
              <bucket>1020</bucket>
            </map>
            <map to='circle'>
              <bucket>1268</bucket>
            </map>
            <map to='circle'>
              <bucket>1490</bucket>
            </map>
            <map to='circle'>
              <bucket>1706</bucket>
            </map>
            <map to='circle'>
              <bucket>2040</bucket>
            </map>
            <map to='circle'>
              <bucket>2170</bucket>
            </map>
            <map to='circle'>
              <bucket>2574</bucket>
            </map>
            <map to='circle'>
              <bucket>2818</bucket>
            </map>
            <map to='circle'>
              <bucket>3162</bucket>
            </map>
            <map to='circle'>
              <bucket>3426</bucket>
            </map>
            <map to='circle'>
              <bucket>3774</bucket>
            </map>
            <map to='diamond'>
              <bucket>14</bucket>
            </map>
            <map to='diamond'>
              <bucket>96</bucket>
            </map>
            <map to='diamond'>
              <bucket>136</bucket>
            </map>
            <map to='diamond'>
              <bucket>172</bucket>
            </map>
            <map to='diamond'>
              <bucket>220</bucket>
            </map>
            <map to='diamond'>
              <bucket>262</bucket>
            </map>
            <map to='diamond'>
              <bucket>302</bucket>
            </map>
            <map to='diamond'>
              <bucket>358</bucket>
            </map>
            <map to='diamond'>
              <bucket>400</bucket>
            </map>
            <map to='diamond'>
              <bucket>444</bucket>
            </map>
            <map to='diamond'>
              <bucket>478</bucket>
            </map>
            <map to='diamond'>
              <bucket>558</bucket>
            </map>
            <map to='diamond'>
              <bucket>607</bucket>
            </map>
            <map to='diamond'>
              <bucket>692</bucket>
            </map>
            <map to='diamond'>
              <bucket>762</bucket>
            </map>
            <map to='diamond'>
              <bucket>846</bucket>
            </map>
            <map to='diamond'>
              <bucket>950</bucket>
            </map>
            <map to='diamond'>
              <bucket>1106</bucket>
            </map>
            <map to='diamond'>
              <bucket>1386</bucket>
            </map>
            <map to='diamond'>
              <bucket>1568</bucket>
            </map>
            <map to='diamond'>
              <bucket>1858</bucket>
            </map>
            <map to='diamond'>
              <bucket>2108</bucket>
            </map>
            <map to='diamond'>
              <bucket>2362</bucket>
            </map>
            <map to='diamond'>
              <bucket>2710</bucket>
            </map>
            <map to='diamond'>
              <bucket>3034</bucket>
            </map>
            <map to='diamond'>
              <bucket>3308</bucket>
            </map>
            <map to='diamond'>
              <bucket>3518</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>36</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>46</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>104</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>140</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>194</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>224</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>266</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>314</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>366</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>410</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>450</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>492</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>570</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>710</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>786</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>868</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>988</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1152</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1436</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1582</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1892</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2122</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2400</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2788</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3050</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3332</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3562</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>38</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>56</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>108</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>142</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>200</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>226</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>268</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>324</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>368</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>414</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>452</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>494</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>574</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>662</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>714</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>812</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>880</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>996</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1162</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1446</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1592</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1994</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2150</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2410</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2794</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3140</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3704</bucket>
            </map>
            <map to='plus'>
              <bucket>76</bucket>
            </map>
            <map to='plus'>
              <bucket>122</bucket>
            </map>
            <map to='plus'>
              <bucket>164</bucket>
            </map>
            <map to='plus'>
              <bucket>214</bucket>
            </map>
            <map to='plus'>
              <bucket>250</bucket>
            </map>
            <map to='plus'>
              <bucket>292</bucket>
            </map>
            <map to='plus'>
              <bucket>344</bucket>
            </map>
            <map to='plus'>
              <bucket>382</bucket>
            </map>
            <map to='plus'>
              <bucket>430</bucket>
            </map>
            <map to='plus'>
              <bucket>466</bucket>
            </map>
            <map to='plus'>
              <bucket>548</bucket>
            </map>
            <map to='plus'>
              <bucket>590</bucket>
            </map>
            <map to='plus'>
              <bucket>684</bucket>
            </map>
            <map to='plus'>
              <bucket>742</bucket>
            </map>
            <map to='plus'>
              <bucket>834</bucket>
            </map>
            <map to='plus'>
              <bucket>908</bucket>
            </map>
            <map to='plus'>
              <bucket>1054</bucket>
            </map>
            <map to='plus'>
              <bucket>1344</bucket>
            </map>
            <map to='plus'>
              <bucket>1544</bucket>
            </map>
            <map to='plus'>
              <bucket>1770</bucket>
            </map>
            <map to='plus'>
              <bucket>2066</bucket>
            </map>
            <map to='plus'>
              <bucket>2202</bucket>
            </map>
            <map to='plus'>
              <bucket>2628</bucket>
            </map>
            <map to='plus'>
              <bucket>2894</bucket>
            </map>
            <map to='plus'>
              <bucket>3172</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='plus'>
              <bucket>3474</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>42</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>66</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>110</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>144</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>206</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>232</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>274</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>330</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>370</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>418</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>454</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>582</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>724</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>814</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>884</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1014</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1234</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1488</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2024</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2166</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2796</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3154</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3390</bucket>
            </map>
            <map to='square'>
              <bucket>74</bucket>
            </map>
            <map to='square'>
              <bucket>118</bucket>
            </map>
            <map to='square'>
              <bucket>154</bucket>
            </map>
            <map to='square'>
              <bucket>212</bucket>
            </map>
            <map to='square'>
              <bucket>242</bucket>
            </map>
            <map to='square'>
              <bucket>290</bucket>
            </map>
            <map to='square'>
              <bucket>338</bucket>
            </map>
            <map to='square'>
              <bucket>378</bucket>
            </map>
            <map to='square'>
              <bucket>424</bucket>
            </map>
            <map to='square'>
              <bucket>464</bucket>
            </map>
            <map to='square'>
              <bucket>538</bucket>
            </map>
            <map to='square'>
              <bucket>588</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='square'>
              <bucket>682</bucket>
            </map>
            <map to='square'>
              <bucket>734</bucket>
            </map>
            <map to='square'>
              <bucket>791</bucket>
            </map>
            <map to='square'>
              <bucket>832</bucket>
            </map>
            <map to='square'>
              <bucket>900</bucket>
            </map>
            <map to='square'>
              <bucket>1026</bucket>
            </map>
            <map to='square'>
              <bucket>1288</bucket>
            </map>
            <map to='square'>
              <bucket>1516</bucket>
            </map>
            <map to='square'>
              <bucket>1736</bucket>
            </map>
            <map to='square'>
              <bucket>2054</bucket>
            </map>
            <map to='square'>
              <bucket>2172</bucket>
            </map>
            <map to='square'>
              <bucket>2582</bucket>
            </map>
            <map to='square'>
              <bucket>2878</bucket>
            </map>
            <map to='square'>
              <bucket>3166</bucket>
            </map>
            <map to='square'>
              <bucket>3446</bucket>
            </map>
            <map to='times'>
              <bucket>78</bucket>
            </map>
            <map to='times'>
              <bucket>124</bucket>
            </map>
            <map to='times'>
              <bucket>166</bucket>
            </map>
            <map to='times'>
              <bucket>216</bucket>
            </map>
            <map to='times'>
              <bucket>252</bucket>
            </map>
            <map to='times'>
              <bucket>298</bucket>
            </map>
            <map to='times'>
              <bucket>346</bucket>
            </map>
            <map to='times'>
              <bucket>386</bucket>
            </map>
            <map to='times'>
              <bucket>432</bucket>
            </map>
            <map to='times'>
              <bucket>470</bucket>
            </map>
            <map to='times'>
              <bucket>550</bucket>
            </map>
            <map to='times'>
              <bucket>598</bucket>
            </map>
            <map to='times'>
              <bucket>688</bucket>
            </map>
            <map to='times'>
              <bucket>756</bucket>
            </map>
            <map to='times'>
              <bucket>838</bucket>
            </map>
            <map to='times'>
              <bucket>914</bucket>
            </map>
            <map to='times'>
              <bucket>1072</bucket>
            </map>
            <map to='times'>
              <bucket>1356</bucket>
            </map>
            <map to='times'>
              <bucket>1546</bucket>
            </map>
            <map to='times'>
              <bucket>1816</bucket>
            </map>
            <map to='times'>
              <bucket>2072</bucket>
            </map>
            <map to='times'>
              <bucket>2274</bucket>
            </map>
            <map to='times'>
              <bucket>2650</bucket>
            </map>
            <map to='times'>
              <bucket>2934</bucket>
            </map>
            <map to='times'>
              <bucket>3202</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
            <map to='times'>
              <bucket>3706</bucket>
            </map>
            <map to='triangle'>
              <bucket>16</bucket>
            </map>
            <map to='triangle'>
              <bucket>44</bucket>
            </map>
            <map to='triangle'>
              <bucket>98</bucket>
            </map>
            <map to='triangle'>
              <bucket>138</bucket>
            </map>
            <map to='triangle'>
              <bucket>192</bucket>
            </map>
            <map to='triangle'>
              <bucket>222</bucket>
            </map>
            <map to='triangle'>
              <bucket>264</bucket>
            </map>
            <map to='triangle'>
              <bucket>306</bucket>
            </map>
            <map to='triangle'>
              <bucket>364</bucket>
            </map>
            <map to='triangle'>
              <bucket>448</bucket>
            </map>
            <map to='triangle'>
              <bucket>484</bucket>
            </map>
            <map to='triangle'>
              <bucket>560</bucket>
            </map>
            <map to='triangle'>
              <bucket>612</bucket>
            </map>
            <map to='triangle'>
              <bucket>706</bucket>
            </map>
            <map to='triangle'>
              <bucket>764</bucket>
            </map>
            <map to='triangle'>
              <bucket>850</bucket>
            </map>
            <map to='triangle'>
              <bucket>958</bucket>
            </map>
            <map to='triangle'>
              <bucket>1146</bucket>
            </map>
            <map to='triangle'>
              <bucket>1432</bucket>
            </map>
            <map to='triangle'>
              <bucket>1578</bucket>
            </map>
            <map to='triangle'>
              <bucket>1882</bucket>
            </map>
            <map to='triangle'>
              <bucket>2116</bucket>
            </map>
            <map to='triangle'>
              <bucket>2394</bucket>
            </map>
            <map to='triangle'>
              <bucket>2732</bucket>
            </map>
            <map to='triangle'>
              <bucket>3046</bucket>
            </map>
            <map to='triangle'>
              <bucket>3360</bucket>
            </map>
            <map to='triangle'>
              <bucket>3556</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[min:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>1</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>2</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Airport' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Calculation_4686839867435659276' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='FlightDateDay' />
        <field-sort-custom-order field='Hour' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='Calculation_4577416469211852804' />
        <field-sort-custom-order field='Calculation_4577416469212676102' />
        <field-sort-custom-order field='Calculation_4686839866503639046' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
          <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        </column>
        <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='105.0'>
          <calculation class='tableau' formula='105.0' />
          <range granularity='5.0' max='200.0' min='0.0' />
        </column>
        <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
          <calculation class='tableau' formula='&quot;Departure&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='flights' inline='true' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.11sx92m094fgux1366mhm0wdq491'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='flights.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11sx92m094fgux1366mhm0wdq491' name='flights.csv' table='[flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='FlightDate' ordinal='0' />
            <column datatype='string' name='OriginCode' ordinal='1' />
            <column datatype='string' name='OriginCity' ordinal='2' />
            <column datatype='string' name='DestinationCode' ordinal='3' />
            <column datatype='string' name='DestinationCity' ordinal='4' />
            <column datatype='integer' name='DepartureTimeScheduled' ordinal='5' />
            <column datatype='real' name='DepartureTimeActual' ordinal='6' />
            <column datatype='real' name='DepartureDelay' ordinal='7' />
            <column datatype='real' name='DepartureDelayCapped' ordinal='8' />
            <column datatype='integer' name='ArrivalTimeScheduled' ordinal='9' />
            <column datatype='real' name='ArrivalTimeActual' ordinal='10' />
            <column datatype='real' name='ArrivalDelay' ordinal='11' />
            <column datatype='real' name='ArrivalDelayCapped' ordinal='12' />
            <column datatype='real' name='Cancelled' ordinal='13' />
            <column datatype='real' name='Diverted' ordinal='14' />
            <column datatype='real' name='TotalTimeScheduled' ordinal='15' />
            <column datatype='real' name='TotalTimeActual' ordinal='16' />
            <column datatype='string' name='OriginAirport' ordinal='17' />
            <column datatype='real' name='OriginLatitude' ordinal='18' />
            <column datatype='real' name='OriginLongitude' ordinal='19' />
            <column datatype='string' name='DestinationAirport' ordinal='20' />
            <column datatype='real' name='DestinationLatitude' ordinal='21' />
            <column datatype='real' name='DestinationLongitude' ordinal='22' />
            <column datatype='string' name='Carrier' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeScheduled</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeActual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelayCapped</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeScheduled</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeActual</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelayCapped</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeScheduled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeScheduled</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeActual</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginAirport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLatitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLongitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationAirport</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLatitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLongitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='*0000' name='[ArrivalTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[ArrivalTimeScheduled]' role='measure' type='quantitative' />
      <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
      </column>
      <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
      </column>
      <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
      </column>
      <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
      </column>
      <column caption='ArrivalTimeActualDateTime' datatype='datetime' name='[Calculation_3516959494379470854]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([ArrivalTimeActual]), 4))' />
      </column>
      <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
      <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[DepartureTimeScheduled]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
      <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
      <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='OriginLatitude' datatype='real' name='[OriginLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='OriginLongitude' datatype='real' name='[OriginLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='TotalTimeActual' datatype='real' name='[TotalTimeActual]' role='measure' type='quantitative' />
      <column caption='TotalTimeScheduled' datatype='real' name='[TotalTimeScheduled]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(DepartureTimeActualDateTime),Carrier)' hidden='true' name='[Action (HOUR(DepartureTimeActualDateTime),Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/flights.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCode</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCity</remote-alias>
              <ordinal>2</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCode</remote-alias>
              <ordinal>3</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCity</remote-alias>
              <ordinal>4</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepartureTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeScheduled</remote-alias>
              <ordinal>5</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>393</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeActual</remote-alias>
              <ordinal>6</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1037</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>7</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelayCapped</remote-alias>
              <ordinal>8</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrivalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeScheduled</remote-alias>
              <ordinal>9</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>736</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeActual</remote-alias>
              <ordinal>10</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1162</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>11</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelayCapped</remote-alias>
              <ordinal>12</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>13</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>14</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeScheduled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeScheduled</remote-alias>
              <ordinal>15</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeActual</remote-alias>
              <ordinal>16</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirport</remote-alias>
              <ordinal>17</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLatitude</remote-alias>
              <ordinal>18</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLongitude</remote-alias>
              <ordinal>19</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationAirport</remote-alias>
              <ordinal>20</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLatitude</remote-alias>
              <ordinal>21</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLongitude</remote-alias>
              <ordinal>22</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>23</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.480198' measure-ordering='alphabetic' measure-percentage='0.381188' parameter-percentage='0.138614' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Carrier:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ExpressJet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SkyWest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;JetBlue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spirit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='FlightDate' />
        <field-sort-custom-order field='Calculation_3516959494370541571' />
        <field-sort-custom-order field='OriginCode' />
        <field-sort-custom-order field='OriginCity' />
        <field-sort-custom-order field='Calculation_3516959494367801346' />
        <field-sort-custom-order field='DestinationCode' />
        <field-sort-custom-order field='DestinationCity' />
        <field-sort-custom-order field='Calculation_3516959494367354881' />
        <field-sort-custom-order field='DepartureTimeScheduled' />
        <field-sort-custom-order field='DepartureTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494374559748' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='DepartureDelayCapped' />
        <field-sort-custom-order field='ArrivalTimeScheduled' />
        <field-sort-custom-order field='ArrivalTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494379470854' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='ArrivalDelayCapped' />
        <field-sort-custom-order field='Cancelled' />
        <field-sort-custom-order field='Diverted' />
        <field-sort-custom-order field='TotalTimeScheduled' />
        <field-sort-custom-order field='TotalTimeActual' />
        <field-sort-custom-order field='OriginAirport' />
        <field-sort-custom-order field='OriginLatitude' />
        <field-sort-custom-order field='OriginLongitude' />
        <field-sort-custom-order field='DestinationAirport' />
        <field-sort-custom-order field='DestinationLatitude' />
        <field-sort-custom-order field='DestinationLongitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='DepDelay' />
        <field-sort-custom-order field='DestCity' />
        <field-sort-custom-order field='Flights' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AirportArrivalDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average arrival delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='105.0'>
              <calculation class='tableau' formula='105.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ArrivalDelay]' derivation='Avg' name='[avg:ArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' scope='cols' value='Average arrival delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average arrival delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AirportDepartureDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='105.0'>
              <calculation class='tableau' formula='105.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='ASC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day of week'>
              <formatted-text>
                <run>Day of week</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='rows' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='MapWithRadiusFilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='105.0'>
              <calculation class='tableau' formula='105.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
            <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
              <calculation class='tableau' formula='&quot;Departure&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_4686839867444486165]' derivation='Avg' name='[avg:Calculation_4686839867444486165:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Code]' derivation='Min' name='[min:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4577416469212676102]' derivation='User' name='[usr:Calculation_4577416469212676102:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' value='Average delay (minutes)'>
              <formatted-text>
                <run>Average delay (minutes)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' />
              <shape column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:ok]' />
              <tooltip column='[Parameters].[Parameter 2]' />
              <tooltip column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]' />
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Code:nk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Delay Type:&#9;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distance from selected airport:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]&gt; miles</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SelectedAirport'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='271' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='DESC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='cols' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt; flights</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='rows' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BestAirport'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_19' value='bottom' />
          <format attr='vertical-align' id='dash-text_20' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='77544' id='5' param='horz' type='layout-flow' w='98476' x='762' y='19256'>
            <zone h='77544' id='3' type='layout-basic' w='80476' x='762' y='19256'>
              <zone h='17760' id='11' name='AirportDepartureDelays' w='80476' x='762' y='60960'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='margin-right' value='4' />
                  <format attr='margin-left' value='4' />
                </zone-style>
              </zone>
              <zone h='18080' id='14' name='AirportArrivalDelays' w='80476' x='762' y='78720'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-bottom' value='0' />
                </zone-style>
              </zone>
              <zone h='41704' id='15' name='MapWithRadiusFilter' show-title='false' w='80476' x='762' y='19256'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='189' h='77544' id='4' is-fixed='true' param='vert' type='layout-flow' w='18000' x='81238' y='19256'>
              <zone custom-title='true' fixed-size='45' h='4240' id='17' is-fixed='true' mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='paramctrl' w='18000' x='81238' y='19256'>
                <formatted-text>
                  <run>Airport</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='68' h='6080' id='13' is-fixed='true' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='18000' x='81238' y='23496'>
                <formatted-text>
                  <run>Dist. from airport (miles)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='41' h='3920' id='18' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='18000' x='81238' y='29576'>
                <formatted-text>
                  <run>Type of delay</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='701' h='56720' id='16' is-fixed='true' name='MapWithRadiusFilter' pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' w='18000' x='81238' y='33496'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='18616' id='20' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the best airport</run>
              <run>&#10;&#10;Different airports have different on-time performance. &#10;&#10;To use this visualization, choose the airport you&apos;d normally use. The map automatically updates to show all airports within the specified distance. The color of the airport circle shows the average delay in minutes for that airport (either departure or arrival depending on the choice in the </run>
              <run bold='true'>Type of delay</run>
              <run> drop down). The average departure and arrival delay is shown in bar charts below the map.&#10;&#10;</run>
              <run bold='true'>Note</run>
              <run>: If the map doesn&apos;t change when you choose a different airport or distance, you can fix it in one of two ways, depending on whether you&apos;re viewing this on the web or in the Tableau Desktop application. On the web, click the small refresh icon that appears above the &apos;Find the best airport&apos; button at the top of the page. With Tableau Desktop, make sure the push pin image that appears on the left side of the map when the cursor is in the map does not contain an X. If it does, click the push pin. (The X indicates that the map is &apos;fixed&apos; and won&apos;t change when different selections are made.)</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='2560' id='21' type='text' w='98476' x='762' y='96800'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>Data</run>
              <run> Airline On-Time Performance Data - </run>
              <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120,&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120,</run>
              <run> US DOT BTS, all flights in 2017</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bon Voyage' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Book' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='178' />
        </style-rule>
      </style>
      <size maxheight='1450' maxwidth='1075' minheight='1450' minwidth='1075' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98896' id='10' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='552'>
            <zone h='3311' id='11' type='title' w='98512' x='744' y='552'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='95585' id='8' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
              <zone h='95585' id='1' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
                <zone h='6966' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98512' x='744' y='3863' />
                <zone h='88619' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98512' x='744' y='10829'>
                  <flipboard active-id='2' nav-type='caption' show-nav-arrows='false'>
                    <story-points>
                      <story-point caption='Find the best airport' captured-sheet='BestAirport' id='2'>
                        <currentDeltas>
                          <dashboard name='BestAirport'>
                            <zone id='20'>
                              <formatted-text>
                                <run fontcolor='#000000' fontsize='22'>Find the best airport</run>
                                <run>&#10;&#10;Different airports have different on-time performance. &#10;&#10;To use this visualization, choose the airport you&apos;d normally use. The map automatically updates to show all airports within the specified distance. The color of the airport circle shows the average delay in minutes for that airport (either departure or arrival depending on the choice in the </run>
                                <run bold='true'>Type of delay</run>
                                <run> drop down). The average departure and arrival delay is shown in bar charts below the map.&#10;&#10;</run>
                                <run bold='true'>Note</run>
                                <run>: If the map doesn&apos;t change when you choose a different airport or distance, you can fix it in one of two ways, depending on whether you&apos;re viewing this on the web or in the Tableau Desktop application. On the web, click the small refresh icon that appears above the &apos;Find the best airport&apos; button at the top of the page. With Tableau Desktop, make sure the push pin image that appears on the left side of the map when the cursor is in the map does not contain an X. If it does, click the push pin. (The X indicates that the map is &apos;fixed&apos; and won&apos;t change when different selections are made.)</run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='MapWithRadiusFilter'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]' field-type='quantitative' max='4134368.347865303' min='3968745.0915516447' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]' field-type='quantitative' max='-13112753.958976304' min='-13367726.603564436' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <datasource name='Parameters'>
                            <column name='[Airport Parameter]' value='&quot;Seattle Tacoma International Airport&quot;' />
                          </datasource>
                        </currentDeltas>
                        <capturedDeltas>
                          <datasource name='Parameters'>
                            <column name='[Airport Parameter]' value='&quot;Seattle Tacoma International Airport&quot;' />
                          </datasource>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Find the optimal flight' captured-sheet='OptimalFlight' id='1'>
                        <capturedDeltas>
                          <worksheet name='AvgDepDelayByCarrier'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                          <worksheet name='AvgDepDelayByHour'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                          <worksheet name='TotalFlightsByCarrier'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                          <worksheet name='TotalFlightsByHour'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='OptimalFlight'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_18' value='bottom' />
          <format attr='vertical-align' id='dash-text_17' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
        <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
        </column>
        <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
        </column>
        <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
        </column>
        <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='83694' id='10' param='horz' type='layout-flow' w='98476' x='762' y='11666'>
            <zone h='83694' id='5' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='80476' x='762' y='11666'>
              <zone h='83694' id='3' type='layout-basic' w='80476' x='762' y='11666'>
                <zone h='20918' id='1' name='AvgDepDelayByCarrier' w='80476' x='762' y='11666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21539' id='8' name='TotalFlightsByCarrier' w='80476' x='762' y='53509'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20925' id='14' name='AvgDepDelayByHour' w='80476' x='762' y='32584'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20312' id='16' name='TotalFlightsByHour' w='80476' x='762' y='75048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='189' h='83694' id='19' is-fixed='true' type='layout-basic' w='18000' x='81238' y='11666'>
              <zone h='83694' id='9' param='vert' type='layout-flow' w='18000' x='81238' y='11666'>
                <zone h='4160' id='11' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' type='filter' values='relevant' w='18000' x='81238' y='11666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='12' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' type='filter' values='relevant' w='18000' x='81238' y='15826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='13' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' type='filter' values='database' w='18000' x='81238' y='19986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='417' h='34000' id='15' is-fixed='true' name='AvgDepDelayByHour' pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' w='18000' x='81238' y='24146'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='11026' id='17' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the optimal flight</run>
              <run>&#10;&#10;Different airlines and different times of the day have different on-time performance, even at the same airports. There are different numbers of flights at different hours of the day. &#10;&#10;To use this visualization, choose the origin and destination airport. The charts will update automatically to show the average departure delay and number of flights. You can optionally choose to only show the results from a particular day of the week.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='4000' id='21' type='text' w='98476' x='762' y='95360'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>Data</run>
              <run> Airline On-Time Performance Data - </run>
              <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120,&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120,</run>
              <run> US DOT BTS, all flights in 2017&#10;</run>
              <run bold='true' fontcolor='#000000'>Note</run>
              <run> Average departure delays by hour calculated only from hour/carrier combinations that had at least five flights (to avoid extreme small sample size outlier averages).</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='AvgDepDelayByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgDepDelayByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='OptimalFlight'>
      <viewpoints>
        <viewpoint name='AvgDepDelayByCarrier'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='AvgDepDelayByHour'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>134.5</value>
                  <value>16</value>
                  <value>&quot;American&quot;</value>
                  <value>&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;</value>
                  <value>&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='TotalFlightsByCarrier' />
        <viewpoint name='TotalFlightsByHour'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]</field>
                    <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>15</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>273</value>
                  <value>&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;</value>
                  <value>&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='BestAirport'>
      <viewpoints>
        <viewpoint name='AirportArrivalDelays' />
        <viewpoint name='AirportDepartureDelays' />
        <viewpoint name='MapWithRadiusFilter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Bon Voyage'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='MapWithRadiusFilter'>
      <cards>
        <edge name='left'>
          <strip size='295'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Code:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportDepartureDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportArrivalDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SelectedAirport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='358' name='AirportArrivalDelays' width='384'>
      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
      yX2VblK/BQb+dh++7uJvteNa+jd8Ob29z124cOHCKDctcvlLJoiciZAgG0syAdnTmZWbY75L
      3fEch1gEf+B94n8C64xr+eL1Bf3vdr1Iol1BPvokCVi49rrZ5A160ySRYCfvn4nDNVau/cIX
      Kci7wv7pljEe28jJZ3io3gM42bhrI85xfQ5Jol1dJKZNZ9r5TzmfbScvp3+SKABERC4rMZq2
      309DAMrX/JhVI965OH7qAhIRuZx0/RsNAaDkblZexOIPugIQEbnMJOhsO821NxWTd5G74BQA
      IiImpS4gERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IA
      iIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQA
      IiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWA
      iIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEg
      ImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCI
      iJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlKWqW6AiFw9QiebeN53llvurMad
      nz3m9f1Nu/jZSx9hJU7+0r9jbUXRkMslQl4OvvgmXHM9y75dQd5wlSzWyaHfeIhNv4GKqsXD
      LztWyRBNz77IWVsJ1VXzGPseTy1dAYjIpDn71nG83hZOn02MY+0ujja1YxhhwoaBr/l3RDMs
      mT3dwmseD56Wgzz5q7Zhtpnk2NP/QKPHQ0tzB8lxtGpY585yvMVDy0tvMZ49nlpdCgARmTyW
      rPGfAyeDJ/DGAasDhxUwWvGFMpTsnHlsvs8NgOHZzSF/bMjFIid/xb72OGBl+dbvkT/ZfR7T
      SJ3127OuuO6UZPCEAkBELg/+V44DUFJ9DysWOYA4r7zamXH5XPdq7i6xAtC48xeEBi4Q62BP
      vQeAwsp1VEx69b+y+V85rgAQkctBF8daw4CVr91ShNM1H4CA5wSRjOtYWPy9NRQC4OOpZ/p2
      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
      yCWshUt5cPVQ9whMDY0BiIhMlvTjsX2n3uSPH5zhk3OpW3CzZs1h4aIK3EMN1k4hBYCIiEnp
      RjAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiU
      AkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIial
      ABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkp
      AERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIK
      ABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQC
      QETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUA
      EBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkA
      RERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoA
      ERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJA
      RMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQ
      ETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJvX/A9vEC9buyupvAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='358' name='AirportDepartureDelays' width='384'>
      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
      AxARmSypx2P7zrzBH98/x8cXkrfgZsyZx+IlZbiHmqydRgoAERGT0o1gIiImpQAQETEpBYCI
      iEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAi
      YlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiI
      mJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIi
      JqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiI
      SSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJi
      UgoAERGTUgCIiJiUAkBExKQs090AEREZg64gR3/bwPEWH+FY9zetOJy3cWf53SwtzE27auh0
      Iy+8eZ7r/gQ3ld7NZy5dunTpsjRaREQmpKv9CP9PbQOxPt+zWiHW5xt21708sX4pmUOs337o
      MWqbw6kVS3UGICJyNUiEjvUWf2sRazf8BxY6c8kE4l1BPL95hsOeAIbvII8emsPuVcWDtmHJ
      6BMLMY/mAERErnxdHNl3MFn87aXsqN1ISar4A2Rm5VG2ZhtbVxYBYDTv5WgokXZr+UX5gCaB
      RUSueIngKzSFAew8UL2GnDTLFZStY6Uz+fem37am3d6tf72GcocCQETkiud/+TgAVtff4M4a
      bslMSr9RDoDhbcQfH3qpBHO5+75yBYCIyJUtSnt7cuJ2ofvLIy6d6bwDtxUgTixNAFxIXMRS
      sFwBICJypUtereOgaH72KJaeSY4dIMzv3+1Ks0wCyFQAiIhc2T4lmrrM0zqq6zZnMHOWdVRb
      VgCIiFzRPottdPU85SLG+7GRF0MBICJyxUte0BnG/16aQf2BrMn/5M62DbuYAkBE5Io2gxtu
      SJ4CvOZ7e+TFI6/RkrpkdK59+DEjBYCIyBUtE1fpQgACTUcJjbC03/MCBoBjIfnDnwAoAERE
      rnRZxaUk7+/y8c/PtadfsPMEP20IAOAuL2WE+q8AEBG54lkK+I+pxzwEmmrZc6SVgbMB0eAJ
      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
      pBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBEx
      KQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERM
      SgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGT
      UgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSk
      FAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEp
      BYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExK
      ASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNS
      AIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQU
      ACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkF
      gIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoB
      ICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBEREzq/wcIvPnHHTS0jgAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='358' name='AvgDepDelayByCarrier' width='384'>
      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
      JM5gj594f+zKNEmEW56nqskAoCD/pnEuzdVPASAyVmKfEAOwXsO0IVa7MecOAHT+emlaDz3H
      uh31AFjzV/D5rNRxLtHVT0PkImMk8u7bBIDu+Z6D0afy0sTa2V/1I2q9iRfWmruE768q0ss4
      DHqNRGTCCrUc4J92VCeCFchdspZ/KMtRxTZMep1ExkjKXziwAtGL9O1M0cdyGGI0Pfdjdndf
      EOZkxWOPDjE7SAaid5rIGLGk25kFDH0NK3xw8p0xKM1EFuPQrm+z15Po8nEULuObjyxGN9C4
      dBoEFhkr5+OJQeDA67w96FVecdp8JwC4zn7tGBVsYvHt/3F35Z//4GM8qcr/sikARMZK2o3M
      cwAEePWNQeb4x9v5z87KLffTmWNWtIki3n6A7bWJNlTussdYVaJ7Jl0JBYDImEnnroUuAJp+
      VctA16m2HarBC2AtJC9TPbR9Nf+2Z5rnP+iGeVdMASAyhrIWfAEHgOHmf+06kHS/n1Dz82yu
      9gLgKvsC/e4UYXpBPMcSF3nNL5mjAcwRoLuBioyx0NHneLzKnfjF5qK4YDacPoG767sBnOU8
      taECzWfpI9LM9761s3vK58XkP7iRVSW6JfRQ1AIQGWMZBQ+xeWVp4kpfw4e7oaG78rflL1Pl
      P5iUmVx3Cau3t58dtaJMFmoBiIyXWIgW79t8Yp1J/MxHTM+6A1emqn4ZOwoAERGTUheQiIhJ
      KQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJS
      CgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiU
      AkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIial
      ABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkp
      AERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIK
      ABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZP6/wHMPRDM
      EEVnpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='AvgDepDelayByHour' width='384'>
      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
      SN3z2AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='BestAirport' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d1xc6Xn3/T3TYKgzQ0d0EE1ISEJtUV/tqiOtdtdJnMRvmp3keRyn2nGS
      x5s49mvHSezYb2Lv2k5cHre1vVVdWhUkioQAgZDovbdhgBmml3PeP4ARI1BdbbF1vp8PH+CU
      u13Xfa45Z37XuQVJkiRkZGRkZJ44FB90A2RkZGRkPhjkACAjIyPzhCIHABkZGZknFDkAyMjI
      yDyhyAFARkZG5glFDgAyMjIyTyhyAJCRkZF5QpEDgIyMjMwTihwAZGRkZJ5Q5AAgIyMj84Si
      ut8BUyP9vH7iLIIgBGwvWPMUm4pWMDPezde+8xb/8Lm/QSPcpZAH4G8/+bsU7v19fqfkmQc+
      59VvvUStMZ6vff6Tj16xHx+58fHUDBkJVz6G4t4zRL75b19g9299iuyUqA+6MTIyMr/C3PcO
      YLSlgZe++G/09PQE/ExOmQHw2C2Unr+MV3x3DZE8Hu72UqK3v/8y33/j/KLtggT4HuOrjHyP
      r6iluFs/Hg6J6itlTBjNj6VNj4xo50jJx97rIZORkXkPue8dAEBSaiFf+tKXltxnSFvN5cvH
      Hmuj7mSkt4thg+49reP94PH0Q8mP3r74WNrzrpB8XK249kG3QkZG5l3wQAHgXrgt43zplVf5
      58/+BQDmoQ5+cLSSHUUZvPLt/+ZWWydxian86398g+yUeP95zQ3VfPPl79DWM0BKagbtjR0U
      ltxZusi/f/7veOd8ObaQNpxD9QDsKvkoe7etnT1E8vHWL37Ej199jZGxCdZu2sG/fuWLhAXN
      ds1pNfHlL/4zZy9VEaQN52N/9Ek+8bHn79qfaxdO8J1XvsvQ2AT56zbzhZc+R2JMpH//YHcj
      L/3TF2hs6SF2WQqf+bt/ZMdThXN7Jd7++ff5wU/ewOoUyVuxkj/4xB9RVJB9/37MMWkc4Sc/
      /hGVV6oYm7CwPC+PP/vUpynMT/Mf85//9gU+8iefJSEyCBD515f+ib/45y8yOdDCf37j24Sm
      rOSlv/o4r//wZfQpKzn5+g+putFCbEIqf/Xpv2O7v73gdszw1S9/kePnLiMJavYcfoG//5u/
      IFg9e3P4+g9fJm/zYbISg/mvr/8XNwet/MXHdvPzt05hcU3w2c98BgEgOIqvfPHv+FA/PZOR
      kQngXX8J7LaaePl/fuz/3z7Vz9/+9R/zJ//wr+w49Fv89Gc/Iz8xlD/5i3/wH3P90gl2PHOQ
      5as387V/+yoffW4/gsuxROkCq9dtJjUpgaS0HLZs2cKWLVtISYj2H/FfX/8cr527xp99+h/4
      4ff/h57as3zju7+Y3Sn5+H8O76Hfq+PoiTN871v/zn9/5bN85+cn7tKbCb72yi/58799iZ/9
      6IcETXaxY+8R3OLsYybr+ADbdjxL0bMf4XzpRT7zp7/N7xzZQ0PnMAAXXv8en/niK/yvv/x7
      vvH1f6VoRQpHT73zQP2Yp7G2nK7RGf74k3/Dt1/+BmszY9m5bRujMy7/MT/+n5cxzbjn/pP4
      wbe/TUdDFVs27MQqhbBp7UoAzp94lU986s9Zt7OE1177Jc9tX8ORAzu53jIwd67IHzy/h+p2
      Mz/40c/4v9/7Js2VJ/jox//KX9f5E6/S0tTBgae2cqm+i13btxAdm8yW4o0oFFqK5/qyeWMR
      7+IrIBkZmQ8C6T40Xzgm5a3eKVVXVwf8jE5MSpIkSTNDzVJ0VpH/+OFb56XCTQclcUEZ0331
      UlbR5rn/fNLu9dnS/33zYkA9n/7Eb0g/PnZuyTa8/NJfS5/7+k8XbX/1vz4n/fnffTVg25vf
      /6r08b/5P5IkSVLj1dPS8jXPSt4FjWm+clLK2bh3iVq8Uk50tGT2Ltjk80g7VqVLR0vrJUmS
      pG/+y2elP/rLLwW27cufkf74s1+RJEmSvvW5v5Y+85XvLNmHe/XjfvzmrrXS2xcb/P+vWx4n
      3RqwLGh3iLSiIF86X3E94Lw/eWGLdOz8rYBtX3vpz6Q//Jt/liRJklqunZWS8tZJrgUD5HGY
      pey4WOl6p9FfRnpqpvTl//xBYKO8FilOt1zySjIyMr+qPNAjoP7um3zm058O+JL2c//yNZ4t
      Xrfk8SpVUMCnQaUqyP+31zpKVS8cP7zzEcLV0nUtRBMUAtIUADeuXWVz8TrGR0f8+3XJyxm6
      3oDNB6FLPK8I+BSrULF7zx7qmls5tGM1N65VsfEjn2Zk5HZ5WZkF/ODbpwHYvGcH/3j4D/BN
      j7B/99MUF29CG6R+6D7drLvKsRNnME2akYCm3lFmrOP3OMPDl//ze+zavPYex8yyZ9cefvGF
      VwGou1pJSckRNMrbvVYFR3DgYDE1tdWszdwPwHO/97/5+0/9/kP3Q0ZG5sPNAwWA3FU7uHT5
      9cdSodNiRp8QheZ9yECwW5yUnjrKJ3pvBmzf8szWB35coVQq8c0pnOwzDl75+r9w9Gf6gGM2
      rt0EQOGWEuqulfHqq7/kP77yeT56o5mXvvJffOoPXnzgNv/om1/in7/5Gp/9279i0+YkFIJA
      V/39vvSNZOe2TQ9UfpBGwXyYs9udBKsXS0m14Xo83tv6np3bdj9o82VkZH6FeNdfAj8sIVFx
      WHp7mHL60Ac/xFeGwsPLPZdlpbGieAcnfvLthz53FpHy8lI+9vnfByApM43V65/jMx//6F3P
      SMnK57MvfZ7PAv1tNaxd9wIf/70X0c4HvPv041uvvMLrJ6+zJjPOv+2XL0fe44yH43xZOTmr
      sgBIzcrk1Z9dveMIiZvVNaw79Kn7FyZwV+mujIzMh5/3PRNYEWTg2S3p/MM//btfwj862ENt
      /a27nhMRE0lNxWXEh7za7NxbQs3p1zh28Yp/m91i4stf/cZd9Osi3rlPvpIk8t2vfZGGqVAO
      7SwC4Dde/Ahf+/IX6Ogf9Z8x1NvGt77/EwBOHX2NnsHb+4JDdSg1Cv/dxoP0I0ilZmhkgrlG
      UH7qbc5XtTxcxxfg9Xr8fzdcLeUf//1/+NTH/wiA7fuep/XqcY6X3g4C59/4LtVDSvZuLVxU
      VgCKIMIVo1xr7HvktsnIyHywPNAdgPQQ+g5BoVp0vAAIwu1P+//fy9/nwIES8o79gsTYMExW
      N3oh6K61HPnoJ3j5B8+Sk7eSqIggPv6Xn+fjv30QQamGpc6a26TVJ3H09R/xe7//ET5nSCBc
      q2agf5CP/N5fL1lXXIKWNTkZxCcuY2JkkIjEbM6ceJvguWfkRc++yBf/rJWt61aSlrkcn9vO
      1LSHf/zK1wEQ3VZ2Fa8nPi2D6IgQrl9v4KWvvkyw4t79WMjn/s9L/PZz29i4qZj+9k4y1z5F
      Tk7qPS0wO+ZL84mP7eGLKWkoJTeDY9N87Ye/YP2KZAA0YdG89dpPefG3XuA/cnLxeZ20903x
      5htH0apmG333Mdbwxf/385RsLSK/IA+XEE5N2al7tFJGRubDhiBJ0gdyFy+JPjrb2/ASRHZ2
      BkrFvYOMJPro7+9DFRRKYnwcwkNoDiVRZHxsFI8I8fHxqJRL3/iIPhFR9DI6NkaQNoyYKP2S
      x3k9bkZHR1EHhRAbEx3QFtHnpbe7G7PNRXbOckK1wQ/dD8vUBO1d/aRmZBJjePTHP3/64lYO
      /K9XKF4Vg8PtIyEhHqVicd+9bic3bjQgKTWsXl2I+i7jsxQz5knGjFMkLEsiVBt0/xNkZGQ+
      NHxgAUDmvWc+AJTsKvigmyIjI/MhRH4b6K8x8cvSCNG+79/zy8jI/Iog3wHIyMjIPKHIdwAy
      MjIyTyhyAJCRkZF5QpEDgIyMjMwTihwAZGRkZJ5Q5AAgIyMj84QiBwAZGRmZJxQ5AMjIyMg8
      ocgBQEZGRuYJRQ4AMjIyMk8ocgCQkZGReUK5ZwDwOGYoLy+nprYOp9sLkofO7j5AovzCWepu
      tdHb0cypM6WIj1C5y+W+6z7jcB9mu+eu+++Gz+vB61u6Nc3NjQ9d3p00Nd3C67DQNzSO12Xl
      5LHj9AyOU3O1jOrrd1/T4F7caxzueo57dpH4Rx2neyGJXs6ePklrZ89jLVdGRubDhfLzn//8
      5++20zU9St+0l4wEHW+dvMDqVSuwWm2ILgvX6tooyM2krPIKa9auITwkiOaWVoJDwhF8Lpxu
      LyOjY4QGq/3bvU4bk1OTDAyPYogM4+dvvElYiJaQ8EhUSgXGsWH6BoaI0OnxuOyotWHYZszY
      Z8x4PF6MxnEGh0aIiopC9Dhpbm5FFaRFo4QZu5ORkVGa6soZnBaJDAthZsrIwNAYOr0ehUKg
      vv46KgHMNje6iHCGB/oYGjWiNxiYmpwiJETL1OQk2uAg2ttacHohIiwUAK/HSXt7B7daW1mR
      m4PN5aWn6To2ZTjx+jBq629QWFiISvDR2tZBeKQBl20Gr+hjzDiF5HXS0dWLISqKGfM0JtM4
      YxNmgpTw5rFjhIVHotfNvvrZND5Cd+8ghuhozNNTGEeGmLa50EWEAzBtGuf40ZPooqLRqATU
      2jCsZhP9fb1IgpL+nh40IeFolNDS3AyqYP9rqcdHh+nt7UMbFkmQWkVvVzvTNie6iFCmpmeY
      GBtleryP9lEbhfk52C2T/rZYpqcRfR4mzRZmzNP09fWjVCrp7ulFHxXNzNQE3b19aMMikDxO
      jBOT9PUPYIiOxudy0N7RiTY0HId12j8W93sNuIyMzHvHfR8BaYKDSUzJIMMQxIxXor2pCVHy
      oVBq8Pq8KBTg9fg4ffw4ETodJ0+dYqS/g+/98Cc43IHbOxtraGgfYGKgjY7BKSTx9gpcAEbj
      BMEqeOfCRcZHejFaXJx485dU1jbgMo9TerUeleTkzIUyTh59G21YGCePHcc2Ncor3/kekxY7
      kigier2IootTpy+iErxMmx0AOM2TTDt8VJaVIyIyMTEFrmlKK+q5WFqKhMSlS5eoLruAzaem
      puwc0w4vAMfeeB1BpUHy+cBro6ljAK/Pi1Kp9o+Dzydy4vhJdLoITp48S2djDT/95VG8Xicn
      T54jIkTFmXOXqK4oY3BsmrbaSqacXkRRxDe3TJjLOsGpC1cJUvo4dfYi5edPM+XwUlFW7r/L
      EiURUZz9mR+nMydPoVAH89prv0AdHEzZpUtcOHsKdWgE506ewjv3yr+zp08SEhrCsWPH6Lp1
      jW6jnc6GGnpHx/jut16hZ8SE6POhViuxTY8GtKW6spyjp84giS6OHT2PBievnziPaDVR19yJ
      cXwCrTaY06fOMdrfQfm1BkTrBLWNHbz5+huo1Gqmp0wBYyEjI/PB8cDfAVidXoKUAgIQHRND
      TEw86enpxMTGkJOdwfSMhd7ubsIj9QjAzt0HyM1KZWrBdoA164pISVqGhJKYmFhycnIIVitB
      dNN4s4mOnn7cbqe/Xn1sEof27yEsJIj05cvJWVGI4LGiDNOTmZ5OdpIes1Nkw7adFK3KJSY2
      lpSMLAy6KHKzkrjR0Ih97nFJsM5A4YpcYvR63DYLTa2t9I+M4bQ7yIzXcfPWLXTxGYyYppkx
      jRAcHoHH7QMktJF6cpZnYtCF+9sWGxtLckq6fxxSkmKxTJno7u7FEBUBwP7nnic5OoRJm5ve
      wVEiIyMQVCGsKyokaVkMQaE6YmJiWZ6RCsCM0UjeqkKW5xYg+Nz+Nsfq9UxPjHLy5ElEdRhx
      MTGkJi/zt8UQk8jyrEzSM5eTlZlJUBBMT08x0t9LRGSYf/nNuKQk0tMz0EdoGR0exW03IwQF
      g8/NijUb2fZUEXExMcQlJqGVfAFtERQqnn/hReJj9KRmZJGZkUpaRjZZGSm4vR7a2m7R3t6B
      c+6R1srCtWRlpODxuQjXGVielUWCXhMwFjIyMh8c9wwAggA3a6t46803CItLJkix+BRhbkmr
      lPgYHG4P82+XVqs0S273ry4oCESoRE6fPcuUzYMkerE5XCgkH+LcQYIgoJorB6CxvpY3fvFz
      4tPyCMXF+YultA5b0WsVaNSz773X6QxUXTpLV1cnY1M2QjQCk+YZFlYuAR63A5co4PPMPj9f
      tW4db7/5NuvWriQ/K5XxSQuiV0ShFAABl9XC+QsX6Bkcmy3pjkcXs+OgJCY2Bo/XhyTMjpNa
      o0KpNRCtlfB5PSiUqjvOA8f0OBfLqwAwLEuhsaaSc2dOEmGIuz1ggkBkdDwHDhwgOjKUsfEh
      qmrqA2wwX95sTwXSUlMx25yI0u1hH+zp4vTJY4jqCLLy8pkYN+L1iqhUSlTK22MtLNUWQX17
      NTVp9iBBmP1QICBhtthQKRX47vgORiGokLx2zr7zDp0jjoCx6Gm5weCYBRkZmfefx7oegNvt
      QqXWoLhjncO7bQdwuVwEBc0uJej1uJEEBWrV4kVM7MY+avtn2Lw6D6Vydn1hu81GcEjIonI9
      bjdKtRrJ58MnSWjU6qXb63KhUN2+qHm9XlRzdXs9HgSFEqX/gifhcLrQ3rHE42IkXC4PGo0m
      YLlHSZJwezwEaTSLzxBFPD6fv52iz4fL7blnXeJc35Yaq4V43G6UKjWKuYD1zjun2Pn0bv95
      Pq8XCQGVSrnk+Q/Slnl8Xi9eUSJIs/R4e9xu1BrNPcdCRkbm/eNXZkEYn8eF3S0SHqr9oJvy
      K43ZbCYy8tHXGZaRkfn14VcmAMjIyMjIPF7kRDAZGRmZJxQ5AMjIyMg8ocgBQEZGRuYJRQ4A
      MjIyMk8ocgCQkZGReUKRA4CMjIzME4ocAGRkZGSeUOQAICMjI/OE8oEEANHnxbPgLaDvBU6H
      A/F9SnHzul3+t3k+Llwu12Mt73ETmD8o4XQ+/vY6HA4k0YfjPSgb3hu7fRjweT24PN53OQfe
      G5veidvl4t1awOFwBPz+sPAo17nHMR53R8I4NoZnwbu67hkAWm9e55ev/phXX3ubhuaOd119
      S+PsgiwDHbfo7J/0b29qqMd1nxVlTKP99I+aHriuusulOESov1F/z+Mam5tn/xDd1N9seuDy
      A8qoucyE490HNNFjpamjH4DLly8+1Ln19ffu511qpKXx0fp86q1fMmWffVU2Pjull2oeqZx7
      UVpWjuic5HJN82Mpb9o0xtl3zvLf3/0OZ9+5xM3HZLeHwe9v7+Lc+82FqYFOmjsH/HPgkVjC
      pgv9837Mz/X7cenC5UdaTGohpWXlAb/vpL+jCdPMwy+61N3ciPMhGjd/Hbvbde7uc/T2PHwc
      43En8/2vvfQOzd39jAz00Tcy6z/3fJNY7qoitBoF9qAk8tJjuFZxibGpGSKj4tlevB5EJ7V1
      Xaxbl0dtdR1BKh99IxPEJqYQH66kvrUHtSaU/bt3YJ4Y5dz58/T0j5CdHs2VsvM01SrZtONZ
      JI8XSRI5+fZboNJQtGkn8dGhlJVVsm3bFq5UVrIiMxmX28O18otMWBykZuThtk6xen0RzbU1
      ZK0t4vLJ4zg8Pgo3bvW/FtPn9mIxjVFZXcfIyCgf+c0XuXi+FK/XTfFTxZw7f4GB3l6Kd+zC
      53QwNTbAhfJqJEFByeHDnHnrVVTaCLSRsezautE/Ni6rmRNnzhMUricpTODC6ZOofA6ePfgC
      NyvPYnF6iU/LIysu5HZ5h0q4cPKov4+t18uwuT1k5K8lLzOZloY6ztd04LA/hdMyxfETJ3B5
      BV44vJdTJ47j9UqsLd5Bcpye3rZmmrt78UoaDu1/Bo9PZKy/g6auYbyoEW3jiIIKITiC3dvW
      c/zYCXwSbNz2LGP9bZhGRyE4jNbGRkxWJ1s2FdHRWEdwbCaxwW4auk04xjv9/dArbMQsL8Q8
      0IImOgt9fBL6YDhx7C0USgFRGQPAWH8HF6/eRC342Lj9GYY7bvp9JjdJ529fiGRh2uHFPG1B
      FxlOUGQMKzPiqG1oweH0cuTIIf9bTgWg/FIpm7btYKD1BkGxy1kWHcb167UUFa2juvY6cREa
      6lv70Bli2bgqi9MXLiOJAgcOHyJYNfs5RxcVx57de3jn3Gl2P7uDG5XnAuzWUHEuwB5j/R1c
      rLqFQnSjDQ3FbnXy/G++QOkCPxtqu47FKeLwCjx/aB8CUFtZxrjZgi4mhVit1z9uipBYv79t
      2ryFy+fP+m3SeO0SXkGJxTJDeHgYMQnppCeE+cfjqfUrOX/+AsNjk2zMS8Hl9tDZXEdTxyCp
      y3PwTo3568yOnnsZnyDgNI9zs8fIU0X5lJdXsnXrFsb6O3BpYonEzLhbQ9fNKr+v7NtZzIkT
      x/02bWqooW/IiCZUR0Ko1++fIT4rPaMThEZEU5AZS1lVA9rwSPY9EzjXt2wp4uzZi4DEM/tK
      0IcFc6vumv86IYhOThw7jsPu4vnfOMI7x47hFUXy1mzENNxL8eZifvbjV/nN3/0dqquqeOqp
      TYhuK8dPX8TrdbNt177bfuJ/+6LI2eO3baQUJDw+kaorVxgfGyYlJY22ngGUkpvNT+/FPNBK
      28AYaq2OXetzKL/ehNnqZKqnjZieATYUreFKRSUalZId+w8RrlFQWXGF4k1r+Nnrp/md33qO
      qqpqwlRKpu9xnfP4RBCd/PTHrxNhiCAmIYNN6wrobm/h3PnzmKzOReNx7mTgvO9rv+X38ySd
      kltdI3hcdvYcfI7W+iuYzDaiEzLISY7kfFkVhph4MhMicDutXKlvIyNnOd6YCJTBKprrqh/m
      EZDIuMnCoZISzBNjc1HKx4RpGpCYNpmYMI4TGq4jJzOD6po6stLTmBzoxi5CZHQ8+Tk57N//
      LGoBntq2i3071tMzNILFNIFP8mKcMLMsNYuYqDBAwDZlxOawYZycweOwYbU5MI5PoIuKJT09
      CdPEJBLMnS8QFx9LiFbFrVvt/lZPmyaIiIqjMDedhLQcwrRaYqN0qCUPnWPT5Obmsm//fiJD
      VEybTFTVNlBy5Hm2rl7OrdZuQiIMHDxYgnvGHDAaDTWVFD+zn4N7ngZg194DrF+ZzfBAD2ZJ
      R8mh5xjtab2jvA5/H6NDPXSMmEnLyKShvm424ObnkVuwlnWF+QSH6yk5eJBwjQrTYBcWj4rM
      zBTqamoB0EdHo1Gq6O3sxgeYJidx2q1MOyV27ywGZQj7DxzEZzHT1tJA9trtHHmuhIaaa/R1
      tpGzbgu7n9lBfk4uWzYVAZCWkc61q1epu36dxLiwgH5YzSZcXgmb1YzD7aO4eDODnU3EphWy
      f99uVHNzz2m3Urh+K/t2bKB3eDjAZxwL2mf3wsEDB4k16DlwsATPjJnwSAPaIA2W8V5M83cX
      cyTHhVNzs5OGlm7io8IAME0a535PMmGcQKMNZUV+DjdrrhCzLJ2oUIHWzoF7evVCu91pD6fd
      yur1W1mVm8zKjU+TkxTJtEMM8DO7F/bv309ShMT4zOyrxWPj41Ap1XS0tQWMm0cV6vc3Y39z
      gE1QhXDwYAm66GhKSg5hNg0EjIfakExObi67d27xz4WbbQMcPnyI1fk5AXUuJDgyhr72W0wM
      duJTR/j7ZXO4/eUs9JWejkCbxsTEoVKp6OpuD/DPuqYW0lJT6eruxDJlwqdQs2rFCiBwrrfU
      XmP73hJKdm/lWu3skqkLrxMogjhQUkL2snB6OtvRJeXw3PNHaLnVgMc6RV9vDy6fm87ePkzm
      2XVCBFWwfw639vQtYdXAa8G8z7a3NLJ51z70oUpWFW3hSMluaq7dpLV/nMMlhwjzTDNlddA9
      Ms3zh/aTn5vLM3v3ER2mYtpqJyt/FeGa2UvmpHGc7vYW3A4HfT1dOAjBYpogLOru1znT5CTg
      wxCXNmfj2bupjOzc2/Nw4Xh0tC+a9wv93GqeZPMze9m9ZS0NLW20tXaSmppGR0sDlVXX2V/y
      HDu3FmOzmnFKQeTl5rFv/z6UXjt2h5u6ppaH+w7A5XIhIeF0OPzvl/f5vLgcdjwirN20jTUr
      lnPy1BkUSiUR+iiKt29h/uXALrfb/+xYEAQEYUH1Ihz+yIuoHONcqW8BYN2aXF796avkrl7n
      P2zLrmfITovn9OmzSKIXnyhhtduYGelmxK5kc/EG7nyxscs2TVlNC3ueLqa7uR5lZBIb1hbM
      Vut14xUl5h9pa5QSVpsTs8WCWhPsf0gmCAJet4sZ2+xzRo0mCLPFitvtntsPCoWAoFDjss8g
      iV4cbl9geaqg231s6ECtEIiLi2fjurXzleB2u2bbMlevQlCg1mgQlGriE1JYuyYfgNJLl9j6
      9C6WxUUF9DUvd3YSIgGSiM1pJ0SjwWKx4LTPICrUhEXFkBofNWcTD/OdV4fo0Uo2ek1OEqMj
      A/qBJOH1+rDbbP66FAoFbrcbtzPwWfOsbefWUVjgMwHtE+b8wH+OgrILpax9aitZqbcXupkn
      LXcNfTfL0YRHo5w7yevx4fO4cLo8ZK5YzbZNazh96gRqjQaNNoTcVUUsi9MxNTm1qLzbbZ23
      m2qxPe48ViFgGe0K8DNp7ontxKQVbdDslqraenbt2kGYNnjRuM37W5A60CbzIyHM/1YIi8bD
      7xvz+Fx4fCJutyuwzsBWs2r5Mn5ytIz1cz6PNDtvbXa7//95X1ErA216qbyKXbueJjoyLMA/
      lUBUTCxbizcRk7ycA89s48KZM3jm2jc/1zUaNRaLlRmLGc3c678XXicQFHM2UKDWBDEzY8Hr
      duLzSRSsyOGNt05y6LnDvPPWGyzPn/WdO+fwnVjuci2ITUwnKmJ2iVdJkpg0GgkJD8XnduIV
      JWYcLpQKyMvPnV3jQhBxub0I6hA+8uILjPfcoqVn9kNHbkYcJ8ubeW7fZl5/8wQFBbn+eu55
      neP2ncrCNUX883DBeKiWmPcL/Xy2HzA+Pk5YaDiSUkVsXBxPPbWRYLWCGZvdf31aCiX3WRMY
      Zh0yKCSMUG0QoUEKKq9Uk1e4lhhDJAhqRvvb6B0cJTktA9vkKE3tXWTnFbB2ZS7Xa+uYcXhJ
      T0tBIUCQSqKiqo70rExCQsMJ1apRaoKJCA8jUh9J9ZUKpuw+1q1ZTbBGRWhkFNNTZtatXoEg
      gEYbxkBXC529QxQUriUlXkd5xRU0ITpyCgro72xh1GgmPS0VQ5QencGAUlDgc1wUS0IAACAA
      SURBVDuYnDbT2dFBTsFaOhuvY7Z7SUtLIy1eT1lZBTFJ6Wg1agoKVnCl/DIzviA2FRUgIGAw
      GEAQ6Gqux6WOJEYXTtyyZBrrqugZNJKZlkyYzoBaqSA4LIowhZ3qupsUbSwmPyfrdnlr86iq
      nOvjug3ogkSa2zoI1UUTY9ChUGsx9rViNDtJjI+drReBuJR0PNOjdPT0Ex2XiC4ijGC1wLWa
      eiKjYklLTUIhCBj0eoJDZse1+koZfYPDrFy3gczM5fS01NPeO8L2HdsIUqnmylZgmR6na8hI
      alIiABrJgS84lvSUZBRus78fCYlxVFVW4JU0ZGZkEKxREq6Pprf1Bt0D46RlZhBtmH3N9Hwb
      VJoQEqPC/D4TbYj072PBuOoNBgDSUxK4du0aqpBI0tLS0KgUGPQGFCoNhsgIRno7KSzeQbh2
      9iPF1MQozW29JKWmovQ5qLvRSHJaNmuK1tLR2MDw2ASpaekM9PUQFxcXMAH1+tk6F9otKkQK
      sMd8X0K0akLDdQSrlRgSkhnqbvX72Wh/O509fSQtLyA1PhoQsFunaGrtJjkllYzlGQHjlqDX
      UlZWQVbhJkY7by6wiRJDlAFhzo4gkJ4cOB4q9wx1zd1kZaSg0YaRmRxHWXklojKYUA3+OuPj
      Y9BowwgN1aIzGIiNjaKje4j1q2cvoCGhodyorcLi8JKekUlLQ7XfV9LTMwJsGhOmpv5mM7GJ
      yaSkZPj9c+3KHOpuNOCVlOiDVVTV1hGTmExGymywmp/rm7Zv52b1FUYmZti2ZRNKhUBfR4v/
      OhETpUMfZZhdgCgxHbuxl5uN7Wzeto3omDh8Ponc7GxEUWRlQS4KAcLCImi5eXsO6yJCMej1
      /rHThITR07HgWmCInLOfAkOUAfPEKJXX6rC6fOzY9hRx+lDKK64Qn5FLanw0Sk0wkWGh6KL0
      VJaVoQ2JpOFGLT5FMKtX5aFSKtDp9UiCiuycbCQJcrPSkAQFOoMB7V2uc7rw0DnbKjEYIhf4
      4e15mJKU6B+PqGXpYBkLmPfGkQG/nyu9M9Q1tuJThvFUUQGGsGAabjWj1ISyoaiQa5UVjE/P
      kJKU6O//fNnBIeFkJMfJr4N+GIzjY8TExt3/wA8B12vrKLrLJ9m74XGYOX62jAMHDxCk+nAp
      hEcHe7jZMczunZs/6KYEUFd3nbVriz7oZtyTC2eOk7tuK8uidUvufxRf+VVmfKALlzqa5Phf
      7XUxuprqicpchS546cWcHgQ5AMjIyMg8oTzwx7zHqd1/P/IAHhSn07lo24dNT7wUNosZi9V2
      /wPn+KDzCiTRy62mlvse9/DtfH/06u8fEg7HYp90LeGnD8vjKGNJJBGXy/Pg7XgffPH99Hev
      x824MVCW63I6cHu8i7Y9zHXvUe0lib4HtscDB4A7Na2Pwt30sR8kpRfLFm+7i554Ie4Z0wNr
      ouHBtMgPqjv2Oqb45fGzWO8TAPzliTZKS++u07+XNv3R8gsWl1lTVkqIPjZg2/wYjg52YbTM
      TtiHzX94NzkI70aT/6jc3w9EKkovLdp6qewhx2UJLpVdfFf5Lncy71/2iQGqHzRP6D6++CD+
      9iB6+vv50Zljr/OVf/kS3/jPb1Fdf/8PJvfiB999hfrm1oBt1y+9Q9MdCrTaS+/Q2ffg171H
      tbnD9OD2uGcewMRIr1/fm58UGaBptQ63+7Wz+ck6VIZ0RjtqCU3IRjkzTGhMElVXrqJUh3Do
      0F5m7qGPtQx2+DXFO7ZsIFDHu4WBrnZ/PkBuZjKXr95AUKrYs72IyutNmK1einKS/Lr4kj3b
      57TMKgzxGSzTKQJyEgCuVZRiNDswTdqZHO33l3no0H4EQcBqGufi1RrcDic7txfTPjAZoKVW
      aVQ4nC6uV1UwOD6Fw+bkyG+8SJBS4MzxtxdpuhN1Ah6fSEXpWaasHpw+KNm5nk6ji/zkSOra
      hrlReo6YngE2btzE9auX/frf4fZ6f+5DQV4GDTXXcDrtWKxW6t6u9OumZybGsFtN6OIyWJWX
      ysVzc+WtX0178w08HhOxiVnEhQn+sdqwMtOvL9+9c8sijfW8dvn8uQomzRZW5qXS2n1be3yj
      4p0FuQJWhkw2EATqbtyYy694lsgQNYMmCxsSo2iuq/bbetv6HBxOF1dqLuNQx1C8aSODPR2c
      OOElRBfL6qyE23Y5+DQX59rw3IvPo8EboFdfWG5eip5L1Y1+nfdQa4NfI58Zp6Wpaxinw05b
      ZycDvb0UrSlk3OabtUP7OIJrEtPoKOkri2i/WRugw74zT6T+ykWGRibZdfAI+lBlgP58cqR7
      tpyCVfS1dTFptrB2TTYal52KWw1sKV5P5ZUrLIvSLcjp2LlAzy5x6exJbKICm9tHf2ez3493
      bczjtZOlhASpWLluMx7TQED/F+ZizAy30zk4wZBxAhQqfE4HnY3XaegYxOdx8Mz+52mrK8dk
      cSIptZTsexokHyeO3tbkW8d6A/1c4fX716rMJG5UVzPZ20LWqo2ES5ZF862i9CzTNjer160J
      8MVEnYLqhnYUSjWHD+/H4xMDcmyKC7MC5qYCHkhPf788mr2HXkQp/YKklU8TJo5yofI6m/IS
      uFDTwcxoOy4fCMFR/M7hXfzwJz/H4xN58aO/S5w+nI7GWs5cvoZGG86zW9bSPTyGIdUKgGm4
      l5+/dRzb9BTPpq7kjZ/9CKPFxvqtz86nJnHq6OuMGidJyChAsgywbudhehrKiM0qIj0xiub6
      Kr+9Fub2pOiVAfkKC+2/PDUBr8vG8eOnEXATlbk6IG/LoPaStmoDtRePk71+F8OdTSQmRN37
      DuBOfe9CTetC7axWH82tW02YzDZ6Wptp6xlBIzqwu0VWFa5Ewb3zABZqimdZqOPtCMgHuFJV
      TXpWJgrXJL3DU3Oa3d0Buvi+zmYSMtey9+mnGDeaF+UkSD47Q0YXBw/sJy46MqDM/onZxz/B
      YWHowrR4nGbGrapFWmrJ58Y0bWVy0saBkhJykiMxO+du75bQdM9rke1ukZKSg0RoNHjdTqZm
      rLNlmZ1+3XGQwxig/12Y+wCQl5dHwdoNxAV7A3TTU6O9GJJzWJWfBYLaX158dATL81dTUnKI
      qYm+gLGKSU7368thscZ6Xrvc2t7NkReO4LLc1h7fuFF9R67AJFKIge3bti7Ir1ADImrN7GeN
      hbaeH8O8/DyKtz9DenI8SWnLOXiwBKdl+g67WP1t0ChYlIOwsFyn3Rqg816okZ/Pldi/f5+/
      jWEq7207TFv9eRLRCvsiHfadeSKNTa3se+4I+lD1HX7b7i9neUqsv+0emxmHqGZ8ZADb9Cgz
      zsU5HfM4TIM4g2M5sG8/uhBVgB9bnU5S81bx/PPP0XKrblH/b+dijNDWO8yhkoNkJscxn7Nj
      NU+y5dkDbFiZzdjYGGMmLwcPHsDjsAAwNdQV4FuL/HyBf8VFRbB6/SYOHdpDf0fvovkmuqYw
      OoI5eLCEpFh9gC82NLbx/POHWZ4YRveIBdPkZECOzVJz80H09PfLo/EjwbK0LK5fqaDueg0J
      SakYLS7+8A8/gTDdR/WNWgStjmUxEVRfn71jvHjxCn/4iT8lw6DBoYghLmEZLxzcMxvoyi6y
      +8jvsmVdIa7pEZoHpli1Ipuyy1f9VaalpWGIMnCz7joZKUlUVlVz/UYLSfFRgBRgr4W5PXfm
      Kyy0P0BTXRWrtjzD7u2buTNvK8oQRmNrJzani+amJobHx/E6rPcOAAv1vV4pUNO6UDsbpk/A
      OtaGOjQWQbQhqIMIiYjihef203j1AuPW2edRd9PHLtQUw2Id78J8AI1SQUhYBGvXF6MPUfk1
      uwt18dqQYIZHhhkZGQVYlJMgCAq8Hg+S6MPpci8qE+BG1WWSctdSkJMJAou11PPM6XZvf2qD
      pTTdfvz6/rlM5QUa8Xnd8Z3634W5Dwu5UzeNKoK8rNTbrZgrb368QUChEBblECzUl99NY52V
      vQL1nADfrz0O1wfmCgD5+bN66MD8CgWSJCxp6/m2uV2L8x/utMvCNtyZg3Bnubd13iGLNPLz
      uQjzbUQKtMN8nsRSOuw780RSszIJDZqVpd7ptwvzLRa2HSA/PZZX3zxH0fqiu+Z0KJRK3G43
      Pq8bt0cM8GOVAEhgNU+iUAUv6v/CXAyf1zeXixH4XNzvt4KCGesUpgkjNod7ad9aws8X+hdz
      9QmCsDgHSKHG47QiSSJutzfAFxF9ON1eLOYZgtWzapaFOTZLzc2FfgN30dPfJ48mYJxVWlZm
      GDhX3c7qvFQk0YNpwohpxkNkiBaP20tuwWpyMmclrsFBSsYmTBgnJtCGBM8aYg61Ws3khBHT
      1BRKdRCi20lUXDLbNq+ZO0LkzOlLbN5cjFoBOYXraa85T2RSLmoFS9pr3l/vzFdYaH8ApVKJ
      2+We+14zMAcnIT2X9quniclah83YTVDorK/dMw9gxjTu1/empyT6NdxKTTCZy2Jua2cTYlAi
      kp6dT1R4EDHL0tGqJSoqqwiKiCE/O+OeeQA56Ul+TXFKUuIiHW9yeoY/HyA5aRkN9XVMTM+Q
      npFOsFZLZFhogC4+f2UhgsuM0WjEQTBPbykKzElQqBDcZmobmklITmHDujW3y0xPR61SkJqW
      xvWaa3hFFWnpaaSkxAdoqUFAodKgjwib09YKhOv0/kl+p6ZbbzDc1pLP6d9jE5fR3tjAqGmG
      jIwM0jOSqSwrIyopmyD3tF//O9LX4c990EfOZsEq1cHExCdiHuvx66ZDgjV+nS/g1zGH62MJ
      Dw3BYIgEQSAxNioghwCHZVZfnp5yV431vHZ5dKD7tvZ4/dqAXIHIsBDCdAY0SgF9aNCC/Aol
      XS2NJKTnkBIfFWBrhUpDWnIS9dcqUQSFY4gMx2AwICFQuKogwNZqpWq2D7AoB2FFdpq/3Mhg
      IUDn7bJNB2jk5/14vo2JWSvob7vlt8N8G4LCdLjvyL9Ylpi4dJ4ILPLbKIPOv29+/ABCw3Uk
      JiZgnnFSkJO+KKdDEJToDXpUweGYR3tp7ugmNS2dtatW+P04OTaS85crMZutbN+5g5SE6AXj
      mrAgF0NLgiGUyqpa9HEJpCxLhLny53MgtKE60pYZ6O4fwmyeYWVBPppQ3V1867afL/QvnU5H
      ZFgoEkoKC7ID5ptSqUEjOaiqrccQl0iYVuv3xRV52VwuKycoMp6C7FQEQSCvYJU/x2b7lqcC
      56ZSsWBe3V1Pn5q07J55NPNzWB8bS2iwmiCFyIwUypoVy7lacQnLjJ2NW3dRkJ+PY3qc/pFx
      0jOXExGqJSM9lYrLl4nPLGBNfgYASctmg0NCUhI3qq8Roo8mO28VGYmRtLR1EJOQTFy0noio
      GEI1Xtr7RsnJySY5OZmhrlY27NyNIVwLQIhGCLDXvC2jI2/nKyRGqDm3wP4alZKo2ARuVF9l
      bHqGzIysgBycmCgDos9HfsFKgpUS6cvzCNVqfj1loB77NO+UVuLz+ti8c5c/++/dcD8t9ZPC
      o2qPrdPjXLvZza5tm+5/8Lvk10XnfS9c5nE6J5ysyEx5LOWVXTjNjN1L1opCcjIeT5m/Koju
      GX74kzc49MJHiI4M5cSpUxzcv/99qbvjVh23+kw8f/DZhzrvcdn/1zIAyMjIyMjcnw9XuqeM
      jIyMzPvGAweAqbEBho2Wd1WZZcrI+KR5yX1NjQ+vyfbYJunoG77vcT6vB69vaYF9c/Pd31t+
      8wHfaT6LhMvlvm+ZMjIyMh8W7vklsCT66Gxvx+ERcU6PMWRyMj1pxBAdjehx0tzciipIi89l
      B1UQNsskXkmF12XF65MwmUz09vYSPvdlk8/txCOocTusGEeGmLa50EWEA1B7rRqv14MqKIQg
      tYLurg7Mdhf6yAimpqawz5jxoSRIo8Y8OUFv/xAhCi+3uodwzEwTrjMguh10dHYiKdQEqwVm
      7E5GRkZpqitncFokMiyEmSkjA0Nj6PR6FAqB+roaRJ8PLyrCQrQYx4bpGxghKjqK+oYGlmdm
      Yhofobt3EEN0NNNTU2i1WkZGRwkPC2Nq7v/x/lZOlNUTY9DR2dGKSgCzzY0uIjygTEEAq3ma
      ceM445NmHDOTTFoc6CJC6e3txjhpxmDQMzlhpL+3F4VGizY46P3yBxkZmSeIe94BNNWWM2x2
      MWmaAKC/vw/RauR6Uycnj76NNiyMk8eOYxzt40ZrL5Wl56iqucnVsjIsk6OcOF+GVi1SWn4d
      APvkOIMjRsrPn2bK4aWirNy/+o3FPElQiJZjx47isJhxigo66q/SOzrDiTd/SWVtw+zraG2T
      HDt1EQUebE4f/X39BKtELlXUYTIaCdKGcPbkGZzTo7zyne8xabEjiSKi14soujh1+iIqwcu0
      eVZT7LTOIKmCOHfyGNNTRs6X16LyzVBaMautdVknOHXhKkFKH6fOXqTi0iU8bhvf+853MTs9
      XL5cAYAoikg+EVGScJonmXb4qCwrxzEzsajMzsYa2geN3LxSyoDJxtWKCnxeB9MzTqaHO6hr
      7eWd06fRaEM4dvT4Y18hSEZGRgbuEwAy8gqxjvfR0dGLBKwsXEtWRipurwdlmJ7M9HSyk/SE
      J+Uw3N2CEBKD2zqGwwfhGgU5KwrIXJ6Jwhv4ToxgnYHCFbnE6vV+Ba0uKp6M9Axi9VFMmEZo
      aW5hesaKw+FEH5vEof17CA8JxmIcI2f1GrJz8okIUZGzooCs7EwEj4eBvi5am1uxzNiQgA3b
      dlK0KpeY2FhSMrIw6KLIzUriRkMjdvesxjY4IpLszAxy02IZGRnD7XEyOmklMmxWczxjNJK3
      qpDluQUIPjfZqbFcvFDO7n17qSy9gGHZrAwsJjaWmPhElsXH+vsXo9djmTAuKhOgYFUh8dGx
      rFxVQLROz/TkJK0tLYxPTGN32NFHJ5CRnk6cTodX/ppeRkbmPeCeAWB8eJigkHAs5qk7FvyA
      UFycv1hK67AVQ4gWz/QgMcmZaJUegiJm3/niT4eaTx4RQEDh38OCpJJJ4xDnz53F6hGxW8yo
      g7W45l7ypVJp/McZlqXRev0qZ0+fZsrq8dcBMDVtJjhYg9szm3imUc9ecHU6A1WXztLV1cnY
      lI0QjcCkeQYAl2WK8+fO0zxkY3lmOpLTgcfjQaXWICgEDMtSaKyp5NyZk0QY4sjKL+BK9Q2K
      1q+jseYaK1fkzA6kOpSh9hvU32rxt0cCDIkpAWXeHsTAsXbarQhKNR6PGwEwjQ1w5sxpZnwi
      GslFWcW1e5lKRkZG5qG5rwzU7XahVKpRKhfHCrvNRnBIiD+r9d0gSRIerxeNejar0ulwEBSs
      ZamiJUnE6xVRq+94lZEk4nB5lnxm7nG7UarVSD4fPkny1yNJEl6PZzbrE5BEEY/Xh0aj9p8r
      +ny43B60i1ZbCsTn9SIJAiploEZ+qTKXwuV0otYEoVAInD51jmee3YFafe9zZGRkZB4VOQ/g
      Q4rZbCYy8tc3kUlGRuaDRw4AMjIyMk8ociKYjIyMzBOKHABkZGRknlDkACAjIyPzhCIHABkZ
      GZknFDkAyMjIyDyhyAFARkZG5glFDgAyMjIyTyhyAJCRkZF5QnlfA4DNYsZitQVulERcLs97
      VqfP68Hj9T3y+ffLk3O5XPfc/654j8dmIe9pPwCQcDpv1yGJPsZGxxAlME9PYne63+P631tm
      F+L+1WWhPT4MeFwOJkxTH3QzgNmxeRzz8P3wkQeZx163C9+coe8ZACb7O/g///QlbC4fZWeP
      0j9hD9g/PthNzY22e9cmOrh0qRqvY4pfHj+LdS4AdDc34hTBPjFAdXPHfRv9qAx0NNLZP/lI
      53psJn7x1hl/W5fi8uWL76J19+a9Hhs/oo3S0pr3tg6fndJLNTQ11OMS4dyZk/QPjzIx1MU7
      F6/icD58ALKZRukbMd51f319/SM0VKSlsemhzyq9WIZ7xkRTR3/A9tHBLoyW9zq4vnvm7dHb
      0cTEzOJgbBrtp3/UtGguPNoY35833niDSfM0cH87v9c4TI9nHt7NRx4n97oeNTbPLrrVWHOZ
      Ccfsh2LVXY8GRJ+XiBAN5y5fJdTpxCdKXDz1Ji29IyzLzMdrbKO1fwbYh3mole7BCbJWbqAg
      ORKjW8OKzGRAxOny0FBzDafTjsVmJ1HycPHcOWJ6BliVmcSN6mome1vIWrWRcMlCfWsPak0o
      +3fvAODt136CMiiMGbubsCAlaQUbUNpH6RsyognVsTI9hkvVjSglN5uf3ktCVCQ28wSnz1/G
      PTPFmm1JXKu4xNjUDJFR8azMiOPy1RsIShUH9+3g6NHTaFRKduzdzbFfvEmEIYKYhAwSIyU2
      b9nA2Vd/REzPABs3FhMfHUl9VQUDE9Pk5K9hsKeDEye8hOhi2ZCXzsWrNbgdTvYdeo5zx36O
      ShuBNjKWDQXpnL1QjkLyULRlL6PdNzCZbUQnZLBhTR69bTdRGdIZ7aglNCEb5cwwIZEGblRf
      9Y+NYB6mZ3SC0Iho8lL0XLx6E7XgY+P2Z0iOM1BaWsqOnTu5UVVJ0vIcLl28BEg8s6+ErpYm
      1q0vora6hnUb1gNQUXqWaZub1evW0N58A4/HRGxiFok6BdUN7SiUag4f2sOpo8fwiiJ5azbi
      nhqib2SC2MQU4sOVi2x1+cIZZmxOUnIKWZWTDqKXEyeOo1AKiMoYJI8Xu8VES2c3OapQhjtv
      YvNombFMU37hHJIgsePZA7TdqmN8bJgVhWtpaGhAEgUOHD7Embde9Y+pemaIDqODp54qJj87
      nbGhHmobWnA4vRw5cgiPT2Ssv4OmrmG8qBFt44iCCiE4gt3b1nP82Al8Emzc9ixj/W2YRkch
      OIzWxkZMVidbNhXh8zgCjhvsbGZ8bJh1W54hMUbHtYpSjGYHpkk7Ko0Kh9PFrbpr/jEabLmG
      Qx1D8aaN9Lff8I9NiGeSho5BfB4Hz+x/nuaa0llbrN9EQ3UlXq/E2uIdJMfp52ajRGnpZXbu
      3EFleQW52amUllcjCQpKDh+mqaGOoqJ1VNdeZ8O6IkDk7PETuCV4autWKsvK8XrdbNu1j+sV
      5/CiAqWWg/t24TDP2UMZQkSQAaVS5MyZC2zetJKmrlE2Fa1CBbhcdi7Pzdv5ueDxiSA6+emP
      X/fPm03rChaNW2P1JX+d+3YVc/z4ab+t9eHBDHS1+H2uaNVyxicmmJiYIjsjnevXrszaedMG
      pidMrFmRxqnyWxzZW0z1jS4E16R/bm8vXs/UcC8jThVq2ygmXyipegVOdTTt1ytweHwUbtxC
      b3uzfywT4yJpaO1DZ4hlx5YN/uuf12Xj+PHTCLiJylxNc111wPxbeM3pb633z2eD2h5g244b
      lYt85HpVBYPjUzhsTo78xgtUnD2BzSsQqoti17bie47fwX278Nonud46Rlq0ipt9k2xekUKH
      0RlwPVqdleC/zm1Yk8f58xcYHpskViNw4fRJVD7H/R8B5a7cxHBzLTaPCKKLG61jfPJ/f5Kh
      xpusLtrEyjXFrF+VRVVNC6sKV1Fz9TKxyZlzF//b5OXlUbB2A7mZaSCoyc/N5Zm9+4iLimD1
      +k0cOrSH/o5eqmvqyEpPY3KgG/vcJ42QyGhKDpUQExnJoUN7GOrqIyYmDpVKRVd3O067lVVF
      WzhSspuaazcBqKqo4pn9h9i8qQgEkXGThUMlJZgnxqisqiY9KxOFa5LeoUmmrXay8lcRrpEw
      xKVRUnIIs6mflOUrSY6N8rc1PjoSEOkfMXLo4EFyMpaRlLacgwdLcFqmCQ4LQxemxeM00z80
      SUiEgYMHS3DPmKmurGZ3yWHylidjt7toa+0kNTWNjpYGAOJiY7h1qwmT2UZPazNtPSPoQ1QB
      Y1PX1EJaaipd3Z047VYK129l344N9A6PAhCh8tIxOEH30CjdDTVs31tCye6tXKu9xcTE7F3Q
      9NziPqJrCqMjmIMHS0iK1bM8fzUlJYeYmuijobGN558/zPLEMOpq69El5fDc80doudXAhHGc
      0HAdOZkZS9oqPi4edbCW1pZZOwx2NhGbVsj+fbtRCWAxTaAJjyIvL4e9u3exelUBG4u3454e
      QhURQ0p8FDW3WmlvaWTzrn1M9DQTsyydqFCB1s6BgDHNz8vj/2fvvZ7jStI9sV8eVw6FgidI
      ggYEPdlkN8lpx/bd47rZszNz710pNmI39LKxoQe9KPQnSA9SKBShiJVuSLsbutJKcWfutLnd
      TdMcNk3TNL13IACSAAjCuwIKZY5LPZzKgzxZ51QVQM8+vwgSVafyZH7pvsz88vdl7njdUf4A
      kEw1IBbRMDPai4msiYnJSeSzGUznKX714duAHMenn+2BNZPGndtXsX7H+/jD7z/H1fNn0ddz
      Bxt2vYNfffIBNm/YiHfe3AkAuNvpDcfkWtZcB2pl8XCsgD2ffYolTSlQS8fEdMZTRps2b8Lb
      73+C9hWtnrLJpCfxzi8/w+uvrMfQQJ9bFwl9CjOGgo6Olbh0/gLXgwjMuUmMTc9gZHwa5y5c
      xed/+CPefXUdrnfew8SkM0OemCzW88O7iC5Zjc9/9zs0ppJoaayDSg103u8DlWLYs2cPVMlZ
      mcRSxfr49SfITU/AoAo6lsfx9//wz9i+bQsAwMjNIZM1hb7A0rM8/cav3Pg073Ze9dQ1AE+b
      06NLsHHTBrz9+g4AmK/nDeswMjqE2zduI1+Yw72u24jVN3j6tg2grmUJum7cwL3BCUwM3ceN
      m11Y0lyPJa0tiMcUXL/e7SnLybFxaLEEtmze4NFZNy+dwbZ3PsGv3t8NACX9b17nXPH0Z75u
      h4eHfdvI5OQcPvv8c2xYkcLwYD+M5DL87nefYnZitGL5AYASr8dg7x3cunMfc1PjuH3zBpqa
      l3j00U+cntNjrdiwcSN+9eE7AICPf/MZfvHK+ir2AIiET95/HSdPXwSIDNuYw+TUJHKWDU0i
      mJ6ZQq5gQpIokqlGfPDe+9DzWcxly9u7CLFR0E32BaT4T5Jl1NY34u33FsoyyQAAIABJREFU
      34F7EDKhxS4wH/bYiTP4+OOP0JSqAeDY6ifHxhBPJgAAskSg60bR7kZQKBRAQZHP5aDJEuI1
      tdjxi7fRkKrF3/3t32D0/nXcvj/u3l1AJFIqa3E/oKAbsCmFruuuEU0iEq6c+RFtG3dg64YO
      R1iJvU8QjSt4+HAYIyOjACGgsoKWJUvw1ltvAABi9UuRGbkDNdECYs+BqBFPfgkhkAE0Nrfg
      3bffdOMl3HnZr72xG6f2/QlNbeuhaSpmZjKYnUlD0zRYlglqW5jLFetFUmHkM6DUhq6bxXgI
      JIkAtoW8bmImPYuamgRmZ2dg6nlYFsWON9/Da1vWYd/+70vqihozuNw5hA/e3Y2o5iwuJUmC
      ruvQ87my9mVNVaGqGlau3Ygta5ajZVk7GmsTUDUNWiyOjdt2YvmSOk+ZEkKQL+huvRw/fBQ7
      3noXa1ct98S9aaOjxEABUBtz+SzimoaZmRnks7OwJRU1jc1Y1dro1i+LM6J6wzG5HBkkmIYB
      aluOHEXwZUQIgV4ogOqlZUNIMR+y4tYFJRKIrKJ16UrseG0z5mZnnFk2gN2738af/q//iLXb
      dkCTKTJzeaRnZqBqUZiGBcsoIF+0VSuRCGZnMrBNA103LkFOteH1HVtducU2LmLg4RhaG2MY
      m/LeAy72hfnn3n4jlhufpljXADxtLqrKJXGzem5NxXBzeBa7N6/At8euY9OaZZ6+TQAQJQbJ
      mnWuhpUkpHXAHL+PoayM3W+/Dlkoy44tr+K9N1/Dgf17QW0T08W7QmRZhl7QXdu92P/mdU5N
      SX9261Yivm0ERHLDKFoUU6NDGBseQqG4XVmu/IoRIKZKmNFttDVEcW0gjWUNcY8+4vVcfVyB
      rhfcaiMEkCRS/k5gEECNJ7Bh0ybI1MKadRvRvrwBJ06dwTsffYI1a9oxPHAXBiLYtX0jbty8
      jVRjE2qjCqZzBlJFZQzIaGhIQVaj7rO6xnqcOn4cyfoW1NXVIVWTAIWM7VvX4+KFS5jNmWhf
      vRJOfgkaGhoAIqG+oQGAhMakisvXbqFl2QokNeDU2UvIFCx88N5bkCWCpcta8dOJHzGbs9Cx
      di2aUxGc+ukcNm3fgdde2Yyrly9hfHoWK9qW4uyZn2BJUby6bRMUWUFDQwqEENTXN5TImkzE
      kKrRcOqnM4gkG1FfW4OGhgZQEKxuX42L58/CtBWsbl+NRFQryk3wyvbt6L/bhfHxMbSs2oB1
      y+px9fotyFoCy1qbi6Vko339ZjQmI2he3o66ZAKyFnXLZvOG1bh05SpMKmNl21JE40kkYioU
      LYZUTRxEVnG36w7e//hjtK1ow+VzP2FofBbvvfMm7Nw0Ll67hZZlbVi+rBVE1qDRHM5cuIyG
      JctQE4uhoSEFEIItm9bjx+MnEEm1Ysdr25AeuY9rN7qw+733MPbgLm523cX6TVux45WN3rqS
      NUwP38e9gWGsWrUazU2NSNY3obfzCu49GMXqjjVobKhDXUMDZAANDY0gIIjEa7C8rQ3Dfd3o
      HxjEshWrUROLoKGxAS3L2tB94yoGR8axanU7oprqlunyVavQef0y8paElqYGpGoiOHv2LJR4
      CqtXr4amSGior3fL6dxPx9E3MIhXdr2Ojo51uH/7Mrp6h/D+B+8hoihOvJAwMz2Kuw/HsKpt
      GeoalwjhZDQ0NhT7hwKip3Hh6i0sXbESy1pbICkaZkYeuGW0dk07Lp89BSnWCCk/Pl82jY2o
      Kd6VHUs2oi5i4syFy2hdswlafgrd9/vRtGQZjh/+HqvWbUFEkaDGatDV1YVPPngXbcuXOe3b
      iuDNnVsxPT6MW3d60bZqFVpbmqDFU8hNDuDytVtYv2k77t26jHTWxOrVq5GqiaOhscHTxlGs
      DwCI18RRsFV88sFu9PX2o3VJM0AALVaDthWtXF+IghCChvp6t4+zOIPKjRCC9nWbvHUdj2Bp
      a5Pb5rauX+WRJ5asdet5/dp2KJEENm5YCwoJ7SuWIxGR3L7d3OCsTKKqjJa2dqxc2oBEqgXL
      25bjfvdtDI+l0b56FVqXL3fLcnz4AS5duYEVq9ejMN6H+5M6Vi5tQmPLUlw5dxoj07PoWLMW
      69vb3P6XihKPzmmujc335yXN83WbqEdCypa0kfraGtQ3NoCAoK5lORpjBA9HxjCTyWHzpg1l
      y4/VWSoZRaJuCdatWQGpmC7TlRQE27dtdfVce3s7ZD2DS7fuYW37Sle+l+I46NEHd1FQm7Ci
      9fk9P3+ovwdXbvXAsgl+85tfQSkz+1os7nfdwuBUHrvf2PHY434ZcPHCJezc9WKVzdjoCJpb
      lgAAbl45h7xSh51b1z9jqV58BJXlyOgYWlqaxQv7SvBYdQ418P2+v0K3Lbz6+m6sLK5EnwZe
      igEgRIgQIUIsHIv2A+C5pACQy+Uei0BBeNI8dWpbi6IiPinYlvlI/gtAdWVWLt/l3n/c9cHa
      TzXtaCEc8cctp9junyc8jrzqhQIq5W6hc0Y//nulcnwc7f/xgLr5fZZ1/6T0X9kBoPPaRfzT
      P/5n/ONf/hlXBR4szyUFgJNHjy448RvnjuPrvQfw5z/9I3ofjgcHFHjqjM/6OGHnJ/Hj+Vvo
      776JCR8eNAPP6758ZWEc6KMHv8VXX3+D//sf/jNmc6ZvmNs3bgAAHnRfX7T/gpve4R8rhimX
      b5FTbBsZl8NcTdwLwdHjJzx/y4HniFeM10fOxXDX/TjUIp4p5/+RfDnmfR+OHf4RAS4vAOZ9
      Y26cO45v9h/Ewb8eQmamPLf96JHj7udqyhGovv0/aV+QiYFufH/MKddyMvNyLFY/iXnh21Ml
      f6PFplnWD2Djtp2IaRKykTZsam/GhVPHMZqeQV3zSsRBcOzgAUDP49Pf/wGEEFh6zsPvvXvt
      nBu+JWaied12pB/chta0Fq11UZhGAbs//CWaoxT/9NV3qH13VwA//xOAEGfjaHQWp06fwoPe
      Xry5+x38+MNBlyvbe+MMZvI2cibBH3/3WxDAI3NLzMD1u0MwCln8es/vcWzfXyDHalHbuAy7
      t68ssm4oDMv2cP2H7193+ds9F4+6vG5LN0v4ur03z2IqYyBvAX/7+z2uLdHWZzCpx/A3f/gl
      pgZ7cPbSDUT1EU/YmfFhHPrhB9zvH8L69ib8dPwH3Lwg480PfomZgW6Xg/zBO6/7c52VRty6
      dNLlkE+ODmD/3r2QEyn8+sN33Xq1zQL2frcXkCP45cdvBOYbBJiZGMaNu4N4+/UduH31En44
      341c9i1Mjg5g7969IEocv/norRJeN8+FlwvTGBibQTaTRjKZAuQoPnj9FY/PhMsiYawmO48f
      Dp3EZHoG77+7Cz+dcdrFzlfmOeKTw0MYHRnEjjd248Lp08X0f4ufDh8AFA073/zQI+dnv/kI
      AGBYNgqZNPZ+/wMiyXrsfnUdDnOcet7X4ON338Dwg/u+HOpf7vkbXDtz2LdttK9oRe+dW7h1
      rxcm1fDr3a/gL/uOIh5R8Mqu3Ri5e3W+rX7+K+zf+51bbzPDPR4fF+bHoBhTyBkUm7btwpoV
      rV6/h3/xMbpuX4GeG8XKjduxqkFz8/TGa1uQk5JYt6wWZ692Q9KnPT4o97pu49APP2Aikwex
      89j77XfIZQv447/8G/x06ADmdANrNu/Apo4VGBocxO5338ZE1zm89f7HaEkosAtpH2773+LK
      6WMu/x1A2XK8evKQJx0AOH3qCG5cAN7/5ae4f+uiK/OShInLRd6+NDPg8QXhy/x3n37yyL4g
      dYqFt998rdhzvDqv6+YV1/ciP9qH7rEcfrF9Cw4fP+Gvn3x0A6+fzLEeT15+Oj7fnnh+/1vb
      1uHA4R9d3xhZn8WhHw5XrRN5n6gFmYBaWpdAkVV033G8fz/89W/xye5tuN7ZAwAl/F4+fCY9
      gYJJMZdJI6d7R1Eiq6iJKh7eqpefTzDU34OjZ65j164d2LhxI3776acY67/l4cpmTeDTTz9F
      Wy3F6KxRInMmPYndn/wGv3pnB67e7kYs1Yg9ez7H9PhDVxZHPtPD9ef52zyve3pivISvm9Vt
      fP75HtRqmmcmZRt5xFPF3fuGBuTmsiVhU02t2LxhAz799JdQCfDWex/jtx/8AvcfDnk4yIA/
      11nTJzwc8oYlK/Dpnj3QZ9PgS/zu7StYvfVt/O53e6CR4HxPjg7hmwNHsXPHqwCAjZs3YePW
      Hdi1fTPqW5Zjz549kEnel9fNc+Enp3LY8/lnSDU2Yc+ez6BKhRKfiVJY6Oy6hz/8zR9w/ux8
      u7CSbS5HnHHys+N98+lfu4mx8TSWr1qL5sYaj5wME5OTuHr+FN7+5FPs+fVHOCNw6nlfAwBo
      XdHuy6EeHp0ObBsAUN/UBE1W0NtzD4aex6pN2/DHP/4et69f8rTVO513PPUm+rgwP4bxsTE0
      t7ahbanDGvP4PeQsrN/0Gn73hz+gr7vTk6fhWQM3r1xG59VLaGxdVuKDsmb9xnnfBymCzz7/
      HOuXJzE5PY7uoTRWr+nA1cuXAMDxjWl2Nj6PHNyH7/b/ANuH2z6dzXj47+XKcfDB/ZJ0AOCt
      dz7C7/d8gvMXrnlkHud4+6IvCF/mVrGuH8UXZOuu15GKuYR0j87jfS+YHNtefTVYP/noBl4/
      iXnh2xPP7792/iePb4waTy1AJ3p9ohYwAFCcuXAZH3/8AWpi0eITYHR0DPG4Q+308nuXecNT
      CtO0kJ2bK4n5YW8XDETL8vNT9Y2ghQxm5/KwTR2mTUu4srRovRyfzCAWkf1lpsDo6ChqEjWg
      oLBNHTmfcz4Y178wN+7hb7u87qIpUJRhnodLAGphaspRInKsDmP378CyKa5fvozlK9u8Yd10
      ddfm6HDdnUAlPgA+XOfaeMTDIQcoQC3MZbIgoJiedmSJRiKYzczA0PUSey/v41CTrIOmUExO
      O7xoEOJyiZlcUgCvm+fCFz04QNhfiZT6TPhg7fotUGVSwmdmYJx8T/qrl+Ff/N3fQsmN4qfL
      tz1y8tC0CNIzGei6XsKp530NGPw41KLfg9g2jh47hnc/+hjLlxRZHRTIpCchKVFPW62tiXrq
      TfRxcfwYKH695/dYmlJw8PAZAH5+DxR6bhamCU+etFgKcVnH9f4JrFvRVMJZZ/XuVKxUzJ8E
      SApUiWDJkla84cOe+ujXn+HzTz+Zrz6O206IP//drxxJQDoUFBOjI4jFEx6Zed6+6AtSUuZF
      PIovCA9e5/G+F7wcQfqptL979ZOYF0974vj9Jb4xwAJ0Ijx+E+X9AACXp52IachmpnCz8x5W
      rFyF1iXNuHrxAvJSAm+8thmESGhfv5Hj97ZDsrJu+DXr1uDMqZMwqYaONWsQ1WSAEJw7/RPy
      loKPPnoXK1e0BfLzY7EavPnGq+i59wAb1yzH8eMnsXb7mxjuueZyZXtuXkLP/T60rduKVa1N
      AIhHZuizuHSjE5Zcg7d2bsWJwwcxODKB1996D7U1cYefm6pBIlmHJfUxnPrpDKKppSDZUZe/
      3bGmw+F1R5JoqKtF+7pN/nxyQlBfX4uee/1Y0tIEQmS0NCTw44mToNEmvLVjM+b9GwjqG+pB
      AEQUipNnLqF9bQfiCYe/LmtRbOA4yCvblgHw4TqvXA19etjlkNv5NK7d7MS2na+DZEdx/Mp9
      bOxYiVTjEgz2XMet7vto7+iAopbmO5JsRFNDHXa//Sa6u7uxbGkrJDWGsb5OjKXzWNba7PDh
      CcEaH153X/dtlwvf3FiH+sYGSC5nnGDV6navz0RcQ0N9PccrBxi3vK1tuYfPrMrE5Yg3NDag
      rmmJm/7SthW4fuk8prIWdr32KqKa4srZUORPE0Kwaes23Lh0BvcHxvDu7jc8nHrC1UtDgyML
      zc2UcKijNY0w0gMBbSOJqEpw9vxlpBpbsLw5iUM/nkI6ncH7H36AnhsX3ba6bu1aT73VRyXX
      x6VtWavrx3Dp7Gk8HJvGjl07UBOPev0eVq1G/91O3OsbwLsfvo+O9lWePDWkElDjdVja0oyG
      mqjggzLv+7CybVmRnw4kG1pRqxi4dacbibomNDfUcYqBIJmqhyoXHQgFbnuyrhmaNePhv5cr
      x8Y49aRDKXDz+lWMpwt4/5030MTx7FWad3n7a9ev9fiC8GW+elWb2+YexReEB6/zeN+L9o41
      874Kq1p99ZNHNzTUgwj6qX1dhycvtam6+faUSrr8/k1bXynxjalPRKrWibzfxEtFA7106SJ2
      7NgZ+Pvdm5fR2LENdVG5qvAvE6bGR1DT0AL1CfgfhKiMQnoUPeN5bOlYCeDn1faeJ7yIviCP
      gkrt7KUaAEKECBEiRPUIL4QJESJEiJ8pKgwAFIXiBs6tWzceS4IDd29jplDewaPnbo/v85mp
      MYxOph+LHCxfxtwkuvsGg8Ppz49zGFC93ABw7UZpnfX13MK+A39F3jBgWv6M7757PTC4n65f
      r+58/POnT+D0eYfFYZnz8T+utlMJUyMPMDg2UzlgEc9CRiC4HZu5GfQ9HPV9x9ALzmF6VMfN
      m0/ujoiJ4YWVYSW4ci8QQf0uSDdUQnpyFIOjjvPgva4uWLxM1MSDB8MAKE4cPohL1x2WI+sH
      QbJU2y/KYbC/C2MzBdztuet57te/n0QbKLsJPNrfib3HL6O5oQ493Z1QCJCe01FXm8Tgg14M
      jU2jsbgxND01heGhh5jN6kjV1mB6ehrRaBRTU1PQVBldnXdgEwUjfZ2YQwTjo2NoanI2m8R3
      ZzMZJONRjI6No7e3F8niZpGl52EQFXp2FkMDD5A3KYYG+mFLGmKagnt3u5HOFlCfqkU+O4uu
      7rswLCCZiKHrzm3kTaC2JgHLKOBPX36FmngMsqXjZu8gcrPTSNY1QM/OoOfuPaiRGPKZaXz3
      zT7UNTYhVZuEbZmeNEaHB9Hb24dYTQow8hgaGsbQyDgaGxuQy6TReacbyVQDCDXR3d2NgklR
      m4hianoW4yPDiCXi6L7jlEsiHgMADA30YWBoHE1NDZiemsTY0ENMzxVQV5ssKzfMAm7d7kQ0
      nkQ04tDWLl25inUdHei924XpuTwSEQXffX8IO3ftQuflExiYtpGqiSMa0TA3M42eu/cQSyRh
      5POoSaWg5zLo7rmHO3fuYdOm9W48dalaAICp53DrVieUSAxGfg4nz5zFa6/tRG1NAqeO7HXj
      v3n9MkzDBFGjiEdUT10AwOTEGPr7ekGJjP7796HFkyCWju6eHoflpBI8HBzEwMMhNDY2QiIE
      U5OTiMRimBwbgRKJIzMzjamxQQxO5DE9OYaGpiZYet4tEzPvnGL7YHAYTU2NIMCCZDTyWXR1
      9yCWSCI7l3HbtqUXYNoWRsamYOtZ3Ot7gGSqDkYug847XU7bMPPI6yaGhkdQl6p12zH0rFvm
      mqqAUgtzBRO2UcDExChGxtNorK8DqIV9f/4zzFgC8YiMyxc7YZpZRBO1UGWK27duAUoUiSLT
      bXx0CPd7+yDLMu7fu4+aVD303Kzbromle9oq2xUa6L+Prls3INe0oka1XPkjquQpj4f9vRgZ
      n0J9fT0IAaaEduq24cbUvNyxODRV8ZRjfi6Nru57SNU3IJ+ZcesnGY/g6y++QjxRg9pUEve5
      PjebyaCutgajI6Po7e1FNJ5ERFNL+ubE+Cj6e3sBJYp4LAJNVfD1l1+irbURZ651Y8uGtfOK
      juZw+uxtNNQSnL10Bzt3bEMiHsPcbAaqKuOfv3RkSdXXQyJAPsv3i3XovtOJuYKJVG0S6alx
      dN/tRUNjI6xCFne6e6BoMcSimke39t3vwVzexMz4A9ixFsi0gLpUCunJcfT2P0RcMtEzOovl
      jUmkMznEIsqC2oComwxbAsw8srqF3Myk207LrgBs2wa1bNiUIp+exHTOwqnjJzD28C4uXL+H
      2eEeXOzsAwCcO3UcMwULl04fweBEFufOnwYAnDl/AScPfY+CpGJ8zPH2ffBgEGP9t9HzcNr3
      3a6bN1GYHsbeH44jpto4euIiACA7OYqBoTGcOHIQeVvCvq++ABQVx44dR34mjbwtofvyafQO
      T+Mvf/kakWgUR44cw7njhzFnqTh//BCmc85RttS2YZoWQID+vn5EFRvHTl7C2NgY4vEYDnx/
      ADa1YdvOPwBCGrM4eGAf4ok4vv32Wwz3d+PS7V4UpgZw/NwN7P1uH+rqarFv30GkJycgqRGc
      PnoQM4Uc/s//7e9xf2gCJ3/wlsvEw7s4fakTVnYMR05cwokfDmAqZ+Lk8RMOb7iM3Ae++w61
      dXXYt3+/pw7vXj+Le2NZ9Fw9j77RNBRZglEowLRs2Kbpzs727d2LaCyKsbFJ9N2+iYJt4Ysv
      voIW0WDZtiee3hGn3vZ988+I1dRg37ffwbApZEmCoTsrFGrPxz808ABKJIYjR34srQsA3+/b
      D0mN4i9/+TPUaBTHjx3DxNgYIrE4Du77HvnpYRw9fRkKzeP7w45XaX/nZdwfmsahfV/gyp0+
      HD9WfN7fBzszhos3ezxl0nPjPK52PcD4gzvoHpheoIwUX33xJRRVRXom42nbPTfO4//7p29g
      UYq9+/YjqsmYmJzCN998g5qaGnz77TcY6u/Gf/qH/9f1f2HtmC9zAIA5h5vdD3Du5HEMjEzj
      zoVTmMw771jUhmWaxf7Ti1g8imNHj+Lwwf1QE7U4tG8/TFaX332LaFTDn//8BaKqhR9Pedu1
      t606s9jbF0/hVu9YkS5LPfLz5TEy/ABHzlyDmU0jW1wm8u10jG/DJy9xchNPOU5PT+Dbbw+g
      JhHBN98d8NRP14Mp2LYN07SRE/pc182bAM3jiy/2IhaP4dixY75989uvv4ASjeHIUccTXFIi
      +O1Hb+Lf/4c/49PffOKv76gFSdagGw4tvO/2TeRt6sriNBpvvzj/4yFM5WzcvPATeh8OY9++
      Q6iNK/j+0DF8v38f1EgUY+NeT+VLpw6jf2wWmcz8KvBW5x3oc5P4dv8RSDAwl7dAqIWvv/4K
      NpEX3AZE3dQ7OIX0UB96+oa4djpdfgBobmlBc+syLG9tQbSuAdu3bERzfT1GxoZR0HVkTAKV
      ndUvx7Fl0wa8snkjJie9S8jtu3ahr+s2eh84Dlev7dyJVSvaYOqG77tsRrJhy1Z0rOuAZHqP
      TYim6rF5wzqsXr0a69euRTIWxeTEEG7fuo3p2QxymTTqm1aiY80axKMahiamMTsxhGiyFoZu
      QdaiaG5uwYYNGxBRJGzYshVr13eAGAbu3rmDzs4uzOVyaGhqxpLmZqxa4fCsPWnk8ljS1ob2
      9jWor3Vm7+vXb8K2nTsxMzaGmakJ3LvXi4bGWgwNPMDt253IzM4gb9rY8tobeO+tndghlMvo
      2DC2/+ItbH3tDRRmhtwyb6mvBwXKyj01O4Pee/eQTNV7ymp4cBh6Ng0SiUJRFDS3NGHDhvVo
      XdKClWvWoqHINd+5YzuuXb2KscniEQtWFvVN7ehYswbJRMwTDyyn3uSaenS0t2N9Wz1orA7N
      LU1YvbLNbTss/uWr27G2Yw2SsWhJXQBAQ/MyrFvbgfaOdVjb0YFIBHjQdxedtzoxMzsHCqB9
      3Tps2LIdxMgAADZufQWdl06jadV2jPV3gsoqJAK8sn0H1q5ZBd0sLZPXdu3EyrblsIodvHoZ
      bSTrGrBu7Vosb20q6Sef/v6PWLW8Fdu3bsTVK1eRzsyhLtWE9vZ21CdrQQF8+KvPsHHtKs97
      JWVeBFHi2LVzO9qWN8O0KEBkLGluxtr1G1ATj2DNuk1Ys2YtohFgenoKQ/29qE3VuGaNpStX
      oqOjA+vbV6NjXQeIYXratbetOpOPvsEZfPTe61ixfCkA6pH/IVceUrQBbfUR3LjVBb14jzPf
      Tkc8bXjUIzdfjkvrNDSu2oj2NeuQdCatbv2oWhRLmpuxYcNapIU+x3SDUwYdiEbg2zeXr27H
      2jVrUFucEQNAV9ddrGprxsDQREkdAkBTczOam1vRtnSJ+ywaT7qyyASgQr8Yzdr4xatb8NbO
      bRjo78HknI7egWGkUrXY9YuduHXjGgaHvMfcDE4XsPv117Bh3TrP85mxEWx49TWs37AZtXEF
      F04eQaypHY218QW3AVE38ZhvpxVuBJPUBB52XcHl67fBvHUogJWrOjA3MwHDMKGpjmMOtbI4
      +P33OHH+Otasasb4yDB+OPRXTKazGBh4gGRtChPF26g4zxHfd+cdh5z/XYccAhBIfAQuZmfS
      UKMxFPIFQI6DFsaw/8ABjE/PYfPaVRidnIFt2pBk591axcaBgwcxPWd4UpuZSUNT5aJtWMLI
      6EOcOX+5NA0AA/fv4sC+b2Grjknk/Okf8ac/f4XNr25Fc0szDNMCJRLS01OIxSLuzEKRneWg
      WC6rVq/DyUPfYd83X2PJ6k3z+eQckoLkXtnajJxueA7qIhLB2k2bMT46BtO0ocjz1V1X14Az
      xw7iXr9zm9iDgQHU16UwPj7mlLkcR3q0G4cPH8bwxIxvPAkU8MORo+gczKAh6r3Ewxv/vPx+
      deHK61YzwdR0GtHo/GzsxuUL+PLPf0Lr6k0AgEhtCwa6LmHt5u0wpobQsmpDSVwlZUK8CVUv
      owxqZnHwr3/FnXsDnrYNAKqmAKAYHBxDXSqBsbE09EIaR48ewVzBhARAVTgTQLEde8t8vs78
      yqS+uRYH93+PobFpwM0OwepVq5Cey8OmfA4I99evXfNtdTMAYO3qJnz11Xc4eeYiANkj/1au
      PAqz05gzAAITs+6lT/PtVGzDHrm5cuwZziHdfwNHjhyCpdSW1I9l5nDwr0cxOe3tc26gYhkw
      pyqxb7rao/j71Eg/RgsR/Ff/5l/hpyPfIzM9irOXb6M8HNdFJotuo6RfbGhrwlff7sPeI6ex
      YfOraIpRWKYBSVbw8MFD1NXVY3x8HD03LqFv2FnpbVmzFF98+Q1+PHXalZFIBA3LV6Pz4mkc
      PHAAUxkDu979JWoxiaud9xbcBnjdFI8ncPncCRw56aQ3304nAVoAcIv2AAAgAElEQVQBpmFQ
      wzRLnlumSXXDcL8f3PdXmjcMatl28T2dFvT53/O5HLUs2zcN8d3FIpfNUhbFuZ9O0MsXztF/
      3v9XSimlhq5T07Q84fP5fGm+LNPzXMwnn8bBg/vc33pvX6LXu4e5NGyazxeKYW2azWZ9ZRbL
      xTR0mssVyubTT25KKS0U8r5laBoGNYzSOtQLBTe8bVs0l8t5frctk+a4tPzimctkAuuNj5+H
      X12UwLZoNuekPTfaS3+8cJ2aPu2wEoLKZDEy6gWnXsS2zWBZJs3lWd3ZNJPJ0HIt2q/My6GQ
      z1O/rOiFQmDf4mVj7aa0rTrI53PUtObbLy8/Xx6GrlPdJ/8MYhsW5WblaFsWzcz59wtq2zRf
      DMf3uXKoNtyCwclCaWm/yOdyVC/2C5sPa9s0l8tR26b02NGj1ORkMw2DK2s+Kats2VbbBnjd
      RKlTt6yd8+30sfkBzKTTSKZSFS9SeNzvBiGbmcFUeg5Lly3Fk/J9SqfTSKWcc04KuTlnMzqi
      VngrxEJhGQVkdRvJROlyNsTCEbbVlx+8biqH0BEsxDMELZ4rFHonhwjxLPDIjmB6ZgJdFfjo
      gaAmLl+9WZYr/CT52dVw6f3woOcmZgqWy0lm/Pfxh7347rv9mDPKnageIEuVfOnZsSH0DQaf
      f05tC7rhbJqL3OJnhSBuObVM/PmfvvByskOECPHUUNYPoBK3dmRoAL13uzCpS1i1tBmTk5OI
      xWIYGR5GvKYG01NTiMWi8zzZZNzD350d7cWDaR03TxwN5Apfv3rR5WdHVbmsPAN99zAyPo5o
      LAmzkHF5+KoiI5OeApQI5mYmYVIFZiGD/Ow0bt7359ITq4Cx8Un09T9AQ1NTcbOJ4v7dHty4
      dglL1myBXchCohZOnjmL7a9sxY9HjmPTa6+hpaEed7sc3nQiomA26/gIpJJxl68bVci8n0Oq
      Dge/+IunDKYnRl2urp6bdfOSnxzEyJyNptqoh/c/NNCH8ek5jHRfx6XuB6irTcGyTdSlUpgY
      HcK93gE0NDVhZnrawzEXOd1zs9Mevjjjr2sy9ZSnZRQwNDyM/gcPIUsUvf2DaGpqRHpiDPd6
      +xCrqYWmKh5uuYacy5GWJQIiyUjKeXQN59G2pD6oGYYIEeIJoewKoBy3duj+Lfx04RYUaT6K
      K2dOYjpn4Mv/5z+idziNH48f9/Jkh4Y9/F010YC3d24J5AqnZzIefnY5ea6fO4E7DybwoPsG
      +oemPTx8AJge6cOVzl6cOnoIZ85fw+njx1Gwg7n0w/3dOHH2KuzMOC7ccLzufjp8AKPpPEjR
      auZwkov8d8OERSQQ28TZH3/geNMD+Pv/4z9hcibr4evOTXF+DicvCmUAD6dczAsAj6x9ty/i
      4q1+zM1lYFELlmmDUopbnXdQyIxj/+HTiMgW9h884uGYD48MlHC6eb74PH/dLJGhMD2MQyfO
      IT81iB9OXMTEwB10D0xhbHQcsVgUB/Yf8nDLqVXwcKQZVm54BSP3K7ExQoQI8SRQdgAox60d
      evAAb334EdpXrXDDb928Dqd/PIJX3v0Vui6fghZv8PBkB0dGPPzdVEMzNFkJ5Aovb23y8LPL
      yTM4Oot33/4Fli5tASj18PABYHnHJgzeuw0Sb4aeGUHOApJaeS69wylfCcNyTCppneKNHa+4
      R9sSALX1jWhuacKa9na0NLVg/YYNmJhOe3jkr7/3IXZu21jC1533c7CFMoCHUy7mBYBH1of9
      Q3jng93YumkDljS3YPmKlWhpcvIwOzaGTdu2Y93GrSCW7uGYS4nmEk43zxcnYPz1Fb4ydGzY
      iNXLl2H9xo1Ffr2JO3euo6urG/mC7uGW2/qshyPNQCQFsvQ83P0aIsTPD2UHgHLc2rY1Hfjr
      t1/jyPFTLhe3ZdU6XD59Gtt37MTg3RtYv3mrhye7bvXKEv4ugECu8J17A+DZzeXk2ba1A19+
      8SVOn7sCEMnDwwcAIkdgTA+geUUHYrKBSG0LHwMAfy49L2tzMoZv9x/Ehas3i/xsYfOy+JXn
      kcsScX0lPHxd4vVz8JaBl1PuyUuRQ87Luv6VLfjuiy/w/Q8/Ip6qw5ULZ3C7616RW7wSN86f
      wqHv96G2YYlH3PzMVAmnW+SLO/x1uaQ83ex6yoEiPTMHRZZgWbaHWy7HGj0c6fu3r2BgZAaZ
      8YdQarxyhQgR4umgIgson8shEo3Bj6hh6DqILEOR5dIfORTyeUiKClUJDqcXClC1iJuOoetQ
      Na0kXJA8Q/13MTQ5h55bl/Hh5/8lmpMaCgUDmqb5yh4oh16AomqeAcqTfj4PLRIJ/J3BNAwQ
      SYYse8dYQ9chK2rJDVWAtwxs24JuWIhGNDiH8pXmhZfVtizHW1iWnbRlGXLRPGdbFgq6gRjn
      FcnLSUGgFgcp27ZgGCYikYgQ0l8GEZZpOjcTaQ7FsFDIQ1E1yJIESil0w0CEq9cD33yJNz/5
      HPWJ0roOESLEk8VLQwOlto2RkWHEalJIJRPPWpwQVYDaBu73DWNN+4rKgUOECPHY8dIMACFC
      hAgRYmEIL4QJESJEiJ8pwgEgRIgQIX6mCAeAECFChPiZIhwAQoQIEeJnCiXoh0wmE3hIF6UU
      hBBY9sLPvAkR4llD5rzXWVuuBja1EUSZIASQiFR1+CCZysnD+Brl5F1IfhaDamR4GuDlKMdj
      eRpyPo0y4ev1UepYlDVwAMjn885FBUJCfGFbto2CqS9KkBAhngUIIYiqEQAUBASWZUFRipca
      CR2LfWdtvmDqgZMeiRBEFK3oqOf0G900XC/ycqCUQpZkxLRIiWLj0xdl48OJ79i2DUkY6MrF
      4ScT6/+UUjcs+8vH7feuX1q8fCJs23Z/l4o+I2JY/rNt225YO6BO5Ar+SUGy8s+D8sF/Z+mz
      Mqk0QLMw1Q7oADz1ads2ZFle1EDAys19P4gGOj4+7qkwv8qjlMKiNgpGOAiEePGgygpU2VH+
      vKJjbZy1e3YvtGGbVa96F9o5/foWAETVCJRiZ2Vg4SzLcpUlLyuDOAAwhSmmIcYrysXABku/
      WXdQXJVm6Aymabqy+Q0+vNISZQ0aAACnDIKUO19e4oBWoiiF9iHGyQ9I5dIT5a+mnViWVbXC
      Dxq4gtKqag+Ar8yS3yigyeHFEiFePNjUhukzQ+c7OFMQsiy7x5hUg4XOzMTwvAJkykVUPEz5
      i8qLEOL7TFSUfPwi+Fk/S5etlIIULhso/QayILD0/VYaLN+8/CwMS6uc8g9Kn09LluXA1UzQ
      Csovf0zxi/KI+WDPFuJ+xVYyYjxB4Nuunzz8v0ATEJ+xoJHPbRiS5ByNQABKAd00QBfSW0KE
      eAawbBsmtaDI3m7AZtZMMZUzMzxpmLYFmxZnqVQCAWAXL45QFcWVjV8J+IHv9ED5SR0PfqYq
      PhPBK3/Lcg74KzdzDRp8Hif4AcZPd/mZmtjvfp9Z2/Bb4bA6ECEOGIvZMwhaXQSFZWDl67di
      kiQpeAAQZxHikkXMtFvREoFhGVjAABcixDMDIQQ5wzlcUJVkqIoK27Y9Hf1RNt0eFTa15y8K
      sr2npipULlkBlFNqzHwDeM0sfkpenPQFrSD4z2yFAHjt4UGz1oXMgh8Ffua1oBk9Ay83L2e1
      SpiPh1+98HrVL/+irLyy9jO7+Q1cfN78zGZ83QQOAKKAzP7nt3wRZxOh7g/xIoG1Z9O2AJO4
      M+uScE9bsArIm7qzIuD6pKaoUGXFV0mxlQIhBKZpQpZlz0wYKN185suh3MYvexeYn3XLshxo
      Xqp2b+BJIWhfUwxT7rvf8yC7OysPv7DigM1/Zoqf35Oopux4E5dICOBlCBwA2Ev8DF/MdKAQ
      z1tPCRGiCtiUwrBMKFxHfZZKqhIonTe0MnkNy4RpWQBKFZuTFep+JrbphlFkZ3InE8nt65UU
      fjmUM/08beXvZ/5ZSPq8GZy9v1DwirvajVwxfJASFyGap3jdLea7rAmIvVDNbnKIEC8DKCjm
      CjnPsxetrVOUmi5KQJyhgIXRTcO53U6NeGabLB5xdl/JFMKYK37Klo9D3Ph9mmXNr1TK4VH2
      KcQVVdCAWGnCsdAJCb8XI9JT2YqEEBLMAvLb7RY3kkTMP39+Z00hQlQCb/d+0ZT/I6GMfVpk
      57DP5RSW376B+PtCTExPAtUo1Op03uLS4XWqH2PHL1wlFhEfptxeTMU9AHEVwAvINwhxaRSq
      /xAhXkyw1U9cm788iBDizugBVGWHZu/w3/nPIpEEeLrmNtf0pZRVgQBKB6aF7mFUmkSw30Wf
      BD/mVbXmo0rPmT4vO+SKIxA/avvNjvyErDRahQgR4vmBq5yFaRw/k/RTiPxn0VwRpLTEWe+T
      0hNPUgc9DhorPxAGbQwvNL6gshcZRhVXAHxkfks0v4GAzR7cpQ2l4ZERIUK8QLBtGwTE137M
      wPQDczhiTlUsTJBtvRwt8+cKfoLNe0UvFCKjS2QA8ZAkKXgFYFmWrxOBn22QUgrLsnyXGYxJ
      FCJEiBcHumVCtwz3u7hZK5oneMVfaY+AZ7WwQeNJ64jHPcCw+BjNki+bhcghbgAHTbirMe3w
      dn+m/JkeF3U0q7OKKwCRUgTMe/nxFem3VOGXMc5JiRSAGM7PGQIQo7N/5jOEECGeNvj+69e/
      GcOkGg/YatJ6knic8YsDnfh8IbL47SXwij/orCIxTT+WECHE4/znp6cDBwDRaYGPlPeQFHeb
      /UY4SimiqubLLBLBRixecACwbAsFIzxiIkSIpwWbUpi2BUWaN+XwG7i8k1LQQW3V4mmYgMqZ
      QxYCflAUywGozNFnE2j+uBE+bvH4HWZi83VO5Mxp/MDEryLENHhU3gIXwPNKWQIssSBvtaDj
      Xf0gy7Kv7dA5LleCbhqOx2aIECGeOAzTBJG9B5KJCoudEMCfnVRposfjRbP/8wOdaOaqpOP4
      yTKLg1fcoklInGyLcfvJ4ncQYJAsZQ+D86uYIAZAORshL7hlWYFOEUGFxzsuRFQNimWhYBkv
      XMMJEeJFAyGlm7n8DJif+fPhgswjfn32SfZjSilo0W5AKCl7pk45vcTDT/EvZMATy0IMz3Qk
      MF+OvOMcD/6OAF42Pl/lUNYTmC8Uv8jE79VcwCByiv3saWwUY0slhTv1kKUTl+WqL9wIESLE
      4mDZtusbwC6tAfyp3rxiE2e1/Dvs92oUpWheqQZM6RMQGHTeWiAh+BIW/jlTwH50d1HxL+Rw
      OHE/RRxIxLR4Fk+5gwl5Pc0PHuVMRixMRRNQNaPIQiDuIbA02D/+fG5+X8GvgUVUDbIko2AU
      wp2BECGeADx9n+uHfrNipnxEhcmv/oHgfh2U9kJWCJQ6tHMLpQOGDQrTsqAKzl/V7mcuRrZK
      KwrxIhmREcTTcMuZchiqObDPQ84pG7oYOe/R9zjAL2X45WM5D0N+RcJXkCxJiKjaY5UvRIgQ
      paBwyBimD+WbP+1SNI0EzUj99gsYeNNGtQOAaVswqOWr/AFAJlKJ8gfmlTSvhMspXDFf5SAq
      XD/zEwvHf+ffZasfP6p9UFxBpi5xDydwAPATerG2OnE/ICgecakovsP/4yFLMiKKGu4JhAjx
      BEFBUTANFEy9hIjhR/pgn4FS5VPN7LpSOBEykaAS2f0nObczO3KAQCbBdNUg5Rykr6o1SbEJ
      dNDeB+8DwcqI17fVnLvEg6UVdK4Qfy8BpWU2gXkwWxQz0VSLoCUes+eLZh3+vWpHWAZZkqHI
      ctV3toYIEWLxKBi6exd4IhIra5f2U17izNhPryz0mAVel5jU8piFZeK9b5gH79fE29krsXmq
      gV9cfmXB/vqZusvZ9MU4GSOLPePj48uZPa+4CbwYZRy0POQzWe271YIQgoiiIW/o7hV6IUKE
      eDLglRQjYhAAquJ/P3jQRrAfo4aFW6wusKjtKn+FFNcBgm1d3GxlfxeyoVuNX4FoTuLlCLqq
      kv3uZ4ryW6WIAwf/vdw90GU9gSmlxQuzCSRCPIycSvArRH5U4jMWNBouBoQQRFUNOb0QOoyF
      CPEUQAjxMPEUn9vIgky6fr89DshEggzApLZH+TOI9xks1Dms3Ma1iHIb3EFnqzEZ+dl6NTL5
      PfNjD/F7BMHanDj/OZHIHjuVGGE5sGUHv9sdZIcT4/QzEVWzLIuoGvLFe15DhAjxdCBO6sQN
      TR6iPgG8ZwgtxNTsJwcAqCQ4DlGP+ekeP7nZs8UMGmLa5cKJK4Egudkzplv5VUUlGWVZLnMh
      DAgUSYYql1KmqoUkSVAUBbW1tSCEQNM0JBKJkgwHFba4sVRt2rIklcgdIkSIJwvbtpHJZzFX
      yEE3jbKzX/4zrwP4s4WexOqAgTcF8SxHy7JgmmbZ/YdKk1A22WX/ROZN0KDC/rJ/om8UOxKC
      hePLiPcVCJKZ3xxmcS1IS4qjWFBmKKVIJpPuaX+maSKZTEKWZRQK3pm5eOIdH1+1rAG/9EMH
      sRAhni6CFFuQeUKczYozcjajLXeWzaOAmVl4UwuzVojyLBSiyYUhaGYfFAf/TtAEmbf3V9o7
      YXGwPD+RaXIsFoOmzXPzVdXZGLJt2x0A/DYtRCzm4CZKqecY2xAhQjx9UFRP9eTNQZZluQdB
      8gyhx3Hxih/Es83YwMM+L1T5B02IRfOY+FkMD3itHmzfQnS281tNBZ29xsflmomCMhK0M88g
      8lN5rqtheBUwn9FIxHElr62tRV1dnRvXYgqbtzWyZZtV/BcixIsATVYRVbXicekvDwhKT6fk
      dQp7JuoRfo+Q1wdBpxM/DvAy8GYW9kyEaAnxs++XU9J+Ct80Tc/7ItgzkYRTjk3F8sKXvRh/
      RRqo33O/2Tt/KJRlWZidnUUikXCXcawCI5GIu0GRyWRKhOIPPaqmwlmaLH09vHksxAsESSJF
      HxYK06Ivzb0Xpm3B1vMAAFVgBolmnkrmZJ7NItrGHxf4mT8vI/vMg9eBQWcdse/ldBivtJn+
      4t/l7f2V7gPwS188ddQPwZvAZYQXBfLb9TcMAxMTE8hms8hmsyWrALZBHIvFUFtb6+vAUMnu
      L2Y+vHYyxIsKVVYQ4y9if4ayPC7Y1BnQKC2lgTOF7jcAiOYhfvbPTEKPezUgnv/D6z9xBs1D
      vAaTjyMI5TaEy923zMvi9674TLzO0y8uQgOkHR8fLxkEgjIWVBnsFEFNVqBpERAA8Xjcsz8A
      OLN+wzCQTqfdgaDaCnbNTpYZbvyGeOEQLR5oCJRS/EzLCpzUqIoCw3wx2rsqK1CKVHLxeGN+
      EPCzWfs958uJ4VFXBUHK0k8PmaYJRVFKZv9+A1mQzgza8+RP8/RLXxygypmo+Hf5E5j5cIsy
      PIo2rsBwxXmMbpnI5OaQ1/OYmZ3B7Ows8vm8a/fKZrPQNA2SJCEajS54dLdpyPoJ8WKDmSAS
      iQRSqVSxf/mHbapvRDwWf7oCPgKYouI9Z/lZPNs/5BVaOVs8r2Cr0UPl5PK7j1i0RIi/8YO0
      KBf/jO2FsryLs3cxH377B0FyB8krxs0/9zvUs+KdwGIkfCH4CeMN7y08w7Kcf6bpzAoUBZFI
      xB31ksmkG9bPTdoPpmVCD5V/iBcQEcWZ/fNKj80sE4kEZmdnS95JJWshSRLSszNPW9xFgQCQ
      iASJU4zicfDAvM2b3y8E/Ddc/fQCv4ooKw+nYP0GlUq6TTR/i+nycfN3GYgrDDFdv+/lTDxB
      m89BCPI6rooGyjLBb/TyidKirc+mtsvEoZQGGjJN24JhmZBMCdl8DhIhSCQSiEQiyOVyFRU/
      Laalm2Z47k+IFxayD92wUCggHo9D10vPtKpL1qImUYN8oYB4LIZsLvfUZV4oCCGQOSVZ7vwb
      Zt/nn/vNtIPSEVcQ4u98uCCIg0yQKYj/LvLv+Q1rkSDzuFHNRLncbwt2BGOZMi0LNnWUva8S
      rrAqY/FYoLAoMDw+ioimQdcNSGxpRggkcBxhfoAJz/oJ8ZKAHwDYMl1VVSQSNchPT4IQgkQs
      jmSNs0LOF/IvhPJ3MK94+dmy32ydlYHfvcPs94pmZzLv6MS/Ryl1Of/l4uHfY++UO6mUbVLz
      Jh4/k5LfCqMSKm32ioOUaJ6qJq7AAcDiKEg2tWFTCtM0irN7G4EGykWCUop80UnMpgD488Yp
      Xg5aRIifPVRZKdmv4lkkuq67HTiiaVAVFYoioz7l+MxYlgXDfJEcHUtt5JVm9OUUdJCS9QvD
      PrPy5U1L/GY0r+BFZcp+YwMBe+53SgEhxCWx+Jmq/E4P9RsExVWPOBiKKxTRLFTpfT6dwAHA
      sAwUTOdezRLl+5iVf0WEyj/ESwBNVhyF7jOj5Dt1Pp9HLBaDLMtIJmogSfMdwDANKIqKgv5i
      UJ79FJKf7Z2Hn3lIvDqRBz+z598LsvOLYUSI3sEsLJ+PINqo3+Xt1ZppxLIKGuSCPJXLycbk
      Ek35ZVlAhPgo/xAhQiwYMpGgFA8odDZFg++dzWazrikoHoshFo0BAHRDx+jEOOayc09J6scD
      P8XntxEcBN627hde9AuoZL8HvANKJXnZSoC/ravcYBJ0+FulvQcWhj9VIah8yl2VydiV4urD
      Dy+X/3mIEM8pFKnUeUlkj/DIFW38XpMFqeo+jieNcnb8krAonSWLyrlauz6DSA8NkqGcuYk3
      7bB4GPw8aHm/BXFD2W8WzitwUVmL9c7P/Fn6QWXCwotXR/Lx821EHHzEUxaefWsKEeIlh0P3
      9L8QXQTr3Pl8HoZhuN7yU+lp5PXn444LWZIR0yKeZx6F5jxwrf+8eUS8jIV/txx4GqXf7JqP
      y292Lg60ogIWIc6eRZt70GYuv2/AFLOfAxafRtAqxE8ukWkkDiziQMWH99vQDgeAECGeEAgI
      Imqp8hc363jwB5OZpgnLsqDrurusfx7Bb256ZvZcGH5TtdzKpxoEvRt0RSMbfPw+83/LKXUG
      cb9BfCdoYBGVsfhuNaspMa8iZRYoZTHxv7M9AN4/IRwAQoR4ApCIhIiilmWr+M1eg/A8kJ4l
      IoEQZz9jITdP8crN79iHhQ4Cfhu7lY6CEBWw+JkdQ83i9zPrAPOmI5aeOKPmTTpsoLBt23V2
      ZTNxAK7TH49qWEIsnN9KKCg8qyvLsjzOdlU7gi1mpA4R4ucGSotnX6lqWdv0fHgvU6M0PsYO
      CkqPgqDIlH7CfVSRnM1rP168H+2RgTcB8eH8mC/iewtB0Mmi5WRjYUW/Ab93q2Ho8Mqfz5vo
      PQyU7mX4rRr43/zyEvSeyJoS91zYe1UNAKqsOAyGol2POX5Ryo6vpe7ncKAI8XNGRFEgkYVf
      aVhp+R9RNGiydybNwzDNJ34RklQcAPyUCVB5ohi0KbsYRV/uGT/rtW2bux/cY5Ryn1FQ7hfn
      U0RVXaaWSOOstAcghhP3EMQL38sNTqJi91s1sVk9f5GOGMbvPUrL+AFoiuZGJpfsSvtftkzZ
      AMEdBaG/UE4rIUIsDhIhiKrzG6NBHc5vRsl+qwa8EuHfW4hnPAFcSqozcbPL3kNAKfVcWhO0
      WqlGdr/yYL+xvwuxhfNx+SlRCv6OBb94qfALZz/30cl8/QXtOYgQN2arMZn5rY6CBgl2JLUr
      N6q/TTFwAGDHMVQ7ujMQzJ9xQghxj4wIEeJlBKUUqqxAUzXAZ6kusjRE5VaNsgvaaPQGql5m
      SZKgKar7XTcN2BUOVGRHVvspvoUo7HJhg1YIi4EbxyKjYq+LA5NffVZa9YjUXb+Zebn3xXIR
      3+ePpVjoyrPiaaA8Y8HP9ucX3jureR62r0KEeDLQZBVa8c5rd55ZhZIDF7acTVkMV3aj2Oc3
      URmosgJV9un2xdV7ObOGqPz4DUl+ReI7Ey8jmxjeT9kG7ZsE2e3Z38Vrn2APYpbHSvqwJMYy
      e0KiWY3/HDTQ+Nn9+fiCwvPplR0AeNtVuSWfuLT1ZKxcAiFCvOBQOSZHOQcewF+RBHm3iuEq
      hZElCTHJn5vvCVf0aOVNEZqiuoMCMy+5JgXnoUd+frAK4p2XQ7kyEo9SqGZw5N8t0UGLXk2U
      t+8z2SrNtv3C8OVUyYwkmoN4MF6/n1yVwMJXfR8A33B48EehVjvyPyoopVCkhY2+VmiGCvGY
      wbx7F9vGeYX6JPqJX38MOpeGX4ks5MpFnmUSdECan9krKH5el4j7HOJMuVwa8xFWlY0SmJZz
      1DwhBDKRSmzsQasPv/yw90Q5q1lF8O8zK4y4AglatYk+C36riappoOUE5P8FZQDwHVMBUPfm
      MOoe++n8JVwwtgEFODzkhYBSCtgOeylckXBgxf0SIqKogHsUMWfTLf5n23bgRUKUUsS5+3n5
      bUIWj23b7qFufqaMai80ehKKvxqIcjF+ujihKzez55VaEMVTDBtUHqLpmI9DZNEAQMHUy5Qd
      S2PxZWtRG5Zlg4BAVjXPjJ0p4moGSXHAEP+y36p5XxxcxeO1xYlEkD6mdP5o7MABIBKJeG7s
      YkKzDY18Pu9eXsF7K4qJ8h1J7BSi4OJ9mICz8sjrJq7fG0F6Lo9UIoot7UsQ1RTfK878QAiB
      KivQLROU2iWKj7BCXcDmyYsOTVYgF6m9lm07NzYBsG127K1THC6117EFAMXTYcWSohSB99c+
      C8iSjGg0ikLBe3wCa3OGXb7tVDI7WPA36Yjfq1USC9m4e1T49TVRWfN/g26z4sOXs1f7Ka9K
      KwP+s2gXBwDbpmWYT49vUJXc9Gz3+khxkCzd94Tvd97ZzC+//HsMYpmKZnmxHHmTUjlfBYZg
      GqimIRKJBEYUi8UQi8Xc79FoFLlcDvl8vuzIJlYse+bXaPKGjf/w1Ul8e+ImdHO+w2qKjN+9
      uwX/9ndvIqpWv3zWhM0vPl+Mrkrh3bxmeu9luYBGJhI0VeNWVwSKPG/KYA1elot3twrvm6bp
      MkKc1xdGY3yaUFXVMwDwii+iaDCK91sErYLKKWaex+0Xvlq7NR8/v5n6NLCQOhNt0X6eqEGr
      BN6OHzTzLWcS4uN5FJPbYsA2xtk/v0kuD1Fh8wOjeB6P6Ev8h6AAACAASURBVLvA2qaoHyv9
      Fc1TDOX2F9x9GxpQmoVCwR0AFgJd12FZlmcgECGOfOIGByEE03MF/Df/y9foH5kOTGvlkjr8
      +//2D0glIo9khxU9CP0aaE7Pey7JeRHBM0CClqJi4+Vng36zEwbL43DDhQFxL0F5moNoXIui
      pqYGc3PzRyf7TTTyRgG27XC+2UqHEIKYFqlqZs5Wobxtlod4Tk7QrBuYZ3I8b4OpONj5tQ8m
      O/vMIM6Q+feDIA6qWT3/zPocARCPzE90+U3qoMHIb1Uwv3Lxt4L4mb8Y2DPTNBdlevL7zZXx
      cQ8AfCJsRSAmzATjr1HjoSgK/uv/+StcvztUMZ1tHUvxv/93f3ykw7L4kZrJyZ77QVwiu2GL
      2xdZPe/73rMCAaBKiuspCPh3YqC0gTPwjcYwDMiyXKIYHH8PcaPLMcfk9MIT9wfhZY5rUSQS
      CWSzWd9wDNlCzjX9RRTN9X8R4wuCSH+sduYvysHAZoLPE4KOSQB8+gC8/aNcWyoHt03ZNvLP
      0LQoEYKYFg2cILJzfkRnLF6fMKUv3irGwH83DAOEEM+5RCytalBJ8TNZZFl2TFILLpEqQQhB
      PB6HqqrIZDK+9i7xM+AsTY5fuVeV8geAa3eHcPzKPbyzbfWil898oZVT+uVmwE6g4vP5j88c
      qqxAU1TPSstvBsI6atBSnQ+naVqJ4nPMR/OMEHH18DRKJKpGPLdtletsbBOMpzkC/kcK+Ck5
      Pq4gM1g5RSeWO4+nbeYoBz/7v2cGWfxrUxsF3YBV3FtRFRUSIbCLplXvaQLE8z1otlwM+kxB
      qf9pBowBxrOgRHOXWMc8a0dU1Ewxq6rq0WNu+RaPj/Cz+/MIWlnwv/Ongj7x00BVVUUqlfKc
      hmfbNkzTRCaTKQkvSRIOne9eUBo/XOjG+691lDUrVQIr5KADpfhwQb8xPA8dmBDizmj9Viwi
      +BmXn1ITPT95/jevCEQ7JvstqkaKZ64Qj9LN+ZiNFg//GbXfd9YZE5GY54TGcgiKK2g15Suh
      zyAh2mrZ7OxZtyERbr9yNsXccTNvFFxFx/Jh2Rb4ErUsL6UzoqhQOW9k/jeAs3M/4xGAgpbc
      4UwpBRRAKk5sZEn2XLXoV8fsb9AAwbctv7OHALj7D+xfUF/lnwf1Y9ZWn8px0HzDYN8VRYGq
      qpiZmSkx3/QNTy0o/t4hb3jRzFQt+CXSQlA6KDzbNYAiydCU4kyCKwtRifNmi6AZgx/YEpLF
      4/c7+83TkBndl6PSRVUNAGDaNswKxxFUIxcP8XjfoBlR0GZZifyCgvczC/C/V2JhsLj9OObV
      DkpPEqJiyhsFdx/ML2w1cNtGwO/iYPq8DYKAkwfDMl354pGoe0gmBYVlW7BtCkKKZQgCWtxn
      otRp/wB1B1Bqs1vJit2VECcue551h6JuAiGQqF18l7r9m0VA4QwAqqKUkDXEtvvUBoAgyLKM
      uro6zM3NuVfgPYk0FrKxJnZ6BlER8B1UDKvKCmxqFzvLvGKwhfp63CAg0IqXjvPKTqx8Xl5e
      MfIDJj+DCJrRsM887UyccbDv/AqQT5/5d0jFWWU1Ez7i/k+FJ6X2abYqKbd5Js7M/OA3SIir
      Hr+z3P3S9Gtbfu3uWa4kWT2x2T2AktN+H0U20zJdc5EDpz5dJci+LzqFJw9WX3mjuEfhN14/
      ozFcsm2P75R4gUxFP4CnBUIIampqkEgkoOs6crkcVrXW497gRNVxrF5aD1mWoaoqdF0vUT7A
      /LK6GlBKEY1G3ThYJ49EIu5mD3+mt2EYKBQK7kpGVRTP7IXv4LbNnNHofMN5TFBk2aVxAnB9
      OPh7T3lZRPszu7IvyHbuB34pysKJs7igwZQvH1mSENMiHpnE6wP96tVvYKOUQtO0Escm8V2+
      TILiF9Pwm/X7bRoHrST9lutBeXoWA4A4CJk+vjl82MWCQmxTfBl7v4dYOILajbj6fOYDAAMh
      xGUd/fIX63D0Uk/V736yax0ikQg0TUM8HkehUEA+ny/pXJV41jU1NdA0reKZLjwkSUIkEkEk
      EoFhGO7gYFkWZmdnS2bU/CwxWvQwtGzb5aMTENBFeCxTSqEpKmKxGCh1GFjMrZ9RcsUNPdFs
      UcnhJ0ihiXn0U8p+s2vPSsBHifpxzauVKRaLIZvN+m7qlnuf3z8S3/VT6n7fo9Go2/78yiNo
      NcbSLyfvk0LQZm+IFxPiQC4eG8Hq+7kZABg0TcOHO9fhlY4rVdNAP9y5DmrxREbWAaPRKAzD
      QC6Xg67rHjOF3yCgaZrHsW0xYDIAjv05lUphZmYm0OuSwBkQFNl7NZxNbejmwnjzBEA8HndX
      Lnxe2OdcLodsNltidw4yCfHPPHILikm8BPtRFBdvMqKUlhylWwmyLLv5ZSuyIFNYOQRt1pY7
      u4V5zhuGgWQyiUKh4Dqi8aZIcXXIrzLZBOJZrAKqHWBDPP+wbAsFc/6YHf74b36lv7BDdZ4C
      CHHoo//Dv/stVi6pKxt25ZI6/Pf/7reIx+O+DVVVVdTW1qKxsRGJRMJ3Fg44CjIejz/WfADO
      YFNbWwtFMAkBpXsNzLRECIEiK1AXqPgkSUImk3FXHaKCyefz7kqAmUZ48JtuQQonaC9F3FAW
      FS5/TsxC87RQxONx5PN5D4umUr7KgScGKIqCRCKBSCSCaDTqesPX1NSgpqYGkiQhm82iUCgg
      nU5DlmV3IqBpmmcWxpcRg1i+j9srmK0IeTOmSNAI8XLAphSmZcGwTF8aq7vHRwN6xaM6gj0q
      TNPE2GQaXxy5glPX7uPm/RHY1DmqYEv7Euze3o6//fBVNDekqp4lUkpRKBQ8CkGWZXfW/KTA
      zkqybdtNnwevKJkCtantVmA1YHx/27ZRU1ODaDTqcTyZmppnSvEbmqJZw28FwO8dsDAi+HgW
      akYIik9kLfHyiZ8B5zgS5qPAHMB4T13eXOWXnigLIQSa5rCUWL0UCgV3QLcsC6ZpBrriS5KE
      aDQK27YxNzfn2YjmDxVj38W02bPHMRDwlF0RQfsilNLnzqkxxOLA6jQRiXknh8/rAAA4Quu6
      7phy8gXMZgtIxiOIRSNQVRWapr1wS1TDMJDNZl1OL18Z/Dnt7uwV7Po/Z2+Ap8m4VUfmHVNU
      VUUymfSkSSlFOp2u6ERSzSw96P2gAYCX0y+/QPmZvt+7fulLkoS6ujpYluXbdglxqKvMLCRJ
      kuczi5NX6oxUoOu6m664wR1kFhLLkj8DRtyMZ96kavEieXEv5VGPh3DPfSHEc38snydWRp4V
      CbWR0x+nn0aIZw2HZUqgSIpzBtjzOAD4OYgB5RVUTU3NkxTpsYN1RHZuErPLAfMdkXV8fobp
      OtoIDlfA/B6AXxlls1nMzc2VzARFRSzO8kUFwSCmEXSEBIuDf6+aQcg0TSjcZSui2YQpX2De
      fJZKpZyjA/J55HK5knzy5crvBfGb4Mxsw1Ztvns3Aask0awXFF4sT2b7Z8/Ec9z5vC4GTNlb
      tgVqF+VwZQKoTYsUzyJPnVLIsgSb0vBO75cUBM8ZC4jHs3aAeRpgtlhVVRGJRDA3N4dCoeDp
      9KKC55/7MXqy2SxyuRyi0ahnT4NS6vEiZOCVopgGH7fo9euHoNk//4wpdWY+8duPYRA37f02
      ZXn5Y7GYe/YUs//zM3NxgzrI3s4GECan36DHr0TEfPNKXawn0Rue33dhYfzqpNKgWQ5sUDYt
      c2G0Y8ub5xAvFyieA0ewQFAT/+v/9D9iKlfA5p3vY1U8h+9PX4Nl5PFf/Ot/iy1rV2DvP/0D
      JkkL/s3fffqspX1kEOJsfGuaBk3TYBiGe36SGE5UZH4mEl552f9/e2ceJFtW1/nvOefuN5eq
      eu91N9CyNE2z2KI0iyjaKNJOKGq4xKijEzFLhCsajOug4wwiaohjYIRLiI6h4jZg4AztOI6s
      IYtAI7RAA43Q3dDQ21urKve86/yRdW6dPHlv5s2sm1vV79Pxuqoy7z33ZlbW73d+e5Kg3W4j
      CIIJF4T+vVxH/Qoc+8+LYgDT1suzKOSaebtaeVxe+iZjo0CsTL2VxHGMfr8/VpinCl4160G9
      B3V9vRVD3uvU72fa40VprXnHqoqqKHX0JJXBaVo875c422ykAug89ClcYhfwK7/4g+h0u3jH
      G/8A3/1DP4kn4iH86h/eiV/5uR/DBz52H5L4X4BToAAAZE3WAGR+/FarNXGcKkjl7k51haRp
      ina7PZZOqKbBlkFXCGomjLz2NDdPmbXLxBv0c2SdRhRF2XuT53rRXS5FweSi1zztsbKoVo90
      Uan3Ok2ZyntWEwPU37dqxUxjTMlSSj+Rw0bmf9W+5FbcyC/j5T/+CtzzmS8AAP7ot/87/vW/
      /SG89I6X4NoXP4Hmjc/C0x9fx70PFc8L2GYMw5hal6AKObUVrUQKful2mea/n0WR71q/XlGG
      ibxXeR/SBVRWaQgh0Gw2IYTA/v4+Wq3WxPXUe5TxFfX5okydZSP97+rOXm/iNet8NY1WDehO
      O19VOKt+zcT2sJFB4GuXLyEWFox0iJ995S/ia555PZ7+rT+CW5pDvPKXfgu33mDivsMUTtKG
      OP+leOWPfj+azeZa7nWZSL++bDehUtR1U1UM0v0xS9DM2o2X2bUWZZLo95znGtGPl9aL67pj
      CkPt7a8HyNX3Qd8tq7tovb2EPCfvPoreC0nR8fr7paLHVcqsP+33kxePkOdKlxHnHFEcI4gp
      oEuMs5EuoEHrEn7x134L9ZqL5774DlwQ+/ifv/+bSPptfNt3fh/u/ecP4DU//gMAgN9//e+v
      +W6Xh4wNMMYyt4cq3Ip8ynkuHFXYqjtQ6R+XQndau4Npvu8yAlUvEtMxDANCCHiehyiK0Ov1
      srVU//e04LG8Tt7oPWktFVHWLVU2FqLer64M8jKmiq4/7Z703696/FjzryUP4yG2k420AA4P
      D+c+57RaAMDxH/RgMEC32y3cXaq7YjVrR1Uaus9cDZDmCZNF71t1d0wTuvL11Wq1zGUl3UPq
      favrzlI2elrrtN2zHhwuYy3l3Yf+uouO0Y+X9z7PtfO6kuouL/3ag2BISoCYYCMtgFkC46yg
      CwRZsawqgaJskrx1pCtFT+nUzyvjEiq6T93NUib4LEc3LjoERXWrqIHfMmuVPS7vekWPq+tN
      c5+p9zurZbVcq2gIiHqM+lUeaxoG4oq7zxLbz0YqgG0r6loljuNACDE2ZlP3weehCyXVpZK3
      q1wEXaGUEayy6Ep38agUBZ3V56YFoYvQlWieMNWtrTKxEjXeoMdl9MC0GiCftq5EVxKqwi06
      Nzs/TcH57M0VY6M20JxxJOn8A5KI7WEjXUDEbOI4xsHBQaFwLArUzhLKea2wywjWskJSxbIs
      2LY9VvOQF9TUhXxRvEM9v0wAddp5+nNlXFnqPQLHO/xpCnGaqyjP0sq7T3nNWQH/JE1gCGPs
      vCKGYQBDGAiiYKQRiFPJRloAxGxkEzvZblhF3XUC87US0PvzlBGeee0aZuF5HtJ0VLOgxiPU
      1yDvXb8P+dg0q6VMnyG5Vl6RmP468obk5K0lz5WWgJrCmXeu/vy0AL6qxNVsqlnWn4Sz6fMw
      VI7bB5PwP82QAthiXNdFkiSwLAuGYWSDcIDxnfQifnVVqM8Sorpfe9bxjuMgiqKxJmuzBKsU
      erpi06+v3lPZ1y0bw6kdQ8sqkDzU+9ELwPQuoEVZUeq957XCqLpVdCEk/081pAC2GM75WOdP
      mTIq8+WL+ujMgx4v0AWWbm2omTdF7hjTNNFut6dmwejrqa+jSDjnZcHMygKS6+k777ysIv35
      PF983nFFj6nWR9496oOECKJqSAGcMlzXBecc3W53TIhWtWPUd9+SIp+7LsBs2x6b21wUX9CD
      22psYlr75TyhPi1rSUV9j9QJXnnXKnLD5B2nvqZZQetFYinLIkkTIE0pBnCKIQVwCrFtG4yx
      rCdQXgZK1ehZRsB4EzkhBGzbzpRT3s5YdZXkBXyL0GsZ5HrA9M6y096TMo3X5lGqqiWltnPI
      y+mfJ2azTBgYCf9TDimAU4plWWNB4mUrgDykUJbjEgeDQeb319HdQfJ7/bG889SA9bS0zqJr
      rho92K0ruU0Q/sDRvYH6yJ1mSAGcYlzXzUZRrkPYyZ1/kiSFQ37yXEd6/vy0e9ePyYsjbDKL
      BulXxagWID02BFKMesmv9a6IqqA6gFNOmqZjg1KqjAdMg3OO3d3dbATmvEJOdQHN6wvXs26I
      aomSGFFy+oc2nQXIAjjlMDZqKOe6Lg4ODrLpY8tGDkNvtVpTC6jyagjUfPdZiiOvuyixXOhd
      Pj2QAjgjMMZQr9czv7x0s1S9Q2ZsNJ7RNE0cHIxmNRQJZ1XA68eUnYBVpCBWZemcRRhjEKxc
      fUSapkjIYbSxkAvojCGzUdTpYUWB2XkxTRO+70+4fYqKyYoEfF5lcBFFLqJNyqY5y0RxjCgl
      d9GmspETwYjlwRjLJnNxztFoNCrpvup5HhqNBlqt1lgNAjB/MHYewa3n10+rQSBWzyiTqFxW
      FrF6SAGccRhjaDQaJ1rD8zw4joODg4NCwa3/8S9DGDDGsurZTc+uOSsIzmEbJixB3uZNhBQA
      MXP+cBFSedi2jcPDw6k+ez0VtUrhrFfP6uMyl0HZ9fPaRpxFOOOZJUBsDqSWCQDzD+FhjKHZ
      bCKOY+zv75c6Z1p7hkWQglUd/7iKbKC8PkDy8byvKmc5LmEKMR4OPqopkNDEstVDCoAAMKoc
      ngfP89Dr9eYOIFe5888TtGrH0GUI2ryAdlEqalGzu3VUZW8CYsowmlFyAimAVUMKgABw3LfH
      tm0kSZJNqArDcOw4GUA2TXMl9QTTyGuhUMVks2nXU9ef1Z20qCPqNgt/tSlf2VoNYnMhBUBk
      nDt3DmEYIgxDDAYDCCFgmma2ew3DEFEUAUDWcnpdVOlKKnu9aWMXi9w9pyUdlXOOOGX45CNt
      PLzfRxAl2PFMPP1xdVzfsBee5yxhjMHkxihKoDQgCpOIqgiWCNUBEBnSn78NOzp9J5qnEKoU
      unmjMtXr5c0e0Psb6fe3LRiGgXseauH/fvRRdIbRxPPPekID3/HcJ8Di1VsDQRRSIdkSoSwg
      IiMMw60QUHoQVlcEZSqIF2Ha7AL1PvIoUiCbjhACH7jvGt501xdzhT8AfOrhFl7/rvsRJNVn
      O23je7ZNkAIgMuQcgWURJvHEvyiJ587+mNZWQmYaVa3IZBqrvEaZ9Te1zXNZGGO42Arwdx9/
      dOaxVzsB/vdHHq6kqJBYHRQDIDIYY3AcB/1+f0lXmGwjnAIwmSgVQAXy/e15AnkZlsxJ1twG
      y0pHCIF33fsIyt76px5u4WJriPO+sZWv9yxCCoAYw3XdCQUwVsCF426Q81oLJjfGgqlpeqQQ
      lJ37tN19nhtl1bMO9GvNeg+2WxAyfPax9lxn/MtjbVy4ea+y1y04B44Mp7FPYTo5qIamFMwP
      KQBiDCEEHMfBYDAYezzUGnoJxiHmrOzME/CcjcYOSkEuO5VKpOCXfn39/HUJWH1ewTRFoA+d
      3xa6QYQwnu/9PeiGlb5Wzji4mO2pTpIEQZIfoyCKoRgAMYHneWM/M8ZgcQMmEzCO/vEFhP+0
      QKha1as/LhUDgKzNA7AZu+tpMQGpIJZZm7BMrBKCd+IcYz2vdf2fhO1kOz+ZxFKRVoAOYwz8
      6N88u7w8Iaj3BSpy8QDHbh7O+VjLB2Cy+Gpd5CkB2dJ6G3f/wEiYn6/NVyH+hF13LYqZH9UR
      jP6NNikmn9dGPXtsxl8PsXEs0hyuiGkCUO78Oee5VaXqLloVpqqy2BQlkDfJbF3zmKsgSRI8
      /6a90sfXbAPPeHx9LdlOjDEIzo/+CRhCHLWeIBUwjc34yyE2DsMwYJrmidfRc+TVzB49XVO1
      FMI4mngsL1NIsg4lkKSTHU51JaZbLNtEHMd44VPP4YbmpDWYx8u+4nEQG+aMMY8GH81CV96n
      ucVFmqZgGKlGqgQmCgmCAIeHhydaY94CKLWXf151rY7+8d2UXHtdwW2rMGGMoRemeMP7HsRj
      h4OCY4Bvfvbj8FU372WtQjaJRWo25HnDOMw5ertJ0xS+PXLVkQIgpnJwcDDREK4sespnGUVQ
      VG1b5vi8QTB6xbDewI2YDWMMYAIfvP8q/umBa7jSGXWANQXD026o4yXPvA7XN6ylVWCvizRN
      MYiCrY3hFJGmKVxzJNtJARBTGQ6HaLVaC51b1K9HRX9c7ayZd45eHKbGBaa1YlafJyWwGEKM
      CvaCKEEQJ/AtA0B64kZwm8wwmtz8sPH/5UYZ4jQGAx+lOWeHq8eP/h/OkbpqCgOcTbo6U6RI
      Z3yW1fodYBQvAagOgJiBYRiwLGvuvv+c84nArsyKkd+rrh71PMmsnZeqLFRhHsfxmOWho2YQ
      bYsSyFNuq7im3tohTVOYgsEyjqt99WOkQvA8L4sjhWG49g6yi2Ab88fBoiQGEgbOGcwZozCj
      hJUuYONsFORW3YujJAMAU2YtTIMUADEVIQQajQauXbtWus+O+gFVj42iaEJYzBu8VZWJFOBR
      FOUqDl1oSsWgH7vJu9e8QrNVZhZN+/0UKWjpClIFfr1er/bGNpxZxYEq06xjudbo5wRpemz5
      VvEZIAVAzIQxBs/zEAQB4jie6evN+zBLd5BUAvP8gRStLWsD9FGTsnJYv0ZeQHrVRWXzKJyi
      AHpeyqzedroqWg/fh1/53T+Bbws850V34Mn1AZwnPB9Pu7GJt7zlTrzk+V+K1/zOH8O1DHzT
      t38vvuo5z8xd57T50adhcAGj5I7cNkyEcYQ4SWAbJuKj5ohJmsIxrFwXaJWfVUoDJUrhui4a
      jQZ2d3fRaDQKU0TzJmaprh/OOaIoKiWo1Ayaog+9nran1gZIRTPreGkVLFNIqdeQvvQiZlVN
      68fkWTxVEXT2cfPzvw7/7VWvxjv/7s24/OiD2G8PAQD/8ul7EXT2ccsLXoJfetV/wZ1v+vPi
      dYJg7rGjZwXBBSwx6pNlCAOmGBW0rQKyAIjSSAFj2zYsy0Kv18vM/Gk9cVThrQrmPCWg59Wr
      15UuHF3gFfn786pwZwWV1dRT3TRXrQs9SK2vU3Q99XFxlKOu7+TnTZuV11fvu0refudf4SN3
      /iFufP7LAEzGgt771v+Dq598H65/cv7uHxjFAGzbnjuWdBaQ/bCOf+aLuvTnv/ZqLkOcNhhj
      8H0fzWYTpmlOCGZdkKuCKkmSqW4kvc2DqijyhKOufOQ11LWmtWTQFZG837x/8r70nbf62DRl
      mHfv0jo4qRWyLGvmjm/7brz+T96I/c99HJZl48rVSwCAdmfUKfQFX3M7rlx8DC+6/YWFa0RR
      lM2ZJjYHUgDEibAsC41GY+yPW0+z1P3wenqoiu7+UJVJ3rCRomvpAlDu2PMou2uX1yvKyNkU
      P7d8D/NcYPNieQ184v3vwC+/5tV41m1fjRfc/s1415v/EL/w8z+LW194Byyvgac86Un49de9
      Dm9905/haruoWGx2UR+xeqgOgKiENE3R7/fH2kgnSTLhnmHsuONnkUBXU9zyfOV5Aljdteet
      NW9Ghl5HMEvoT3tNedfIey1lz1HPzSuEU9dVraF5YYwt1A6kaLSoZVngnE+0GifWB1kARCXI
      TKF6vT7hm5ckSZIJ9Wn5/qowV33bRe4f+VW3KuQ1pmVS6N+rbif1cXnvRfdcxu2ir1cFumKS
      Ofh597wIco15/hUhA8Hb5grK64y7iaRpijCJESQRkpJxILIAiMqJogjdbjcTRnmCXP6c5w4q
      Cq7mBVrVwLBM/cyzOlT0amN5jFqnoCoDPcOoSGGVQbVsTuIOyYuxyPs0joq0dPfYJiA3CnIT
      0G63N+r+VNI0he/7SJJkK6yWJE2RpkeT9VAyBkUKgFgGaZpiMBig3+9PZAGpO2BVIcjzygpe
      9VryeXW0pJ41lHd80bn6iEoptNU1i5RbmffmpL5w3YLRX6fcjesT1jYJ0zRhmubGVgjXajUk
      SbKx91cF22WLEVsDYwyu62apf8PhEEmSwPO8bJfd7/ez4jJ1N64KZd3FoSqIPNRzRUErYHVN
      PUCdJ8z1+9IF+LyCPy8AXtZ9NOu6qvtr01tdRFEEz/MmYhmrRAiBWq02YYnUajXEcTwxH/u0
      QRYAsVaCIEC7fTx4vMi9MiugqzeFm+ZqUXf18+zEZ2UazYsMHC/iDspTSqplIt+nTVYAwKjX
      lOu62SZhlTDGUKvX0daaHfq+jziOt8LtcxKEEBQEJtaLZVnY29uD4ziFGT9qQLZox6sHVqUF
      UCVld/pl0YPhs9D9/mrAF0BWXyHfr00X/sDICmi1WmupEnZdN6tlkMj02dMs/DnnGMQMf3P3
      I+t1AQVhAEMYGzPSj1gPjI2Kynzfzx4LwxDdbndsHnCRG0R+LXKvqKi+/XmFubp2FXnti5wb
      x3Gm2E5LTv06XgdjDFwIJHGStWwGRhbJovMvtgHOOT5/tY83vPsB9IJ4fQogTVNcunoFaZrC
      tixY5vEOgDM+ajdwlIN8Wj7oRHlM00Sz2USv18NgMCgUuHq8oCgvfhpF1sWs46oK5Mq11NeX
      F8DWM6iIxWCMoV6vo9frjQl/4HQrAMYYrnUj/NE/3I9hOLIO16YAekp2yDAIMNR7hHSOv3Vt
      B/VaHTY1kzpTSMvAMIzCTIwi//60NYHJgi/1sVnnlmVWCmveerPu4bRay9KyWeZUMSEEXNcF
      YwyDwSB3fKVhGBOB300PppdFCIG/ufvBTPgDa1QAtm2DM1aqYKE/HKA/HMAQBnzPQ92vkVVw
      hrBtG4ZhZD7v4XA49serBjtnBYz1wGhe/UBV6O6mMrt2edys+MU6M2eWwbLTVS3Lgm3b6HQ6
      he+b/AzIQjUhBCzLQhiGpyIbqD2IcO/D4wHvtSiATq+L/cMDIE3HuuDNIoojHLZb6Pa62NvZ
      yyyCYTBEmqaI4himYUAIgTAMMQwCGIaBmufPWLlaCF+A1QAAIABJREFUyroUiPIIITKhaNs2
      oihCFEXo9XqZS0TGCmT2T9HvQU/3XNauelY84qRrnyYFsOyxkp7n4eDgYOoxsqmhaZojeXIU
      oD4NMMbw0LXuxONrUQA1z4fgx61wD9stxEl50y+KY1zZvwrLtGCZJnr9HqIC05ExhuFwiHqt
      nsUUqiZJErQ6bdiWjSAM0Ol1YRgGzu+ey2ZvEtViGEY2rrLb7SIIgomiqDyBohd+6VXHVWf5
      5BW4laFqd9Sms2zXVhnXkm3baLVaua6hbYcxhjCatLDW5gJylf4ajuPgoHWA3hxmVpIkGAwH
      GAynp2ulaYreoI/eoI+6X0MQhnBsuzI30jAIcOXaFSRpinb3OHARBAEuXrkEz3Gx02ie+DpE
      Ppxz1Ot1BEGAXq+XuXPkczp6odQsn3ze+fNU/err6sVkRRlNZTgtvmnTNJcqdE3TnBnYlZZg
      GIanTrkCo8/bjj8ZQ92ISmDBOfaauzCEgZaWl1slUkAPgyFanTbqfg2NWn2hX3iapuj1+7h2
      uF94TBzHaHXa6HS78FwXNb+2NCvkrGNZFizLQhzHCIIgM+cHg0HWnTKvO+milLEWimIRVbk6
      TougiuN4oa6jZZmlAGzbhuM46HQ6p+Y91UnTFDfueag5BjqDY2VbSgEMgwCtdiszuX3Xq/wG
      GWNo1hsYDAcIVpCGlaYpWp02oijCud29uc8fBsFU4S9hjCFFim6/h/5ggAvnzo2lvBLVIjM9
      JJ53/FmV84ylOyBJksx1NA/zCAlZsCUbtMkCNdu2sx28DBbL3acaozCOYlqMHTerM00zO17e
      /3A43NqYQFHb7yrJe2+k9cg5x+Hh4amwpqbBkOKlt96At3z4oePHprWCsCwLwyDAfusgM9Fq
      no/d5s7SblLGBFR3yrJp1huoef5cH8I4iXHp6pW5TVfPcRdSOMRykIJW9n3Rf5+65ZC3k5dC
      27KsbMcv15HBTflcFEVZamuVyKZl25qtUq/Xx1qCVIkQAp7nZetzzlGr1ZCmadas0PO8LBV1
      HW0pVoUwDPzZez+Pe744CohPVQBhFGK/dTj2+CoE2GA4xOVrV5Z6DR3TNHHD+etKHx/HMR67
      fLF0320AsC0L53fPndpc7m0nTY87mKqPqa4c/XfH2Ghoiu/7hXn98rhVEMfxXIHMTclY830f
      3e5klkoVSGHf7XbBGEOj0UCn0ykMDMu0Y8MwMBgMTp0yEMLAWz/+KN5976ViBfDQow8j74kL
      e+fhLLlJ3GG7tdRYQBF1vzYyzy0LpmFiMByOcoE1/2SSJLh09QrCqJyrynM9+K4L27LX/odG
      zGY4HE4II6kIhBBwHAemaVYycnEZpGmKTqczs59NmqaI0gSCMXC23k2J4ziI47jyKtxarTZK
      CT8S4vrPs3BdF4ZhTK0f2EaEEOgM52wFYZrm0oV/FEUrdf+oqNdV88kNYcCxbZiGgU6vhygK
      Ec/hL/QcF449/1ShNE3R6XURhMHoXhhHs96YcB+kRxlI/UEfYRhht7kD36s+TnNWkP75drs9
      lq3DGEOtVltqwLIK5H1yzqf2so/TBClSbMJgwCiKsqKrKpA7fdlyHEDW3Vi2FilDv9/PWkZL
      N+E2KwL5upMkgW/x+RRAmiz/hbe7m6FpZUAoSRIESYAgDGackY9tWSdSmkmSjD50Rz8PgiHO
      757LrJJhMMTVg324tgPP9WA3LQoyV4Bpmmg0GpnfWO7+N134SxgbTd6Sfm6dNE2RIIXB+EQ/
      nHUQRVG2O1c7nS5KvV5Ht9vNXGGyqrfdbs9ttcVxjHa7DcMwUK/XEccxoijK6ki2pW5ALaaU
      zKUAojhaesR+oifQliP44m4CmRnVqNXRH/Rx0DqEYRhod9oYBMdZH+d3z43VVRDVYBgGfN9H
      p9OB4zhbNx9D9lJijE1YAowxWGwjssAzWq1WNn/XNM2F/e/SklAFs+/7Jw4yR1GEw8PR36CU
      gbZtw/O8LJtrG6aHPXj/Z/Do1Rae97znzR8DWLawaXc7ONACz9uKZZq47tyFyvzEetXqMAhG
      u9ItG7K9bchh5ttMu93eqh730oIRQqDT6ZRO0ZSun8PDcRnSaDSW3tbBNM2x9N5OZ35X9jLb
      hwghcM8H3oq/+PuP4vbbnoL3fPQL8xeCXT24hvO755YWC/Bdb2sVgCEEPHdkdnPG4R+Nu6sK
      vWp02fEYYsS2C39gFPyU/ZPKsO4qY5m1I11xnU5n5r2naZq5flRM01xql1FJGIYnjmFIy0Id
      glQl/+8d78erX/0aeILhQx965fwKIE1TXL52BZZpYre5U7m/eSTYnJktHlaJ2rNOcJ4FgI0j
      fxrnAs16A/ZRrjdBbBpyZ7y/vz9TsDiOk3XnHAwGa43JhWGIw8PDmambwMgdI/3z+uObXh+h
      u9VlMWDVSjgBg+AjGWUIsXgriCAMcfHK5VEbh509WKaZVfEOgwCe66Lu1+ZelzGGRq2+dgXg
      ux4814VljoR6nMRgjEMoOyPK5ye2CXUAehG+78NxnCwDyvO8peXnlyVNU7TbbbiuO/VeTNOc
      eF4W6a3CAlgUtSeV6uaV916lEvj6r7wVr/3N/4GXPu8puBKK+WMAZWnU6mjWGwufL9MfuysO
      qgghUPdrCykvgtgGWq3WRHBVpo7KYrhhDNgCG5Xh0mw2J3z7EjnlS/fz+76ftczYRNQUYyC/
      x9RJ3UHqjAkhBD72T/+IBx87xDfcccfymsGd1BUy6uHvwzTMlcQEBOfYae7Ac9zZBxPEFiPT
      LeXO0rIsOI6DXq+X9Ru6+6EebrvRx/SxNKtl2iCXWq02sfu3LAuc860W/hLpklukb5XalhwA
      vvz5L8KXH32/NAUQVrRzqPujgpb+YADf9RBGIbq9HqL45OszAKZpoVGrwbEd8t8TZwLOeZbe
      6vv+aJ6FsnPmnOP+qwPsegK3nLM2oklaUcto13Uz14/u5nFdd+MHuqjCXxXScl6FOrBomstZ
      nqtOodOfk/UVKktTAFWajr7rZR1IXTio+zVc3b+GIAxg23bWZEutIVAHgji2A37kx4/jGFEc
      gwG4cO4CzRkmziRCCDQaDfR6vbHMFcYYLnZCdIMED1wd4hkXnI1QAPqAHyEEfN9HEASFQj6K
      oo32/+tCX+7U5UyLorGmechjZNfZvOtIN5DKEhXAKBi8DAHLGMPezu6EpgvCEIZhgGU/BxBc
      TPRsCcIAhjAoiEucSWSVrWyNrf4dcM7xwNWRK+XhwwBhgqlT7ValHAzDyBSVLG6TgeoiTNPc
      +MIsdXypFNAnadCnvh/60KG89ZamAJI0xUHrANfP0WGzLK1OG6ZhwNX89XrTNtvKz5OnVgnE
      WUYGeoMowYMHk5b6/VdHGXhJCnzkoS6uq43/XTUcgetqZlb9uiriOIbv+yNrf0aFsO/7a09h
      LYtUAuqOX3cNlbEGZNqodBupVpN+nnx8qSWkidZLvSqqGudIEGcRwzBQq9XQ6/VgGwHe+dkW
      +mG+IP/YI+M76KdfcPA1N9WzXjirQgiRyZFZwp9zDsMw1p6+Og9FclL16etuMF0pyGFD+thS
      uUYelSkA27LgWA44Z8DRjS2rmo2EP0GcDBkIvtkwcN438a7PHuILB8XZMqZgePFNDTz13Gjs
      5jxzMKpCHeoyDcuytqrthSRvZKnqHlJrAvQgryrsdX+/rijUoPCJFUDdH2XQUE8agtguGGNw
      HAfnhMA3PZPhnkd7eP/nJ/vXnPcN/Kun78A1UgyCIQy++uRQ27ZxeHg4c0Mpu35uevZPEepu
      Xfffq64gSdGs6TxhL7+qx51IYtf8Gpr1Bu3ICWKLMU0TnDHc2MyPjTUdgZrFEIbRWoQ/UL7P
      TlkrYZPR+wHpvvy8ugHVSpDH6coy77GFFIDruPBcl4qmCOKUYFkWHvjC8e7fFAxhPBIWD+4H
      SFKWu9GLEzlU5sgHvaTJYmXTyvOE3Lahp63qQl9FjwHkfc17LHMxzXNjsj/9uZ1dEv4EcUpI
      0xRhGOKBa6Pg6hN3LXz/befx0qc1YQqGKEnxxYNhfjIHy/22UvJy24vYpNYVVaHGUlWhvmgQ
      Xq4lyjSDk9rHMk24toua7y90UYIgNpMkSbDfC3HQj/CiJ9dw6+M8xFGEm/ZMXFffwzs+c4j7
      rw7xpN3JqmDB+PIk/xGy0LMMp7W2R88GqoI4njIT2LEd2JaN2lHRBUEQp5MwDHGtF+G7nr2H
      PVcgOvK1x3EMTzB8+617R+mg65EDsk9RGU6zrNKtIJnrL5VDnpWkP64qcMdxihVA3a9t3Qg8
      giDmJwxD3HTOgeM4E+mTaZoijkJ8xeNdcF59e+JZSPdP2XYOp9UCkOhZPMCxl0avAtbRf29B
      ECy3EIwgiM0mjmMkSZINgTFNMzfbRgrgVSsA27bnKuja9gDwIkirR9YMqG4i2VeoSCGQAiCI
      M4wU5urO39RaquQdf+LrpimSdLSWYLzQdTNPABiYzKA5C0zrtqALf12Bn257iSCIqTDGEA37
      uHZ4nAIa9tv49Gc/DwB4+JFHs8cvPnaxuuseXZvP8NnPq3DOogUAFM8ScF0XzWYTlmWh2WzC
      cZyx50kBEMQZ5+Bzn8Bfv/OD2c9vf8tf4id/4ZcRA7jr79+Ev3rbB/Gev/1z3Pnuj1Z2TVkz
      wKfs/olx5OCbRmOy+FaNk8ivhmGAMYZWq4U0TdHpdCaC6eQCIoizjiZ/33/Pg/jhb7sN7//4
      g/jO//jj+ImX/zAC+wJ+53W/inTFDeAWcelUVQwWH7moOKpLvVwUzjnq9Tr6/T4Mw8jaY3PO
      s0Z5tm2Dc44wDNHv98E5RxRFWRpt3ntCCoAgiIzh4SO468MfhZUOcXDfW/C1z34FPEsgECYY
      cKI54fNi23ap9g8qYRjCtu1SzeAYY9jZ2cH+/n7u87Lh3Sw31TJhjME/qr3qdDqjgVZRhEaj
      MWrmZhiIoghxHKPTGbnxXNfNZiZ0u92xLKGJyWNFQ+GHwyGlgRLEKSeKIjx49z/gN/76/fiW
      25+Lxx64B+e/7Btx+5c/BT/3Mz+Dr3/hM/CYdTOu696La40vxfd989eupNpWujsW6etTr9dL
      nddoNHJHSW4KnufBNM1M8BeRN1tYfs0LDquKgBQAQZxhoijCweVHcdfdHwcAnL/+cXja054K
      AeChBz+Hg16IW595C4AEn/70fbjllpsXUgBJmmaB3zJId8ci1/J9f2bqaKPRGA3FWfPA+DRN
      YZpm9r7IVFwhBPr9PgaDQeF7Jge/yEC5KuyTJEE/HCom26hjEwM7+nr0MykAgji7RFE0V559
      kiQLCeU4SQCG0s3iGo3GWEtnOewEYOiFMUzBYYlRFay+O67X6+h0Ork+b855Ngxn3X2D5A5f
      KiHpphkOh6Wyn9TZAXK3r1oBvWC2G4xiAARxhpHD1fOI47iy1srT5grrmKY5JpyFELjUCfHe
      z17G/Zd7iI66lO75Jm57YhPPe3ITSOJM4A+HwzHBqiLdSutIF+Wcw7KsUfttzhEEAQ4PDxde
      L2+EJHCcOltmoDxZAARB5JKmKQ4PD+cOxJ4U0zSzge6GYeCfPn+It3/qSmEA+vq6he99wePh
      GsdCLy9+oK67amzbzlptRFGUZecsQpHPX81+StMU/XCAWf2bqA6AIIhcGGNoNptr6a8TxzE4
      5/jUo128bYrwB4CL7QBv/NAjwNGwGn04ikSmSK4aIUQ20Ww4HGbtGRaBcz7m6gEwYQEcM/sa
      pAAIgiikyvbDZTFNE0mSIAHH2z55udQ5F9sBPvz5w2wO7nA4zL5X112H399xnEoG1Jf5XaiD
      X8qkr5ICIAhiKuvyl3/mYhfdoHyK5t1fOBwLjOoKYF3TwgzDqCTVtEj4J0kyNjRGUualkgIg
      CGIq66iCjaIIjx7OzmJRudYNERwFiGWVrGRdu3/O+VLrDLJ8/hyXEFkABEGciDRNV9r+WUXO
      JJ7vnNG96gLR8zz0+/3K7q0sjuNUVmswzXrJcw+VUdykAAiCKCRvAMmqrtt058tSNwWDZx27
      fWQzNL2mYJUs0s6iiKLfhZwDkDcoZhakAAiCKKRMT51lIITAzdfNN3/8pgvemOM7SRI0Go3C
      orBlKzZZi1DldWZZAfNCCoAgiAmSJEGr1VpLzrzkQs3E028opwQYgNuftjfmb5ftFOJ4VCQW
      JTHC7F+EMI0RJ8vzz9u2Xfn7N02RTVgBFAQmCGIRZNfJdQ5YieMYL/uy67DrFU8ok9zxrPO4
      UDMnhOFwOBz9jBQJUuW/EcsKcMs6hGW8f2PdPI/6Acnv1eIwcgERBDE3w+EQ3W53bcFfSZqm
      sHiK//CiG/GMAkvAtwS+4zk34PlPbo7t/mXwdZoQNI4G0iyDZWUd6cVtchCMtHLkYwBQRrdR
      LyCCIDIGg8Fa3T46IyUAfNdtN+ByJ8R9l7o47EcwBcPjmg5uud4Hx2SDOsuyZhZfsRKVsotS
      ZfBXUpTpo9c7AFIJzH59pAAIggBw1D+m3892kLLV8DrdQFLgxXGMc57AhZt2xoabJEk8amuc
      0xdHtWAYGEw2WRi2rHs2DKOS6t9ZFLl6GCun3kgBEAQB4Lj/TpIkmZBddiHTNBhjMM18/7/a
      P18lDMPc2oVVFrN5nrcS4Q/kKz75GMcoKWraS6cYAEEQAEZ581Kgqu0FqrIA8oSwECKbaWsY
      k/vRaNjHtcNO9nPQ7+BDd92FRy9dQzTs41P33ovP3vcAomT8HvPcIqtAvoZVVR3ntYFQq4Nn
      teEmBUAQRIbruhODRdRMkyrgnMNxHDDGsgCmOtglDEM0m02YpomDz30Cf/3ODwIAgtZl/PDL
      /xMuX9vHn//FG3HwuU/g9X/2Znz4rvfip37+VWPXWNewFzlsZlXI340+D0BaQAafrgjJBUQQ
      RIYQApZlYTgcTqQXFlWclkWdWqUXmAkhMrdTGIZotVqj3bRiNLz/3X+H7/nBn8Yt54AL1z0O
      YAHqO7vYqddRbzSy4+r1+loK2Gq1Grrd7spjJvr1pPUzaojHkUbFKaFkARAEMYYcBKUOHpF+
      9bx+9GVxHAdCiLGYguu62N3dxd7eHhqKEA+CYKJ3TxyGsEwTURjgj//kDQCAMAgQRBHCYJRx
      U6/XMRwOswycOEkQxBHCeLkWgWVZmfJaJXrPIwATwW8xxQogBUAQxBhF7h5d2MzrFkqSJBOQ
      hmHAsqwsjVFOybIsa8J/f/+nP4n3ve99ePZX3YE3/O6vY78bIDlq+saFgebOLvavXAEAdDqd
      rPlakiYIkwhJmiBZ8q7csqylN5ubVgVc1OqaMTbVDUQjIQmCmCAMQwRBgOFwCMuysrz24XA4
      FmSUAchZ7iHLsjJ/P3A8HzdNU5imCcMwYBjGqGVDFB3P7Q37uOvujwMAnvOCr0b/2iO4+2Of
      xI1PuQVP+5LzuOsjHwPA8OzbnoeGZ48VRQVxeFzxC8DgBviSBtzs7u5if3+/8nV18qwv9T1V
      n1N/F91hPz9dlBQAQRB5SLeP6lOWwr7X62EwGGSVqNKHL1NI1fx9mRcvhMh883JNxhh2d3cn
      rh0EAdrtdm5m0DR830cYhuj1eugHg7F2OGmawjGspSiAWq2GTqcz+8AKmOWCk78ndShOPxgi
      SScruykITBBELnqVqSrYXddFEASIoijbuatFSXpeepIkmSXBOR9zl0gFomJZFnZ3d+duRyFT
      Sm3bhtXt4rDTAnA0HIUtpx5g1cNmdCUryYsHSAwuEMSkAAiCqADGGHZ2dpAkCfr9PoIgyHb7
      0h8tf5Y5/nJHKhu02bYNz/PGhL/uRpK73SLX0jRBWK/XwTlHp9tZWs8fYPQ6VlX4Jclzt+kx
      GfV9MYTAMA4nqoNJARAEsTCcc/i+D9d1MRgMMreQmp+epikcx0EURfA8L2s5AWDMelDX1Fl0
      5+77/tj1loEQYq3tMiTyfc9TmIwxGIwj1txAFAMgCKIyZDZPv98fc1VIa0EKSxmolUoibydf
      Jf1+fyk+es/zEIZhbvqnXlC3ju6qai1HFMcYhMNxy2Dld0QQxKlFZvPIHX+r1YJt24iiKBP+
      UvBXWV08C9d1wRhDu92ubE0ZI9Erf4UQiJnA1QDoH5U8uALYtQCRxivtraQqHc4YBONIlNA4
      WQAEQSwNPTAshf+6GAwGlSmBer0+NjeBMYaEG3ikz3B5yCYGcjEAF+wUj3dT8GQ9w3aSo/RY
      CRWCEQSxNE5aPFY1juOgVqudeB1Z1zBWdSsMfLrNcClH+AOjCY2XhgyfbjMwsR7nC9cKw0gB
      EARxpnBdF57nnXgN1fUjhMBDfYZBPDuOMYgZHurnD3JZBQYXWTYQKQCCIM4cnufBcZyFzpXj
      JlVSxnFpUD6IfWnAkC4xNXUWpjBgMEEKgCCIswdjDLVabaE4p1rLINfqRvlunyJSAN1ouZlP
      0+CMwxCkAAiCOKMwxlCv1+d2xRiGMe77ZwzRAvHcKF3tpLI8SAEQBHFmYYyh2WyWDk4bhjHR
      9iFNUxgLyHGD5Xf4XCWkAAiCONMIIbCzs1NKCRiGMen/T1P4RlpqCLuEAfCN6sZtLgopAIIg
      zjxllYBpmrlVvyxNcJ1TXphf56RgOd05VVahHEgBEARBYKQEdnd3p8YEihREHMe40U3hiNlC
      2xEpbnTTqRXBsoX2smMEpAAIgiCO4JxjZ2cHpmlOPCeEmNrPJ40jPLOeomYUK4GakeKZ9RRp
      zohKtS8SMF5FvSyoFQRBEIRGmqbo9XpjxV55swx0GGMQhoGDgE30AjpnATtWijiabAOhNo4r
      O2WtCkgBEARBFBCGIVqtFpIkge/7CIKg1OD3vGZ3SZLkWhB611CdZXYRpW6gBEEQBZimib29
      PXS7XZimWTj4RQgxs55AVwh6LyHgeLi7nKK27N5JFAMgCIKYgqwaZozlxgZOurb8WuQCWiak
      AAiCIEpgGAaazWZh4djfv/lP8Z9/4b/ip3/yJ/BYO8K3vPiFeODiAa7e98/40799DwDgt1/7
      Krz6tb8LoLgKeJVN4kgBEARBlIQxBsuy0Gg0Jp77yD/fg+/5N/8ev/G638QNdQPPfeEL8Hu/
      83tI4wjDIAAQ49FWimD/CyhKAJWT0lYFKQCCIIg5MU1zoqX0T7zy53DXO/4XfuAHX46Lh324
      O4/HM86l+MhnHgYAPPDR92AgavBYH//48Qez86TfXx2WI+MDyx4jSQqAIAhiAXzfx97eHnzf
      B+ccDz74CH7gx34K33r7s3DvZx8BAPy7H/pR/OUf/wEA4M6/fRfu+LqvxIu+4Rvxtr+5E8Ck
      G0gKfCHEWHbQsqAsIIIgiAURQsDzPHDO0Tu4iNf+2p3Yu/6JeNnzngor+FoY7g5+5BWvgHXd
      TdjfYfiGl7wYABCztwOYLPaSQl9aBPL7ZUF1AARBECdkMBiMzQgog8z2UVEFv54VtAzIAiAI
      gjghhlEsSsMwHGshrQpz3QJQBb9+7DIgBUAQBHFCDMMoVAK2bSNJEnS7XURHbSDUgO80lq0M
      KAhMEASxRBgbDYBvNBrZBDK1AGyd90UKgCAIYkWYpol6vV660Zt8vurdvww2kwIgCIJYIUII
      1Gq1qXEDiewJpFoNJ0VtO00KgCAIYsWYpolGowHLsmYeK1tDVGkFZHGIylYkCIIgSsMYg+M4
      pYLBZYPGs+Ccj1UYkwIgCIJYE6Zpotlswvd9AJO7fCmsq3D/ZG6fo1kFjDFKAyUIglgnjDHY
      tg3TNBFFEYIgQBAEAJAFi6soBsvLPCILgCAIYgPgnMOyLNRqNTiOAwBjVcEndQGpLSYoBkAQ
      BLGhuK47Nhegip5A8nx1LVIABEEQGwZjLCsaA1CqZmAW+vmUBkoQBLGhcM6zwTNVzAVQFUA2
      c/jEqxIEQRBLgXNe6Rxi1ZIgBUAQBLHh+L4P13UrWUvNKCIXEEEQxIbDOYfv+6VaR5SFgsAE
      QRBbAmMMvu9X3j2UFABBEMQWYFkW6vV6pWuSAiA2kiRJ5h6xRxCnHdM0K+kJJCEFQGwUYRii
      1+uh0+kgDMN13w5BbBScc9Tr9VJdREutV8kqBFERQgjEcYwoihDH8bpvZ+0Mh0P0er1slKDM
      4NDnygZBUEmuOLH5WJaFRqNRSXooNYMjNgpp3qZpCtu213w368c0TXS7XQwGg7HH1eHhUjHI
      aVPrHDNIrAbGGGq1Gg4PD0+k+MkCIDaKKIrged7UIdtnCVkNqvt9pdBXu0RGUYR+v0+W0xnB
      MAzYtp21dl4ElhY0mBgOh7QDI1ZOHMdjTbCIEWEYotPpTLh+8pqEOY4Dz/PGLASyCk4nw+EQ
      w+EwG/QSRRE456XjZ6QACGJL6Pf76Pf72c9yUIiqBKSgF0LAdV2YpknC/wwg42aGYWRxtMPD
      w5nWICkAgtgS0jRFp9NBEATZrj5Jksw9pAp6qRxc14XneWNTpUghnA3SNEWv10Ov1ys8hmIA
      BLElyMCfOke2SJjL5+VkqSAIcO3aNfT7/UqHixObi6we3t3dLXSrkgVAEFtGr9fDcDjMjQeo
      ZP1ejvzD6vOu61bWYIzYfJIkQavVmogNkAIgiC0kjmP0+/1sVGBeLYAU/EWYpgnP8yjofkZI
      0xTtdnuswp4UAEGcEoIgAGMsGyruum7m/9UtBFlMJoQYSyXknMMwDIoTnFJ0JUCJ1gRxSpDt
      AWTmj2VZiOMYYRhOZIOo2UN6kZnMIDIMo9K+M8T6kaMmkyRBGIZkARDEWaDb7Y6Z/rNqA9I0
      hWEYsCwLaZrC87xV3CaxIpIkwf7+PlkABHEWsG0b/X5/rh19FEWIogjA8WjCk1SdEpuDrDAn
      BUAQZwC1KrhMZbBeXCZjCZxzNJtNUgKnANM0SQEQxFlAbR43r19f9RJTx9HTBUV4COIMwDmH
      4zi5vYNmIZUHY4xaS5wySAEQxBlB5vvr8wSKSJIEcRyPHRvHMVkBpwhSAARxRrBtG5ZllXYB
      cc4nisSSJEG73aZ2EqcEUgAEcUYIggBhGJalN86TAAAAuUlEQVRKAQXGXT8qcRxPbTBGbA+k
      AAjiDJAkSdZFFMDEDl7PEpq1w+/3+xMFZMT2QQqAIM4Ael8gfY6AOlksb9efh15cRmwfpAAw
      uRsiiNNGHMdZOwh1uLw+I6CsBSCPl/OK6W9oOymsA5AVgARBbD+DwQBRFGW7e10BSPQW07OQ
      Q2rCMMx6ERHbw9ReQARBEMTppVABEARBEKcbigEQBEGcUUgBEARBnFFIARAEQZxRSAEQBEGc
      Uf4/xDZ1MNJoessAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Bon Voyage' width='384'>
      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
      W/J1VpfeOjc7UxvWr1Mg4igrK0vJ0SH5G6epTdsz1LdXdwWrq1RdE1DAdZSdna2khHhlZ2ep
      umK/4hMaK9rv0/7SXaqsOXy4qVHjZLU9o4369e1dd4dYXr5fFSU7FZWSroGZfXRgf7l8/jhl
      ZQ9SWlKU4lNaqE3bM3/Qd/4SzwBgwLk5F9Y9A1hw6DLH48hxHMlxFApFFHFdHaw8/CayQDig
      8KF3uzoeT+0/R4p2fGp7ZjtdndpUfo+jL84OlO8rUSjil98XrZatz9AV112jpNRUdc/oown/
      +4zG3H2HqoO15xgcx9Gi6e8pvWuW2iTFau+Xvjg9K7OPvB5HkitX0vadO9Usvb3yNhYpFKhW
      TSAsJaWq3zm1saoJBg6ft3BO4BvYT6KzO3etewbwhdpdXDuvSDgs13UVqDn8bu1QKFS3vuN8
      8TupfWTaOKmJenarvZ1+n08VBw+qJjYkefxSJCjXdVVeUaV2Po9CoeCRh8K+siscx9Hy3OXq
      mZklBb/dmwV9/miVl+3W3iS/QhHJ73XkOJLHqc1E8NCY9bzbvxPvQw899FB9TwI4GSorK4/y
      URCOvP4oNU1OliR5HEdpqc0UFZegJolx8vlj1T49Te9++LESm7ZQl44d5HEcxcX4NPn9GerY
      ubMSEpPUJCFWXn+0+vfsrKkzZqiiKqhOHdrLI2nZkiVan7dZI6+9Wt06d9T0T6Zqd2mlWjdL
      1JRPPlWzNmeqZ9eO2ltapBVrtqpTx3ZKSknVzOlTVVkVVpfu3ZWUEKdmzdPk9ceoaXKS1i1d
      pAW5uWqU2kbDBg/S3l0bNXf+El08YoQax8cpNS1VXo+jGJ80+cPZ6tK9q/zeU39P9E0fBeH1
      Rys+LqZuPycmJCgqppFion3yRcWoSaNorVqzTokpqWqe2lSSI58nrM/X5KtFerpiY+IUHe2T
      zx+j1s1TlJe/URHHr7TUFCU0TtaOTXnaUVymXhkZ2rZxrXbuLlKLtu2VltJYoaoKbdy6W61a
      pikqJk6x0X4lJibKkUeJiYmSHDVPbaK1a9YqKi5RzZs3l9/nVWJCQt38ExMbS5IaxSfK7/Uo
      ObW5otygSsr2qibkqk16SyU0TpTjSI0Sk+QeLNemHcVq1aLZSd/PMTEx38tHQTjuV1/2APxA
      FRYWNpiPglg4d756DchUjM9b31M5QsuWLU+Lj4JYv36dOnXqfErHCAertXhxrkJuRF2691LT
      pPhTOt6XNW7cWF7vqf/dEwA0GA0pAKer0yUADd33FYD6P3MEAKgXBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAY5avvCQAnS3x8vKKjo+t7Gg2a3++X1+uV3++v76k0aI7jfD/j
      uK7rfi8jAQBOKxwCAgCjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCK
      AACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYNT/A+ypkr41e44cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='MapWithRadiusFilter' width='384'>
      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
      wTpBtLD/D5tDhWQ8+klwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='OptimalFlight' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='SelectedAirport' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='TotalFlightsByCarrier' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='TotalFlightsByHour' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
