<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='BonVoyage' path='/workbooks' revision='2.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Selected Airport' datatype='string' name='[Airport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tampa International Airport&quot;'>
        <calculation class='tableau' formula='&quot;Tampa International Airport&quot;' />
        <members>
          <member value='&quot;Aberdeen Regional Airport&quot;' />
          <member value='&quot;Abilene Regional Airport&quot;' />
          <member value='&quot;Abraham Lincoln Capital Airport&quot;' />
          <member value='&quot;Adak Airport&quot;' />
          <member value='&quot;Akron Canton Regional Airport&quot;' />
          <member value='&quot;Albany International Airport&quot;' />
          <member value='&quot;Albert J Ellis Airport&quot;' />
          <member value='&quot;Albuquerque International Sunport Airport&quot;' />
          <member value='&quot;Alexandria International Airport&quot;' />
          <member value='&quot;Alpena County Regional Airport&quot;' />
          <member value='&quot;Antonio B. Won Pat International Airport&quot;' />
          <member value='&quot;Appleton International Airport&quot;' />
          <member value='&quot;Arcata Airport&quot;' />
          <member value='&quot;Arnold Palmer Regional Airport&quot;' />
          <member value='&quot;Asheville Regional Airport&quot;' />
          <member value='&quot;Aspen-Pitkin Co/Sardy Field&quot;' />
          <member value='&quot;Atlantic City International Airport&quot;' />
          <member value='&quot;Augusta Regional At Bush Field&quot;' />
          <member value='&quot;Austin Bergstrom International Airport&quot;' />
          <member value='&quot;Austin Straubel International Airport&quot;' />
          <member value='&quot;Baltimore/Washington International Thurgood Marshall Airport&quot;' />
          <member value='&quot;Bangor International Airport&quot;' />
          <member value='&quot;Barkley Regional Airport&quot;' />
          <member value='&quot;Barnstable Municipal Boardman Polando Field&quot;' />
          <member value='&quot;Baton Rouge Metropolitan, Ryan Field&quot;' />
          <member value='&quot;Bellingham International Airport&quot;' />
          <member value='&quot;Bemidji Regional Airport&quot;' />
          <member value='&quot;Bert Mooney Airport&quot;' />
          <member value='&quot;Bethel Airport&quot;' />
          <member value='&quot;Bill &amp; Hillary Clinton National Airport/Adams Field&quot;' />
          <member value='&quot;Billings Logan International Airport&quot;' />
          <member value='&quot;Birmingham-Shuttlesworth International Airport&quot;' />
          <member value='&quot;Bishop International Airport&quot;' />
          <member value='&quot;Bismarck Municipal Airport&quot;' />
          <member value='&quot;Blue Grass Airport&quot;' />
          <member value='&quot;Bob Hope Airport&quot;' />
          <member value='&quot;Boise Air Terminal/Gowen field&quot;' />
          <member value='&quot;Bradley International Airport&quot;' />
          <member value='&quot;Brainerd Lakes Regional Airport&quot;' />
          <member value='&quot;Brownsville South Padre Island International Airport&quot;' />
          <member value='&quot;Brunswick Golden Isles Airport&quot;' />
          <member value='&quot;Buffalo Niagara International Airport&quot;' />
          <member value='&quot;Burlington International Airport&quot;' />
          <member value='&quot;Cape Girardeau Regional Airport&quot;' />
          <member value='&quot;Capital City Airport&quot;' />
          <member value='&quot;Casper-Natrona County International Airport&quot;' />
          <member value='&quot;Cedar City Regional Airport&quot;' />
          <member value='&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;' />
          <member value='&quot;Central Nebraska Regional Airport&quot;' />
          <member value='&quot;Central Wisconsin Airport&quot;' />
          <member value='&quot;Charles M. Schulz Sonoma County Airport&quot;' />
          <member value='&quot;Charleston Air Force Base-International Airport&quot;' />
          <member value='&quot;Charlotte County Airport&quot;' />
          <member value='&quot;Charlotte Douglas International Airport&quot;' />
          <member value='&quot;Charlottesville Albemarle Airport&quot;' />
          <member value='&quot;Cherry Capital Airport&quot;' />
          <member value='&quot;Chicago Midway International Airport&quot;' />
          <member value='&quot;Chicago O&apos;Hare International Airport&quot;' />
          <member value='&quot;Chippewa County International Airport&quot;' />
          <member value='&quot;Chippewa Valley Regional Airport&quot;' />
          <member value='&quot;Cincinnati Northern Kentucky International Airport&quot;' />
          <member value='&quot;City of Colorado Springs Municipal Airport&quot;' />
          <member value='&quot;Cleveland Hopkins International Airport&quot;' />
          <member value='&quot;Coastal Carolina Regional Airport&quot;' />
          <member value='&quot;Columbia Metropolitan Airport&quot;' />
          <member value='&quot;Columbia Regional Airport&quot;' />
          <member value='&quot;Columbus Metropolitan Airport&quot;' />
          <member value='&quot;Corpus Christi International Airport&quot;' />
          <member value='&quot;Cyril E. King Airport&quot;' />
          <member value='&quot;Dallas Fort Worth International Airport&quot;' />
          <member value='&quot;Dallas Love Field&quot;' />
          <member value='&quot;Dane County Regional Truax Field&quot;' />
          <member value='&quot;Daytona Beach International Airport&quot;' />
          <member value='&quot;Deadhorse Airport&quot;' />
          <member value='&quot;Delta County Airport&quot;' />
          <member value='&quot;Denver International Airport&quot;' />
          <member value='&quot;Des Moines International Airport&quot;' />
          <member value='&quot;Destin-Ft Walton Beach Airport&quot;' />
          <member value='&quot;Detroit Metropolitan Wayne County Airport&quot;' />
          <member value='&quot;Devils Lake Regional Airport&quot;' />
          <member value='&quot;Dillingham Airport&quot;' />
          <member value='&quot;Dothan Regional Airport&quot;' />
          <member value='&quot;Duluth International Airport&quot;' />
          <member value='&quot;Durango La Plata County Airport&quot;' />
          <member value='&quot;Eagle County Regional Airport&quot;' />
          <member value='&quot;East Texas Regional Airport&quot;' />
          <member value='&quot;Easterwood Field&quot;' />
          <member value='&quot;El Paso International Airport&quot;' />
          <member value='&quot;Elko Regional Airport&quot;' />
          <member value='&quot;Elmira Corning Regional Airport&quot;' />
          <member value='&quot;Eppley Airfield&quot;' />
          <member value='&quot;Erie International Tom Ridge Field&quot;' />
          <member value='&quot;Evansville Regional Airport&quot;' />
          <member value='&quot;Fairbanks International Airport&quot;' />
          <member value='&quot;Falls International Airport&quot;' />
          <member value='&quot;Fayetteville Regional Grannis Field&quot;' />
          <member value='&quot;Flagstaff Pulliam Airport&quot;' />
          <member value='&quot;Ford Airport&quot;' />
          <member value='&quot;Fort Collins Loveland Municipal Airport&quot;' />
          <member value='&quot;Fort Lauderdale Hollywood International Airport&quot;' />
          <member value='&quot;Fort Smith Regional Airport&quot;' />
          <member value='&quot;Fort Wayne International Airport&quot;' />
          <member value='&quot;Fresno Yosemite International Airport&quot;' />
          <member value='&quot;Friedman Memorial Airport&quot;' />
          <member value='&quot;Gainesville Regional Airport&quot;' />
          <member value='&quot;Gallatin Field&quot;' />
          <member value='&quot;Garden City Regional Airport&quot;' />
          <member value='&quot;General Edward Lawrence Logan International Airport&quot;' />
          <member value='&quot;General Mitchell International Airport&quot;' />
          <member value='&quot;General Wayne A. Downing Peoria International Airport&quot;' />
          <member value='&quot;George Bush Intercontinental Houston Airport&quot;' />
          <member value='&quot;Gerald R. Ford International Airport&quot;' />
          <member value='&quot;Gillette Campbell County Airport&quot;' />
          <member value='&quot;Glacier Park International Airport&quot;' />
          <member value='&quot;Golden Triangle Regional Airport&quot;' />
          <member value='&quot;Grand Forks International Airport&quot;' />
          <member value='&quot;Grand Junction Regional Airport&quot;' />
          <member value='&quot;Great Falls International Airport&quot;' />
          <member value='&quot;Greater Binghamton/Edwin A Link field&quot;' />
          <member value='&quot;Greater Rochester International Airport&quot;' />
          <member value='&quot;Greenville Spartanburg International Airport&quot;' />
          <member value='&quot;Gulfport Biloxi International Airport&quot;' />
          <member value='&quot;Gunnison Crested Butte Regional Airport&quot;' />
          <member value='&quot;Gustavus Airport&quot;' />
          <member value='&quot;Harrisburg International Airport&quot;' />
          <member value='&quot;Hartsfield Jackson Atlanta International Airport&quot;' />
          <member value='&quot;Hattiesburg Laurel Regional Airport&quot;' />
          <member value='&quot;Hays Regional Airport&quot;' />
          <member value='&quot;Hector International Airport&quot;' />
          <member value='&quot;Helena Regional Airport&quot;' />
          <member value='&quot;Henry E Rohlsen Airport&quot;' />
          <member value='&quot;Hilo International Airport&quot;' />
          <member value='&quot;Honolulu International Airport&quot;' />
          <member value='&quot;Houghton County Memorial Airport&quot;' />
          <member value='&quot;Huntsville International Carl T Jones Field&quot;' />
          <member value='&quot;Idaho Falls Regional Airport&quot;' />
          <member value='&quot;Indianapolis International Airport&quot;' />
          <member value='&quot;Ithaca Tompkins Regional Airport&quot;' />
          <member value='&quot;Jackson Hole Airport&quot;' />
          <member value='&quot;Jackson-Medgar Wiley Evers International Airport&quot;' />
          <member value='&quot;Jacksonville International Airport&quot;' />
          <member value='&quot;James M Cox Dayton International Airport&quot;' />
          <member value='&quot;Jamestown Regional Airport&quot;' />
          <member value='&quot;Joe Foss Field Airport&quot;' />
          <member value='&quot;John F Kennedy International Airport&quot;' />
          <member value='&quot;John Wayne Airport-Orange County Airport&quot;' />
          <member value='&quot;Joplin Regional Airport&quot;' />
          <member value='&quot;Joslin Field Magic Valley Regional Airport&quot;' />
          <member value='&quot;Juneau International Airport&quot;' />
          <member value='&quot;Kahului Airport&quot;' />
          <member value='&quot;Kalamazoo Battle Creek International Airport&quot;' />
          <member value='&quot;Kansas City International Airport&quot;' />
          <member value='&quot;Ketchikan International Airport&quot;' />
          <member value='&quot;Key Field&quot;' />
          <member value='&quot;Key West International Airport&quot;' />
          <member value='&quot;King Salmon Airport&quot;' />
          <member value='&quot;Kodiak Airport&quot;' />
          <member value='&quot;Kona International At Keahole Airport&quot;' />
          <member value='&quot;La Crosse Municipal Airport&quot;' />
          <member value='&quot;La Guardia Airport&quot;' />
          <member value='&quot;Lafayette Regional Airport&quot;' />
          <member value='&quot;Lake Charles Regional Airport&quot;' />
          <member value='&quot;Lambert St Louis International Airport&quot;' />
          <member value='&quot;Laramie Regional Airport&quot;' />
          <member value='&quot;Laredo International Airport&quot;' />
          <member value='&quot;Lawton Fort Sill Regional Airport&quot;' />
          <member value='&quot;Lea County Regional Airport&quot;' />
          <member value='&quot;Lehigh Valley International Airport&quot;' />
          <member value='&quot;Lewiston Nez Perce County Airport&quot;' />
          <member value='&quot;Lihue Airport&quot;' />
          <member value='&quot;Lincoln Airport&quot;' />
          <member value='&quot;Long Beach /Daugherty Field/ Airport&quot;' />
          <member value='&quot;Long Island Mac Arthur Airport&quot;' />
          <member value='&quot;Los Angeles International Airport&quot;' />
          <member value='&quot;Louis Armstrong New Orleans International Airport&quot;' />
          <member value='&quot;Louisville International Standiford Field&quot;' />
          <member value='&quot;Lovell Field&quot;' />
          <member value='&quot;Lubbock Preston Smith International Airport&quot;' />
          <member value='&quot;Luis Munoz Marin International Airport&quot;' />
          <member value='&quot;Mahlon Sweet Field&quot;' />
          <member value='&quot;Mammoth Yosemite Airport&quot;' />
          <member value='&quot;Manchester Airport&quot;' />
          <member value='&quot;Manhattan Regional Airport&quot;' />
          <member value='&quot;Martha&apos;s Vineyard Airport&quot;' />
          <member value='&quot;MBS International Airport&quot;' />
          <member value='&quot;Mc Allen Miller International Airport&quot;' />
          <member value='&quot;McCarran International Airport&quot;' />
          <member value='&quot;McGhee Tyson Airport&quot;' />
          <member value='&quot;Meadows Field&quot;' />
          <member value='&quot;Melbourne International Airport&quot;' />
          <member value='&quot;Memphis International Airport&quot;' />
          <member value='&quot;Mercedita Airport&quot;' />
          <member value='&quot;Merle K (Mudhole) Smith Airport&quot;' />
          <member value='&quot;Metropolitan Oakland International Airport&quot;' />
          <member value='&quot;Miami International Airport&quot;' />
          <member value='&quot;Midland International Airport&quot;' />
          <member value='&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;' />
          <member value='&quot;Minot International Airport&quot;' />
          <member value='&quot;Missoula International Airport&quot;' />
          <member value='&quot;Mobile Regional Airport&quot;' />
          <member value='&quot;Monroe Regional Airport&quot;' />
          <member value='&quot;Monterey Peninsula Airport&quot;' />
          <member value='&quot;Montgomery Regional (Dannelly Field) Airport&quot;' />
          <member value='&quot;Montrose Regional Airport&quot;' />
          <member value='&quot;Muskegon County Airport&quot;' />
          <member value='&quot;Myrtle Beach International Airport&quot;' />
          <member value='&quot;Nantucket Memorial Airport&quot;' />
          <member value='&quot;Nashville International Airport&quot;' />
          <member value='&quot;Newark Liberty International Airport&quot;' />
          <member value='&quot;Newport News Williamsburg International Airport&quot;' />
          <member value='&quot;Niagara Falls International Airport&quot;' />
          <member value='&quot;Nome Airport&quot;' />
          <member value='&quot;Norfolk International Airport&quot;' />
          <member value='&quot;Norman Y. Mineta San Jose International Airport&quot;' />
          <member value='&quot;North Central West Virginia Airport&quot;' />
          <member value='&quot;Northeast Florida Regional Airport&quot;' />
          <member value='&quot;Northwest Arkansas Regional Airport&quot;' />
          <member value='&quot;Northwest Florida Beaches International Airport&quot;' />
          <member value='&quot;Ontario International Airport&quot;' />
          <member value='&quot;Orlando International Airport&quot;' />
          <member value='&quot;Pago Pago International Airport&quot;' />
          <member value='&quot;Palm Beach International Airport&quot;' />
          <member value='&quot;Palm Springs International Airport&quot;' />
          <member value='&quot;Pellston Regional Airport of Emmet County Airport&quot;' />
          <member value='&quot;Pensacola Regional Airport&quot;' />
          <member value='&quot;Petersburg James A Johnson Airport&quot;' />
          <member value='&quot;Philadelphia International Airport&quot;' />
          <member value='&quot;Phoenix Sky Harbor International Airport&quot;' />
          <member value='&quot;Piedmont Triad International Airport&quot;' />
          <member value='&quot;Pittsburgh International Airport&quot;' />
          <member value='&quot;Plattsburgh International Airport&quot;' />
          <member value='&quot;Pocatello Regional Airport&quot;' />
          <member value='&quot;Port Columbus International Airport&quot;' />
          <member value='&quot;Portland International Airport&quot;' />
          <member value='&quot;Portland International Jetport Airport&quot;' />
          <member value='&quot;Pueblo Memorial Airport&quot;' />
          <member value='&quot;Quad City International Airport&quot;' />
          <member value='&quot;Quincy Regional Baldwin Field&quot;' />
          <member value='&quot;Rafael Hernandez Airport&quot;' />
          <member value='&quot;Raleigh Durham International Airport&quot;' />
          <member value='&quot;Ralph Wien Memorial Airport&quot;' />
          <member value='&quot;Range Regional Airport&quot;' />
          <member value='&quot;Rapid City Regional Airport&quot;' />
          <member value='&quot;Redding Municipal Airport&quot;' />
          <member value='&quot;Reno Tahoe International Airport&quot;' />
          <member value='&quot;Rhinelander Oneida County Airport&quot;' />
          <member value='&quot;Richmond International Airport&quot;' />
          <member value='&quot;Rick Husband Amarillo International Airport&quot;' />
          <member value='&quot;Roanoke–Blacksburg Regional Airport&quot;' />
          <member value='&quot;Robert Gray  Army Air Field Airport&quot;' />
          <member value='&quot;Roberts Field&quot;' />
          <member value='&quot;Rochester International Airport&quot;' />
          <member value='&quot;Rock Springs Sweetwater County Airport&quot;' />
          <member value='&quot;Rogue Valley International Medford Airport&quot;' />
          <member value='&quot;Ronald Reagan Washington National Airport&quot;' />
          <member value='&quot;Roswell International Air Center Airport&quot;' />
          <member value='&quot;Sacramento International Airport&quot;' />
          <member value='&quot;Salt Lake City International Airport&quot;' />
          <member value='&quot;San Angelo Regional Mathis Field&quot;' />
          <member value='&quot;San Antonio International Airport&quot;' />
          <member value='&quot;San Diego International Airport&quot;' />
          <member value='&quot;San Francisco International Airport&quot;' />
          <member value='&quot;San Luis County Regional Airport&quot;' />
          <member value='&quot;Santa Barbara Municipal Airport&quot;' />
          <member value='&quot;Santa Fe Municipal Airport&quot;' />
          <member value='&quot;Sarasota Bradenton International Airport&quot;' />
          <member value='&quot;Savannah Hilton Head International Airport&quot;' />
          <member value='&quot;Sawyer International Airport&quot;' />
          <member value='&quot;Seattle Tacoma International Airport&quot;' />
          <member value='&quot;Sheppard Air Force Base-Wichita Falls Municipal Airport&quot;' />
          <member value='&quot;Shreveport Regional Airport&quot;' />
          <member value='&quot;Sioux Gateway Col. Bud Day Field&quot;' />
          <member value='&quot;Sitka Rocky Gutierrez Airport&quot;' />
          <member value='&quot;Sloulin Field International Airport&quot;' />
          <member value='&quot;South Bend Regional Airport&quot;' />
          <member value='&quot;Southeast Texas Regional Airport&quot;' />
          <member value='&quot;Southwest Florida International Airport&quot;' />
          <member value='&quot;Southwest Georgia Regional Airport&quot;' />
          <member value='&quot;Southwest Oregon Regional Airport&quot;' />
          <member value='&quot;Spokane International Airport&quot;' />
          <member value='&quot;Springfield Branson National Airport&quot;' />
          <member value='&quot;St George Municipal Airport&quot;' />
          <member value='&quot;Stewart International Airport&quot;' />
          <member value='&quot;Syracuse Hancock International Airport&quot;' />
          <member value='&quot;Tallahassee Regional Airport&quot;' />
          <member value='&quot;Tampa International Airport&quot;' />
          <member value='&quot;Ted Stevens Anchorage International Airport&quot;' />
          <member value='&quot;Texarkana Regional Webb Field&quot;' />
          <member value='&quot;The Eastern Iowa Airport&quot;' />
          <member value='&quot;Theodore Francis Green State Airport&quot;' />
          <member value='&quot;Toledo Express Airport&quot;' />
          <member value='&quot;Trenton Mercer Airport&quot;' />
          <member value='&quot;Tri Cities Airport&quot;' />
          <member value='&quot;Tri Cities Regional Tn Va Airport&quot;' />
          <member value='&quot;Tucson International Airport&quot;' />
          <member value='&quot;Tulsa International Airport&quot;' />
          <member value='&quot;Tyler Pounds Regional Airport&quot;' />
          <member value='&quot;University Park Airport&quot;' />
          <member value='&quot;Valdosta Regional Airport&quot;' />
          <member value='&quot;Valley International Airport&quot;' />
          <member value='&quot;Waco Regional Airport&quot;' />
          <member value='&quot;Washington Dulles International Airport&quot;' />
          <member value='&quot;Waterloo Regional Airport&quot;' />
          <member value='&quot;Westchester County Airport&quot;' />
          <member value='&quot;Wichita Mid Continent Airport&quot;' />
          <member value='&quot;Wiley Post Will Rogers Memorial Airport&quot;' />
          <member value='&quot;Wilkes Barre Scranton International Airport&quot;' />
          <member value='&quot;Will Rogers World Airport&quot;' />
          <member value='&quot;William P Hobby Airport&quot;' />
          <member value='&quot;Wilmington International Airport&quot;' />
          <member value='&quot;Worcester Regional Airport&quot;' />
          <member value='&quot;Wrangell Airport&quot;' />
          <member value='&quot;Yakutat Airport&quot;' />
          <member value='&quot;Yampa Valley Airport&quot;' />
          <member value='&quot;Yeager Airport&quot;' />
          <member value='&quot;Yellowstone Airport&quot;' />
          <member value='&quot;Yellowstone Regional Airport&quot;' />
          <member value='&quot;Yuma MCAS/Yuma International Airport&quot;' />
        </members>
      </column>
      <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
        <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        <members>
          <member value='&quot;ABE - Allentown/Bethlehem/Easton, PA (Lehigh Valley International Airport)&quot;' />
          <member value='&quot;ABI - Abilene, TX (Abilene Regional Airport)&quot;' />
          <member value='&quot;ABQ - Albuquerque, NM (Albuquerque International Sunport Airport)&quot;' />
          <member value='&quot;ABR - Aberdeen, SD (Aberdeen Regional Airport)&quot;' />
          <member value='&quot;ABY - Albany, GA (Southwest Georgia Regional Airport)&quot;' />
          <member value='&quot;ACK - Nantucket, MA (Nantucket Memorial Airport)&quot;' />
          <member value='&quot;ACT - Waco, TX (Waco Regional Airport)&quot;' />
          <member value='&quot;ACV - Arcata/Eureka, CA (Arcata Airport)&quot;' />
          <member value='&quot;ACY - Atlantic City, NJ (Atlantic City International Airport)&quot;' />
          <member value='&quot;ADK - Adak Island, AK (Adak Airport)&quot;' />
          <member value='&quot;ADQ - Kodiak, AK (Kodiak Airport)&quot;' />
          <member value='&quot;AEX - Alexandria, LA (Alexandria International Airport)&quot;' />
          <member value='&quot;AGS - Augusta, GA (Augusta Regional At Bush Field)&quot;' />
          <member value='&quot;AKN - King Salmon, AK (King Salmon Airport)&quot;' />
          <member value='&quot;ALB - Albany, NY (Albany International Airport)&quot;' />
          <member value='&quot;ALO - Waterloo, IA (Waterloo Regional Airport)&quot;' />
          <member value='&quot;AMA - Amarillo, TX (Rick Husband Amarillo International Airport)&quot;' />
          <member value='&quot;ANC - Anchorage, AK (Ted Stevens Anchorage International Airport)&quot;' />
          <member value='&quot;APN - Alpena, MI (Alpena County Regional Airport)&quot;' />
          <member value='&quot;ASE - Aspen, CO (Aspen-Pitkin Co/Sardy Field)&quot;' />
          <member value='&quot;ATL - Atlanta, GA (Hartsfield Jackson Atlanta International Airport)&quot;' />
          <member value='&quot;ATW - Appleton, WI (Appleton International Airport)&quot;' />
          <member value='&quot;AUS - Austin, TX (Austin Bergstrom International Airport)&quot;' />
          <member value='&quot;AVL - Asheville, NC (Asheville Regional Airport)&quot;' />
          <member value='&quot;AVP - Scranton/Wilkes-Barre, PA (Wilkes Barre Scranton International Airport)&quot;' />
          <member value='&quot;AZO - Kalamazoo, MI (Kalamazoo Battle Creek International Airport)&quot;' />
          <member value='&quot;BDL - Hartford, CT (Bradley International Airport)&quot;' />
          <member value='&quot;BET - Bethel, AK (Bethel Airport)&quot;' />
          <member value='&quot;BFL - Bakersfield, CA (Meadows Field)&quot;' />
          <member value='&quot;BGM - Binghamton, NY (Greater Binghamton/Edwin A Link field)&quot;' />
          <member value='&quot;BGR - Bangor, ME (Bangor International Airport)&quot;' />
          <member value='&quot;BHM - Birmingham, AL (Birmingham-Shuttlesworth International Airport)&quot;' />
          <member value='&quot;BIL - Billings, MT (Billings Logan International Airport)&quot;' />
          <member value='&quot;BIS - Bismarck/Mandan, ND (Bismarck Municipal Airport)&quot;' />
          <member value='&quot;BJI - Bemidji, MN (Bemidji Regional Airport)&quot;' />
          <member value='&quot;BLI - Bellingham, WA (Bellingham International Airport)&quot;' />
          <member value='&quot;BMI - Bloomington/Normal, IL (Central Illinois Regional Airport at Bloomington-Normal)&quot;' />
          <member value='&quot;BNA - Nashville, TN (Nashville International Airport)&quot;' />
          <member value='&quot;BOI - Boise, ID (Boise Air Terminal/Gowen field)&quot;' />
          <member value='&quot;BOS - Boston, MA (General Edward Lawrence Logan International Airport)&quot;' />
          <member value='&quot;BPT - Beaumont/Port Arthur, TX (Southeast Texas Regional Airport)&quot;' />
          <member value='&quot;BQK - Brunswick, GA (Brunswick Golden Isles Airport)&quot;' />
          <member value='&quot;BQN - Aguadilla, PR (Rafael Hernandez Airport)&quot;' />
          <member value='&quot;BRD - Brainerd, MN (Brainerd Lakes Regional Airport)&quot;' />
          <member value='&quot;BRO - Brownsville, TX (Brownsville South Padre Island International Airport)&quot;' />
          <member value='&quot;BRW - Barrow, AK (Wiley Post Will Rogers Memorial Airport)&quot;' />
          <member value='&quot;BTM - Butte, MT (Bert Mooney Airport)&quot;' />
          <member value='&quot;BTR - Baton Rouge, LA (Baton Rouge Metropolitan, Ryan Field)&quot;' />
          <member value='&quot;BTV - Burlington, VT (Burlington International Airport)&quot;' />
          <member value='&quot;BUF - Buffalo, NY (Buffalo Niagara International Airport)&quot;' />
          <member value='&quot;BUR - Burbank, CA (Bob Hope Airport)&quot;' />
          <member value='&quot;BWI - Baltimore, MD (Baltimore/Washington International Thurgood Marshall Airport)&quot;' />
          <member value='&quot;BZN - Bozeman, MT (Gallatin Field)&quot;' />
          <member value='&quot;CAE - Columbia, SC (Columbia Metropolitan Airport)&quot;' />
          <member value='&quot;CAK - Akron, OH (Akron Canton Regional Airport)&quot;' />
          <member value='&quot;CDC - Cedar City, UT (Cedar City Regional Airport)&quot;' />
          <member value='&quot;CDV - Cordova, AK (Merle K (Mudhole) Smith Airport)&quot;' />
          <member value='&quot;CGI - Cape Girardeau, MO (Cape Girardeau Regional Airport)&quot;' />
          <member value='&quot;CHA - Chattanooga, TN (Lovell Field)&quot;' />
          <member value='&quot;CHO - Charlottesville, VA (Charlottesville Albemarle Airport)&quot;' />
          <member value='&quot;CHS - Charleston, SC (Charleston Air Force Base-International Airport)&quot;' />
          <member value='&quot;CID - Cedar Rapids/Iowa City, IA (The Eastern Iowa Airport)&quot;' />
          <member value='&quot;CIU - Sault Ste. Marie, MI (Chippewa County International Airport)&quot;' />
          <member value='&quot;CKB - Clarksburg/Fairmont, WV (North Central West Virginia Airport)&quot;' />
          <member value='&quot;CLE - Cleveland, OH (Cleveland Hopkins International Airport)&quot;' />
          <member value='&quot;CLL - College Station/Bryan, TX (Easterwood Field)&quot;' />
          <member value='&quot;CLT - Charlotte, NC (Charlotte Douglas International Airport)&quot;' />
          <member value='&quot;CMH - Columbus, OH (Port Columbus International Airport)&quot;' />
          <member value='&quot;CMX - Hancock/Houghton, MI (Houghton County Memorial Airport)&quot;' />
          <member value='&quot;COD - Cody, WY (Yellowstone Regional Airport)&quot;' />
          <member value='&quot;COS - Colorado Springs, CO (City of Colorado Springs Municipal Airport)&quot;' />
          <member value='&quot;COU - Columbia, MO (Columbia Regional Airport)&quot;' />
          <member value='&quot;CPR - Casper, WY (Casper-Natrona County International Airport)&quot;' />
          <member value='&quot;CRP - Corpus Christi, TX (Corpus Christi International Airport)&quot;' />
          <member value='&quot;CRW - Charleston/Dunbar, WV (Yeager Airport)&quot;' />
          <member value='&quot;CSG - Columbus, GA (Columbus Metropolitan Airport)&quot;' />
          <member value='&quot;CVG - Cincinnati, OH (Cincinnati Northern Kentucky International Airport)&quot;' />
          <member value='&quot;CWA - Mosinee, WI (Central Wisconsin Airport)&quot;' />
          <member value='&quot;DAB - Daytona Beach, FL (Daytona Beach International Airport)&quot;' />
          <member value='&quot;DAL - Dallas, TX (Dallas Love Field)&quot;' />
          <member value='&quot;DAY - Dayton, OH (James M Cox Dayton International Airport)&quot;' />
          <member value='&quot;DCA - Washington, DC (Ronald Reagan Washington National Airport)&quot;' />
          <member value='&quot;DEN - Denver, CO (Denver International Airport)&quot;' />
          <member value='&quot;DFW - Dallas/Fort Worth, TX (Dallas Fort Worth International Airport)&quot;' />
          <member value='&quot;DHN - Dothan, AL (Dothan Regional Airport)&quot;' />
          <member value='&quot;DLG - Dillingham, AK (Dillingham Airport)&quot;' />
          <member value='&quot;DLH - Duluth, MN (Duluth International Airport)&quot;' />
          <member value='&quot;DRO - Durango, CO (Durango La Plata County Airport)&quot;' />
          <member value='&quot;DSM - Des Moines, IA (Des Moines International Airport)&quot;' />
          <member value='&quot;DTW - Detroit, MI (Detroit Metropolitan Wayne County Airport)&quot;' />
          <member value='&quot;DVL - Devils Lake, ND (Devils Lake Regional Airport)&quot;' />
          <member value='&quot;EAU - Eau Claire, WI (Chippewa Valley Regional Airport)&quot;' />
          <member value='&quot;ECP - Panama City, FL (Northwest Florida Beaches International Airport)&quot;' />
          <member value='&quot;EGE - Eagle, CO (Eagle County Regional Airport)&quot;' />
          <member value='&quot;EKO - Elko, NV (Elko Regional Airport)&quot;' />
          <member value='&quot;ELM - Elmira/Corning, NY (Elmira Corning Regional Airport)&quot;' />
          <member value='&quot;ELP - El Paso, TX (El Paso International Airport)&quot;' />
          <member value='&quot;ERI - Erie, PA (Erie International Tom Ridge Field)&quot;' />
          <member value='&quot;ESC - Escanaba, MI (Delta County Airport)&quot;' />
          <member value='&quot;EUG - Eugene, OR (Mahlon Sweet Field)&quot;' />
          <member value='&quot;EVV - Evansville, IN (Evansville Regional Airport)&quot;' />
          <member value='&quot;EWN - New Bern/Morehead/Beaufort, NC (Coastal Carolina Regional Airport)&quot;' />
          <member value='&quot;EWR - Newark, NJ (Newark Liberty International Airport)&quot;' />
          <member value='&quot;EYW - Key West, FL (Key West International Airport)&quot;' />
          <member value='&quot;FAI - Fairbanks, AK (Fairbanks International Airport)&quot;' />
          <member value='&quot;FAR - Fargo, ND (Hector International Airport)&quot;' />
          <member value='&quot;FAT - Fresno, CA (Fresno Yosemite International Airport)&quot;' />
          <member value='&quot;FAY - Fayetteville, NC (Fayetteville Regional Grannis Field)&quot;' />
          <member value='&quot;FCA - Kalispell, MT (Glacier Park International Airport)&quot;' />
          <member value='&quot;FLG - Flagstaff, AZ (Flagstaff Pulliam Airport)&quot;' />
          <member value='&quot;FLL - Fort Lauderdale, FL (Fort Lauderdale Hollywood International Airport)&quot;' />
          <member value='&quot;FNL - Fort Collins/Loveland, CO (Fort Collins Loveland Municipal Airport)&quot;' />
          <member value='&quot;FNT - Flint, MI (Bishop International Airport)&quot;' />
          <member value='&quot;FSD - Sioux Falls, SD (Joe Foss Field Airport)&quot;' />
          <member value='&quot;FSM - Fort Smith, AR (Fort Smith Regional Airport)&quot;' />
          <member value='&quot;FWA - Fort Wayne, IN (Fort Wayne International Airport)&quot;' />
          <member value='&quot;GCC - Gillette, WY (Gillette Campbell County Airport)&quot;' />
          <member value='&quot;GCK - Garden City, KS (Garden City Regional Airport)&quot;' />
          <member value='&quot;GEG - Spokane, WA (Spokane International Airport)&quot;' />
          <member value='&quot;GFK - Grand Forks, ND (Grand Forks International Airport)&quot;' />
          <member value='&quot;GGG - Longview, TX (East Texas Regional Airport)&quot;' />
          <member value='&quot;GJT - Grand Junction, CO (Grand Junction Regional Airport)&quot;' />
          <member value='&quot;GNV - Gainesville, FL (Gainesville Regional Airport)&quot;' />
          <member value='&quot;GPT - Gulfport/Biloxi, MS (Gulfport Biloxi International Airport)&quot;' />
          <member value='&quot;GRB - Green Bay, WI (Austin Straubel International Airport)&quot;' />
          <member value='&quot;GRI - Grand Island, NE (Central Nebraska Regional Airport)&quot;' />
          <member value='&quot;GRK - Killeen, TX (Robert Gray  Army Air Field Airport)&quot;' />
          <member value='&quot;GRR - Grand Rapids, MI (Gerald R. Ford International Airport)&quot;' />
          <member value='&quot;GSO - Greensboro/High Point, NC (Piedmont Triad International Airport)&quot;' />
          <member value='&quot;GSP - Greer, SC (Greenville Spartanburg International Airport)&quot;' />
          <member value='&quot;GST - Gustavus, AK (Gustavus Airport)&quot;' />
          <member value='&quot;GTF - Great Falls, MT (Great Falls International Airport)&quot;' />
          <member value='&quot;GTR - Columbus, MS (Golden Triangle Regional Airport)&quot;' />
          <member value='&quot;GUC - Gunnison, CO (Gunnison Crested Butte Regional Airport)&quot;' />
          <member value='&quot;GUM - Guam, TT (Antonio B. Won Pat International Airport)&quot;' />
          <member value='&quot;HDN - Hayden, CO (Yampa Valley Airport)&quot;' />
          <member value='&quot;HIB - Hibbing, MN (Range Regional Airport)&quot;' />
          <member value='&quot;HLN - Helena, MT (Helena Regional Airport)&quot;' />
          <member value='&quot;HNL - Honolulu, HI (Honolulu International Airport)&quot;' />
          <member value='&quot;HOB - Hobbs, NM (Lea County Regional Airport)&quot;' />
          <member value='&quot;HOU - Houston, TX (William P Hobby Airport)&quot;' />
          <member value='&quot;HPN - White Plains, NY (Westchester County Airport)&quot;' />
          <member value='&quot;HRL - Harlingen/San Benito, TX (Valley International Airport)&quot;' />
          <member value='&quot;HSV - Huntsville, AL (Huntsville International Carl T Jones Field)&quot;' />
          <member value='&quot;HYA - Hyannis, MA (Barnstable Municipal Boardman Polando Field)&quot;' />
          <member value='&quot;HYS - Hays, KS (Hays Regional Airport)&quot;' />
          <member value='&quot;IAD - Washington, DC (Washington Dulles International Airport)&quot;' />
          <member value='&quot;IAG - Niagara Falls, NY (Niagara Falls International Airport)&quot;' />
          <member value='&quot;IAH - Houston, TX (George Bush Intercontinental Houston Airport)&quot;' />
          <member value='&quot;ICT - Wichita, KS (Wichita Mid Continent Airport)&quot;' />
          <member value='&quot;IDA - Idaho Falls, ID (Idaho Falls Regional Airport)&quot;' />
          <member value='&quot;ILM - Wilmington, NC (Wilmington International Airport)&quot;' />
          <member value='&quot;IMT - Iron Mountain/Kingsfd, MI (Ford Airport)&quot;' />
          <member value='&quot;IND - Indianapolis, IN (Indianapolis International Airport)&quot;' />
          <member value='&quot;INL - International Falls, MN (Falls International Airport)&quot;' />
          <member value='&quot;ISN - Williston, ND (Sloulin Field International Airport)&quot;' />
          <member value='&quot;ISP - Islip, NY (Long Island Mac Arthur Airport)&quot;' />
          <member value='&quot;ITH - Ithaca/Cortland, NY (Ithaca Tompkins Regional Airport)&quot;' />
          <member value='&quot;ITO - Hilo, HI (Hilo International Airport)&quot;' />
          <member value='&quot;JAC - Jackson, WY (Jackson Hole Airport)&quot;' />
          <member value='&quot;JAN - Jackson/Vicksburg, MS (Jackson-Medgar Wiley Evers International Airport)&quot;' />
          <member value='&quot;JAX - Jacksonville, FL (Jacksonville International Airport)&quot;' />
          <member value='&quot;JFK - New York, NY (John F Kennedy International Airport)&quot;' />
          <member value='&quot;JLN - Joplin, MO (Joplin Regional Airport)&quot;' />
          <member value='&quot;JMS - Jamestown, ND (Jamestown Regional Airport)&quot;' />
          <member value='&quot;JNU - Juneau, AK (Juneau International Airport)&quot;' />
          <member value='&quot;KOA - Kona, HI (Kona International At Keahole Airport)&quot;' />
          <member value='&quot;KTN - Ketchikan, AK (Ketchikan International Airport)&quot;' />
          <member value='&quot;LAN - Lansing, MI (Capital City Airport)&quot;' />
          <member value='&quot;LAR - Laramie, WY (Laramie Regional Airport)&quot;' />
          <member value='&quot;LAS - Las Vegas, NV (McCarran International Airport)&quot;' />
          <member value='&quot;LAW - Lawton/Fort Sill, OK (Lawton Fort Sill Regional Airport)&quot;' />
          <member value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
          <member value='&quot;LBB - Lubbock, TX (Lubbock Preston Smith International Airport)&quot;' />
          <member value='&quot;LBE - Latrobe, PA (Arnold Palmer Regional Airport)&quot;' />
          <member value='&quot;LCH - Lake Charles, LA (Lake Charles Regional Airport)&quot;' />
          <member value='&quot;LEX - Lexington, KY (Blue Grass Airport)&quot;' />
          <member value='&quot;LFT - Lafayette, LA (Lafayette Regional Airport)&quot;' />
          <member value='&quot;LGA - New York, NY (La Guardia Airport)&quot;' />
          <member value='&quot;LGB - Long Beach, CA (Long Beach /Daugherty Field/ Airport)&quot;' />
          <member value='&quot;LIH - Lihue, HI (Lihue Airport)&quot;' />
          <member value='&quot;LIT - Little Rock, AR (Bill &amp; Hillary Clinton National Airport/Adams Field)&quot;' />
          <member value='&quot;LNK - Lincoln, NE (Lincoln Airport)&quot;' />
          <member value='&quot;LRD - Laredo, TX (Laredo International Airport)&quot;' />
          <member value='&quot;LSE - La Crosse, WI (La Crosse Municipal Airport)&quot;' />
          <member value='&quot;LWS - Lewiston, ID (Lewiston Nez Perce County Airport)&quot;' />
          <member value='&quot;MAF - Midland/Odessa, TX (Midland International Airport)&quot;' />
          <member value='&quot;MBS - Saginaw/Bay City/Midland, MI (MBS International Airport)&quot;' />
          <member value='&quot;MCI - Kansas City, MO (Kansas City International Airport)&quot;' />
          <member value='&quot;MCO - Orlando, FL (Orlando International Airport)&quot;' />
          <member value='&quot;MDT - Harrisburg, PA (Harrisburg International Airport)&quot;' />
          <member value='&quot;MDW - Chicago, IL (Chicago Midway International Airport)&quot;' />
          <member value='&quot;MEI - Meridian, MS (Key Field)&quot;' />
          <member value='&quot;MEM - Memphis, TN (Memphis International Airport)&quot;' />
          <member value='&quot;MFE - Mission/McAllen/Edinburg, TX (Mc Allen Miller International Airport)&quot;' />
          <member value='&quot;MFR - Medford, OR (Rogue Valley International Medford Airport)&quot;' />
          <member value='&quot;MGM - Montgomery, AL (Montgomery Regional (Dannelly Field) Airport)&quot;' />
          <member value='&quot;MHK - Manhattan/Ft. Riley, KS (Manhattan Regional Airport)&quot;' />
          <member value='&quot;MHT - Manchester, NH (Manchester Airport)&quot;' />
          <member value='&quot;MIA - Miami, FL (Miami International Airport)&quot;' />
          <member value='&quot;MKE - Milwaukee, WI (General Mitchell International Airport)&quot;' />
          <member value='&quot;MKG - Muskegon, MI (Muskegon County Airport)&quot;' />
          <member value='&quot;MLB - Melbourne, FL (Melbourne International Airport)&quot;' />
          <member value='&quot;MLI - Moline, IL (Quad City International Airport)&quot;' />
          <member value='&quot;MLU - Monroe, LA (Monroe Regional Airport)&quot;' />
          <member value='&quot;MMH - Mammoth Lakes, CA (Mammoth Yosemite Airport)&quot;' />
          <member value='&quot;MOB - Mobile, AL (Mobile Regional Airport)&quot;' />
          <member value='&quot;MOT - Minot, ND (Minot International Airport)&quot;' />
          <member value='&quot;MQT - Marquette, MI (Sawyer International Airport)&quot;' />
          <member value='&quot;MRY - Monterey, CA (Monterey Peninsula Airport)&quot;' />
          <member value='&quot;MSN - Madison, WI (Dane County Regional Truax Field)&quot;' />
          <member value='&quot;MSO - Missoula, MT (Missoula International Airport)&quot;' />
          <member value='&quot;MSP - Minneapolis, MN (Minneapolis-St Paul International/Wold-Chamberlain Airport)&quot;' />
          <member value='&quot;MSY - New Orleans, LA (Louis Armstrong New Orleans International Airport)&quot;' />
          <member value='&quot;MTJ - Montrose/Delta, CO (Montrose Regional Airport)&quot;' />
          <member value='&quot;MVY - Martha&apos;s Vineyard, MA (Martha&apos;s Vineyard Airport)&quot;' />
          <member value='&quot;MYR - Myrtle Beach, SC (Myrtle Beach International Airport)&quot;' />
          <member value='&quot;OAJ - Jacksonville/Camp Lejeune, NC (Albert J Ellis Airport)&quot;' />
          <member value='&quot;OAK - Oakland, CA (Metropolitan Oakland International Airport)&quot;' />
          <member value='&quot;OGG - Kahului, HI (Kahului Airport)&quot;' />
          <member value='&quot;OKC - Oklahoma City, OK (Will Rogers World Airport)&quot;' />
          <member value='&quot;OMA - Omaha, NE (Eppley Airfield)&quot;' />
          <member value='&quot;OME - Nome, AK (Nome Airport)&quot;' />
          <member value='&quot;ONT - Ontario, CA (Ontario International Airport)&quot;' />
          <member value='&quot;ORD - Chicago, IL (Chicago O&apos;Hare International Airport)&quot;' />
          <member value='&quot;ORF - Norfolk, VA (Norfolk International Airport)&quot;' />
          <member value='&quot;ORH - Worcester, MA (Worcester Regional Airport)&quot;' />
          <member value='&quot;OTH - North Bend/Coos Bay, OR (Southwest Oregon Regional Airport)&quot;' />
          <member value='&quot;OTZ - Kotzebue, AK (Ralph Wien Memorial Airport)&quot;' />
          <member value='&quot;PAH - Paducah, KY (Barkley Regional Airport)&quot;' />
          <member value='&quot;PBG - Plattsburgh, NY (Plattsburgh International Airport)&quot;' />
          <member value='&quot;PBI - West Palm Beach/Palm Beach, FL (Palm Beach International Airport)&quot;' />
          <member value='&quot;PDX - Portland, OR (Portland International Airport)&quot;' />
          <member value='&quot;PGD - Punta Gorda, FL (Charlotte County Airport)&quot;' />
          <member value='&quot;PHF - Newport News/Williamsburg, VA (Newport News Williamsburg International Airport)&quot;' />
          <member value='&quot;PHL - Philadelphia, PA (Philadelphia International Airport)&quot;' />
          <member value='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' />
          <member value='&quot;PIA - Peoria, IL (General Wayne A. Downing Peoria International Airport)&quot;' />
          <member value='&quot;PIB - Hattiesburg/Laurel, MS (Hattiesburg Laurel Regional Airport)&quot;' />
          <member value='&quot;PIH - Pocatello, ID (Pocatello Regional Airport)&quot;' />
          <member value='&quot;PIT - Pittsburgh, PA (Pittsburgh International Airport)&quot;' />
          <member value='&quot;PLN - Pellston, MI (Pellston Regional Airport of Emmet County Airport)&quot;' />
          <member value='&quot;PNS - Pensacola, FL (Pensacola Regional Airport)&quot;' />
          <member value='&quot;PPG - Pago Pago, TT (Pago Pago International Airport)&quot;' />
          <member value='&quot;PSC - Pasco/Kennewick/Richland, WA (Tri Cities Airport)&quot;' />
          <member value='&quot;PSE - Ponce, PR (Mercedita Airport)&quot;' />
          <member value='&quot;PSG - Petersburg, AK (Petersburg James A Johnson Airport)&quot;' />
          <member value='&quot;PSP - Palm Springs, CA (Palm Springs International Airport)&quot;' />
          <member value='&quot;PUB - Pueblo, CO (Pueblo Memorial Airport)&quot;' />
          <member value='&quot;PVD - Providence, RI (Theodore Francis Green State Airport)&quot;' />
          <member value='&quot;PWM - Portland, ME (Portland International Jetport Airport)&quot;' />
          <member value='&quot;RAP - Rapid City, SD (Rapid City Regional Airport)&quot;' />
          <member value='&quot;RDD - Redding, CA (Redding Municipal Airport)&quot;' />
          <member value='&quot;RDM - Bend/Redmond, OR (Roberts Field)&quot;' />
          <member value='&quot;RDU - Raleigh/Durham, NC (Raleigh Durham International Airport)&quot;' />
          <member value='&quot;RHI - Rhinelander, WI (Rhinelander Oneida County Airport)&quot;' />
          <member value='&quot;RIC - Richmond, VA (Richmond International Airport)&quot;' />
          <member value='&quot;RKS - Rock Springs, WY (Rock Springs Sweetwater County Airport)&quot;' />
          <member value='&quot;RNO - Reno, NV (Reno Tahoe International Airport)&quot;' />
          <member value='&quot;ROA - Roanoke, VA (Roanoke–Blacksburg Regional Airport)&quot;' />
          <member value='&quot;ROC - Rochester, NY (Greater Rochester International Airport)&quot;' />
          <member value='&quot;ROW - Roswell, NM (Roswell International Air Center Airport)&quot;' />
          <member value='&quot;RST - Rochester, MN (Rochester International Airport)&quot;' />
          <member value='&quot;RSW - Fort Myers, FL (Southwest Florida International Airport)&quot;' />
          <member value='&quot;SAF - Santa Fe, NM (Santa Fe Municipal Airport)&quot;' />
          <member value='&quot;SAN - San Diego, CA (San Diego International Airport)&quot;' />
          <member value='&quot;SAT - San Antonio, TX (San Antonio International Airport)&quot;' />
          <member value='&quot;SAV - Savannah, GA (Savannah Hilton Head International Airport)&quot;' />
          <member value='&quot;SBA - Santa Barbara, CA (Santa Barbara Municipal Airport)&quot;' />
          <member value='&quot;SBN - South Bend, IN (South Bend Regional Airport)&quot;' />
          <member value='&quot;SBP - San Luis Obispo, CA (San Luis County Regional Airport)&quot;' />
          <member value='&quot;SCC - Deadhorse, AK (Deadhorse Airport)&quot;' />
          <member value='&quot;SCE - State College, PA (University Park Airport)&quot;' />
          <member value='&quot;SDF - Louisville, KY (Louisville International Standiford Field)&quot;' />
          <member value='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' />
          <member value='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' />
          <member value='&quot;SGF - Springfield, MO (Springfield Branson National Airport)&quot;' />
          <member value='&quot;SGU - St. George, UT (St George Municipal Airport)&quot;' />
          <member value='&quot;SHV - Shreveport, LA (Shreveport Regional Airport)&quot;' />
          <member value='&quot;SIT - Sitka, AK (Sitka Rocky Gutierrez Airport)&quot;' />
          <member value='&quot;SJC - San Jose, CA (Norman Y. Mineta San Jose International Airport)&quot;' />
          <member value='&quot;SJT - San Angelo, TX (San Angelo Regional Mathis Field)&quot;' />
          <member value='&quot;SJU - San Juan, PR (Luis Munoz Marin International Airport)&quot;' />
          <member value='&quot;SLC - Salt Lake City, UT (Salt Lake City International Airport)&quot;' />
          <member value='&quot;SMF - Sacramento, CA (Sacramento International Airport)&quot;' />
          <member value='&quot;SNA - Santa Ana, CA (John Wayne Airport-Orange County Airport)&quot;' />
          <member value='&quot;SPI - Springfield, IL (Abraham Lincoln Capital Airport)&quot;' />
          <member value='&quot;SPS - Wichita Falls, TX (Sheppard Air Force Base-Wichita Falls Municipal Airport)&quot;' />
          <member value='&quot;SRQ - Sarasota/Bradenton, FL (Sarasota Bradenton International Airport)&quot;' />
          <member value='&quot;STL - St. Louis, MO (Lambert St Louis International Airport)&quot;' />
          <member value='&quot;STS - Santa Rosa, CA (Charles M. Schulz Sonoma County Airport)&quot;' />
          <member value='&quot;STT - Charlotte Amalie, VI (Cyril E. King Airport)&quot;' />
          <member value='&quot;STX - Christiansted, VI (Henry E Rohlsen Airport)&quot;' />
          <member value='&quot;SUN - Sun Valley/Hailey/Ketchum, ID (Friedman Memorial Airport)&quot;' />
          <member value='&quot;SUX - Sioux City, IA (Sioux Gateway Col. Bud Day Field)&quot;' />
          <member value='&quot;SWF - Newburgh/Poughkeepsie, NY (Stewart International Airport)&quot;' />
          <member value='&quot;SYR - Syracuse, NY (Syracuse Hancock International Airport)&quot;' />
          <member value='&quot;TLH - Tallahassee, FL (Tallahassee Regional Airport)&quot;' />
          <member value='&quot;TOL - Toledo, OH (Toledo Express Airport)&quot;' />
          <member value='&quot;TPA - Tampa, FL (Tampa International Airport)&quot;' />
          <member value='&quot;TRI - Bristol/Johnson City/Kingsport, TN (Tri Cities Regional Tn Va Airport)&quot;' />
          <member value='&quot;TTN - Trenton, NJ (Trenton Mercer Airport)&quot;' />
          <member value='&quot;TUL - Tulsa, OK (Tulsa International Airport)&quot;' />
          <member value='&quot;TUS - Tucson, AZ (Tucson International Airport)&quot;' />
          <member value='&quot;TVC - Traverse City, MI (Cherry Capital Airport)&quot;' />
          <member value='&quot;TWF - Twin Falls, ID (Joslin Field Magic Valley Regional Airport)&quot;' />
          <member value='&quot;TXK - Texarkana, AR (Texarkana Regional Webb Field)&quot;' />
          <member value='&quot;TYR - Tyler, TX (Tyler Pounds Regional Airport)&quot;' />
          <member value='&quot;TYS - Knoxville, TN (McGhee Tyson Airport)&quot;' />
          <member value='&quot;UIN - Quincy, IL (Quincy Regional Baldwin Field)&quot;' />
          <member value='&quot;UST - St. Augustine, FL (Northeast Florida Regional Airport)&quot;' />
          <member value='&quot;VLD - Valdosta, GA (Valdosta Regional Airport)&quot;' />
          <member value='&quot;VPS - Valparaiso, FL (Destin-Ft Walton Beach Airport)&quot;' />
          <member value='&quot;WRG - Wrangell, AK (Wrangell Airport)&quot;' />
          <member value='&quot;WYS - West Yellowstone, MT (Yellowstone Airport)&quot;' />
          <member value='&quot;XNA - Fayetteville, AR (Northwest Arkansas Regional Airport)&quot;' />
          <member value='&quot;YAK - Yakutat, AK (Yakutat Airport)&quot;' />
          <member value='&quot;YUM - Yuma, AZ (Yuma MCAS/Yuma International Airport)&quot;' />
        </members>
      </column>
      <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
        <calculation class='tableau' formula='100.0' />
        <range granularity='5.0' max='200.0' min='0.0' />
      </column>
      <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
        <calculation class='tableau' formula='&quot;Departure&quot;' />
        <members>
          <member value='&quot;Arrival&quot;' />
          <member value='&quot;Departure&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Airport Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meadows Field&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mercedita Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis-St Paul International/Wold-Chamberlain Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Central West Virginia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle Tacoma International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampa International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tri Cities Airport&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Wichita Mid Continent Airport&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South Bend Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Springfield Branson National Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Pounds Regional Airport&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;The Eastern Iowa Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane International Airport&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Theodore Francis Green State Airport&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='airport_delays' inline='true' name='federated.0pfv4211ega3oh17lckf50a9x4eu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airport_delays' name='textscan.1mz03xn162phb810hklkc1o1bxv0'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='airport_delays.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1mz03xn162phb810hklkc1o1bxv0' name='airport_delays.csv' table='[airport_delays#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airport' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='string' name='Carrier' ordinal='5' />
            <column datatype='string' name='FlightDateDay' ordinal='6' />
            <column datatype='real' name='Hour' ordinal='7' />
            <column datatype='real' name='DepartureDelay' ordinal='8' />
            <column datatype='real' name='ArrivalDelay' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDateDay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FlightDateDay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>FlightDateDay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[airport_delays.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
      <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
      <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
      </column>
      <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
      <column caption='Flight Date Day' datatype='string' name='[FlightDateDay]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4577416469211852804 1]' derivation='Sum' name='[sum:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Airport)' hidden='true' name='[Action (Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Airport]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/airport_delays.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/10/2018 12:13:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='165091' timestamp-start='2018-08-10 00:13:45.543' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport</remote-alias>
              <ordinal>0</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>5</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDateDay</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FlightDateDay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDateDay</remote-alias>
              <ordinal>6</ordinal>
              <family>airport_delays.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>7</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>8</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>9</ordinal>
              <family>airport_delays.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1328</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.29868' measure-ordering='alphabetic' measure-percentage='0.506601' parameter-percentage='0.194719' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>2</bucket>
            </map>
            <map to='asterisk'>
              <bucket>92</bucket>
            </map>
            <map to='asterisk'>
              <bucket>130</bucket>
            </map>
            <map to='asterisk'>
              <bucket>168</bucket>
            </map>
            <map to='asterisk'>
              <bucket>218</bucket>
            </map>
            <map to='asterisk'>
              <bucket>254</bucket>
            </map>
            <map to='asterisk'>
              <bucket>300</bucket>
            </map>
            <map to='asterisk'>
              <bucket>352</bucket>
            </map>
            <map to='asterisk'>
              <bucket>398</bucket>
            </map>
            <map to='asterisk'>
              <bucket>436</bucket>
            </map>
            <map to='asterisk'>
              <bucket>474</bucket>
            </map>
            <map to='asterisk'>
              <bucket>554</bucket>
            </map>
            <map to='asterisk'>
              <bucket>606</bucket>
            </map>
            <map to='asterisk'>
              <bucket>690</bucket>
            </map>
            <map to='asterisk'>
              <bucket>758</bucket>
            </map>
            <map to='asterisk'>
              <bucket>844</bucket>
            </map>
            <map to='asterisk'>
              <bucket>916</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1076</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1382</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1564</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1842</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2092</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2336</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2692</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2940</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3212</bucket>
            </map>
            <map to='asterisk'>
              <bucket>3480</bucket>
            </map>
            <map to='circle'>
              <bucket>70</bucket>
            </map>
            <map to='circle'>
              <bucket>112</bucket>
            </map>
            <map to='circle'>
              <bucket>146</bucket>
            </map>
            <map to='circle'>
              <bucket>208</bucket>
            </map>
            <map to='circle'>
              <bucket>238</bucket>
            </map>
            <map to='circle'>
              <bucket>278</bucket>
            </map>
            <map to='circle'>
              <bucket>336</bucket>
            </map>
            <map to='circle'>
              <bucket>376</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='circle'>
              <bucket>422</bucket>
            </map>
            <map to='circle'>
              <bucket>456</bucket>
            </map>
            <map to='circle'>
              <bucket>530</bucket>
            </map>
            <map to='circle'>
              <bucket>584</bucket>
            </map>
            <map to='circle'>
              <bucket>680</bucket>
            </map>
            <map to='circle'>
              <bucket>730</bucket>
            </map>
            <map to='circle'>
              <bucket>824</bucket>
            </map>
            <map to='circle'>
              <bucket>894</bucket>
            </map>
            <map to='circle'>
              <bucket>1020</bucket>
            </map>
            <map to='circle'>
              <bucket>1268</bucket>
            </map>
            <map to='circle'>
              <bucket>1490</bucket>
            </map>
            <map to='circle'>
              <bucket>1706</bucket>
            </map>
            <map to='circle'>
              <bucket>2040</bucket>
            </map>
            <map to='circle'>
              <bucket>2170</bucket>
            </map>
            <map to='circle'>
              <bucket>2574</bucket>
            </map>
            <map to='circle'>
              <bucket>2818</bucket>
            </map>
            <map to='circle'>
              <bucket>3162</bucket>
            </map>
            <map to='circle'>
              <bucket>3426</bucket>
            </map>
            <map to='circle'>
              <bucket>3774</bucket>
            </map>
            <map to='diamond'>
              <bucket>14</bucket>
            </map>
            <map to='diamond'>
              <bucket>96</bucket>
            </map>
            <map to='diamond'>
              <bucket>136</bucket>
            </map>
            <map to='diamond'>
              <bucket>172</bucket>
            </map>
            <map to='diamond'>
              <bucket>220</bucket>
            </map>
            <map to='diamond'>
              <bucket>262</bucket>
            </map>
            <map to='diamond'>
              <bucket>302</bucket>
            </map>
            <map to='diamond'>
              <bucket>358</bucket>
            </map>
            <map to='diamond'>
              <bucket>400</bucket>
            </map>
            <map to='diamond'>
              <bucket>444</bucket>
            </map>
            <map to='diamond'>
              <bucket>478</bucket>
            </map>
            <map to='diamond'>
              <bucket>558</bucket>
            </map>
            <map to='diamond'>
              <bucket>607</bucket>
            </map>
            <map to='diamond'>
              <bucket>692</bucket>
            </map>
            <map to='diamond'>
              <bucket>762</bucket>
            </map>
            <map to='diamond'>
              <bucket>846</bucket>
            </map>
            <map to='diamond'>
              <bucket>950</bucket>
            </map>
            <map to='diamond'>
              <bucket>1106</bucket>
            </map>
            <map to='diamond'>
              <bucket>1386</bucket>
            </map>
            <map to='diamond'>
              <bucket>1568</bucket>
            </map>
            <map to='diamond'>
              <bucket>1858</bucket>
            </map>
            <map to='diamond'>
              <bucket>2108</bucket>
            </map>
            <map to='diamond'>
              <bucket>2362</bucket>
            </map>
            <map to='diamond'>
              <bucket>2710</bucket>
            </map>
            <map to='diamond'>
              <bucket>3034</bucket>
            </map>
            <map to='diamond'>
              <bucket>3308</bucket>
            </map>
            <map to='diamond'>
              <bucket>3518</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>36</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>46</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>104</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>140</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>194</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>224</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>266</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>314</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>366</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>410</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>450</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>492</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>570</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>710</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>786</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>868</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>988</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1152</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1436</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1582</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1892</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2122</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2400</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2788</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3050</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3332</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>3562</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>38</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>56</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>108</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>142</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>200</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>226</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>268</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>324</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>368</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>414</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>452</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>494</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>574</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>662</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>714</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>812</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>880</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>996</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1162</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1446</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1592</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1994</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2150</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2410</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2794</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3140</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>3704</bucket>
            </map>
            <map to='plus'>
              <bucket>76</bucket>
            </map>
            <map to='plus'>
              <bucket>122</bucket>
            </map>
            <map to='plus'>
              <bucket>164</bucket>
            </map>
            <map to='plus'>
              <bucket>214</bucket>
            </map>
            <map to='plus'>
              <bucket>250</bucket>
            </map>
            <map to='plus'>
              <bucket>292</bucket>
            </map>
            <map to='plus'>
              <bucket>344</bucket>
            </map>
            <map to='plus'>
              <bucket>382</bucket>
            </map>
            <map to='plus'>
              <bucket>430</bucket>
            </map>
            <map to='plus'>
              <bucket>466</bucket>
            </map>
            <map to='plus'>
              <bucket>548</bucket>
            </map>
            <map to='plus'>
              <bucket>590</bucket>
            </map>
            <map to='plus'>
              <bucket>684</bucket>
            </map>
            <map to='plus'>
              <bucket>742</bucket>
            </map>
            <map to='plus'>
              <bucket>834</bucket>
            </map>
            <map to='plus'>
              <bucket>908</bucket>
            </map>
            <map to='plus'>
              <bucket>1054</bucket>
            </map>
            <map to='plus'>
              <bucket>1344</bucket>
            </map>
            <map to='plus'>
              <bucket>1544</bucket>
            </map>
            <map to='plus'>
              <bucket>1770</bucket>
            </map>
            <map to='plus'>
              <bucket>2066</bucket>
            </map>
            <map to='plus'>
              <bucket>2202</bucket>
            </map>
            <map to='plus'>
              <bucket>2628</bucket>
            </map>
            <map to='plus'>
              <bucket>2894</bucket>
            </map>
            <map to='plus'>
              <bucket>3172</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='plus'>
              <bucket>3474</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>42</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>66</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>110</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>144</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>206</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>232</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>274</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>330</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>370</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>418</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>454</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>582</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>724</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>814</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>884</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1014</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1234</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1488</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1668</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2024</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2166</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2506</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2796</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3154</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>3390</bucket>
            </map>
            <map to='square'>
              <bucket>74</bucket>
            </map>
            <map to='square'>
              <bucket>118</bucket>
            </map>
            <map to='square'>
              <bucket>154</bucket>
            </map>
            <map to='square'>
              <bucket>212</bucket>
            </map>
            <map to='square'>
              <bucket>242</bucket>
            </map>
            <map to='square'>
              <bucket>290</bucket>
            </map>
            <map to='square'>
              <bucket>338</bucket>
            </map>
            <map to='square'>
              <bucket>378</bucket>
            </map>
            <map to='square'>
              <bucket>424</bucket>
            </map>
            <map to='square'>
              <bucket>464</bucket>
            </map>
            <map to='square'>
              <bucket>538</bucket>
            </map>
            <map to='square'>
              <bucket>588</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='square'>
              <bucket>682</bucket>
            </map>
            <map to='square'>
              <bucket>734</bucket>
            </map>
            <map to='square'>
              <bucket>791</bucket>
            </map>
            <map to='square'>
              <bucket>832</bucket>
            </map>
            <map to='square'>
              <bucket>900</bucket>
            </map>
            <map to='square'>
              <bucket>1026</bucket>
            </map>
            <map to='square'>
              <bucket>1288</bucket>
            </map>
            <map to='square'>
              <bucket>1516</bucket>
            </map>
            <map to='square'>
              <bucket>1736</bucket>
            </map>
            <map to='square'>
              <bucket>2054</bucket>
            </map>
            <map to='square'>
              <bucket>2172</bucket>
            </map>
            <map to='square'>
              <bucket>2582</bucket>
            </map>
            <map to='square'>
              <bucket>2878</bucket>
            </map>
            <map to='square'>
              <bucket>3166</bucket>
            </map>
            <map to='square'>
              <bucket>3446</bucket>
            </map>
            <map to='times'>
              <bucket>78</bucket>
            </map>
            <map to='times'>
              <bucket>124</bucket>
            </map>
            <map to='times'>
              <bucket>166</bucket>
            </map>
            <map to='times'>
              <bucket>216</bucket>
            </map>
            <map to='times'>
              <bucket>252</bucket>
            </map>
            <map to='times'>
              <bucket>298</bucket>
            </map>
            <map to='times'>
              <bucket>346</bucket>
            </map>
            <map to='times'>
              <bucket>386</bucket>
            </map>
            <map to='times'>
              <bucket>432</bucket>
            </map>
            <map to='times'>
              <bucket>470</bucket>
            </map>
            <map to='times'>
              <bucket>550</bucket>
            </map>
            <map to='times'>
              <bucket>598</bucket>
            </map>
            <map to='times'>
              <bucket>688</bucket>
            </map>
            <map to='times'>
              <bucket>756</bucket>
            </map>
            <map to='times'>
              <bucket>838</bucket>
            </map>
            <map to='times'>
              <bucket>914</bucket>
            </map>
            <map to='times'>
              <bucket>1072</bucket>
            </map>
            <map to='times'>
              <bucket>1356</bucket>
            </map>
            <map to='times'>
              <bucket>1546</bucket>
            </map>
            <map to='times'>
              <bucket>1816</bucket>
            </map>
            <map to='times'>
              <bucket>2072</bucket>
            </map>
            <map to='times'>
              <bucket>2274</bucket>
            </map>
            <map to='times'>
              <bucket>2650</bucket>
            </map>
            <map to='times'>
              <bucket>2934</bucket>
            </map>
            <map to='times'>
              <bucket>3202</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
            <map to='times'>
              <bucket>3706</bucket>
            </map>
            <map to='triangle'>
              <bucket>16</bucket>
            </map>
            <map to='triangle'>
              <bucket>44</bucket>
            </map>
            <map to='triangle'>
              <bucket>98</bucket>
            </map>
            <map to='triangle'>
              <bucket>138</bucket>
            </map>
            <map to='triangle'>
              <bucket>192</bucket>
            </map>
            <map to='triangle'>
              <bucket>222</bucket>
            </map>
            <map to='triangle'>
              <bucket>264</bucket>
            </map>
            <map to='triangle'>
              <bucket>306</bucket>
            </map>
            <map to='triangle'>
              <bucket>364</bucket>
            </map>
            <map to='triangle'>
              <bucket>448</bucket>
            </map>
            <map to='triangle'>
              <bucket>484</bucket>
            </map>
            <map to='triangle'>
              <bucket>560</bucket>
            </map>
            <map to='triangle'>
              <bucket>612</bucket>
            </map>
            <map to='triangle'>
              <bucket>706</bucket>
            </map>
            <map to='triangle'>
              <bucket>764</bucket>
            </map>
            <map to='triangle'>
              <bucket>850</bucket>
            </map>
            <map to='triangle'>
              <bucket>958</bucket>
            </map>
            <map to='triangle'>
              <bucket>1146</bucket>
            </map>
            <map to='triangle'>
              <bucket>1432</bucket>
            </map>
            <map to='triangle'>
              <bucket>1578</bucket>
            </map>
            <map to='triangle'>
              <bucket>1882</bucket>
            </map>
            <map to='triangle'>
              <bucket>2116</bucket>
            </map>
            <map to='triangle'>
              <bucket>2394</bucket>
            </map>
            <map to='triangle'>
              <bucket>2732</bucket>
            </map>
            <map to='triangle'>
              <bucket>3046</bucket>
            </map>
            <map to='triangle'>
              <bucket>3360</bucket>
            </map>
            <map to='triangle'>
              <bucket>3556</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[min:Calculation_4577416469211852804 1:ok]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>1</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>2</bucket>
            </map>
            <map to='circle'>
              <bucket>402</bucket>
            </map>
            <map to='plus'>
              <bucket>3314</bucket>
            </map>
            <map to='square'>
              <bucket>648</bucket>
            </map>
            <map to='times'>
              <bucket>3478</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Airport' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Calculation_4686839867435659276' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='FlightDateDay' />
        <field-sort-custom-order field='Hour' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='Calculation_4577416469211852804' />
        <field-sort-custom-order field='Calculation_4577416469212676102' />
        <field-sort-custom-order field='Calculation_4686839866503639046' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
          <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
        </column>
        <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
          <calculation class='tableau' formula='100.0' />
          <range granularity='5.0' max='200.0' min='0.0' />
        </column>
        <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
          <calculation class='tableau' formula='&quot;Departure&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='flights' inline='true' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.11sx92m094fgux1366mhm0wdq491'>
            <connection class='textscan' directory='/Users/andrewenfield/work/github/bonvoyage/data' filename='flights.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11sx92m094fgux1366mhm0wdq491' name='flights.csv' table='[flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='FlightDate' ordinal='0' />
            <column datatype='string' name='OriginCode' ordinal='1' />
            <column datatype='string' name='OriginCity' ordinal='2' />
            <column datatype='string' name='DestinationCode' ordinal='3' />
            <column datatype='string' name='DestinationCity' ordinal='4' />
            <column datatype='integer' name='DepartureTimeScheduled' ordinal='5' />
            <column datatype='real' name='DepartureTimeActual' ordinal='6' />
            <column datatype='real' name='DepartureDelay' ordinal='7' />
            <column datatype='real' name='DepartureDelayCapped' ordinal='8' />
            <column datatype='integer' name='ArrivalTimeScheduled' ordinal='9' />
            <column datatype='real' name='ArrivalTimeActual' ordinal='10' />
            <column datatype='real' name='ArrivalDelay' ordinal='11' />
            <column datatype='real' name='ArrivalDelayCapped' ordinal='12' />
            <column datatype='real' name='Cancelled' ordinal='13' />
            <column datatype='real' name='Diverted' ordinal='14' />
            <column datatype='real' name='TotalTimeScheduled' ordinal='15' />
            <column datatype='real' name='TotalTimeActual' ordinal='16' />
            <column datatype='string' name='OriginAirport' ordinal='17' />
            <column datatype='real' name='OriginLatitude' ordinal='18' />
            <column datatype='real' name='OriginLongitude' ordinal='19' />
            <column datatype='string' name='DestinationAirport' ordinal='20' />
            <column datatype='real' name='DestinationLatitude' ordinal='21' />
            <column datatype='real' name='DestinationLongitude' ordinal='22' />
            <column datatype='string' name='Carrier' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCode]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationCity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationCity]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationCity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeScheduled</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureTimeActual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DepartureDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelayCapped</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeScheduled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeScheduled</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalTimeActual</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayCapped</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ArrivalDelayCapped]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelayCapped</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeScheduled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeScheduled]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeScheduled</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeActual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTimeActual]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TotalTimeActual</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginAirport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLatitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OriginLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginLongitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestinationAirport]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationAirport</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLatitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLatitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLatitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestinationLongitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DestinationLongitude]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestinationLongitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='*0000' name='[ArrivalTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[ArrivalTimeScheduled]' role='measure' type='quantitative' />
      <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
      </column>
      <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
      </column>
      <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
      </column>
      <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
      </column>
      <column caption='ArrivalTimeActualDateTime' datatype='datetime' name='[Calculation_3516959494379470854]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([ArrivalTimeActual]), 4))' />
      </column>
      <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
      <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*0000' name='[DepartureTimeScheduled]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[DestinationLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
      <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
      <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='OriginLatitude' datatype='real' name='[OriginLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='OriginLongitude' datatype='real' name='[OriginLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='TotalTimeActual' datatype='real' name='[TotalTimeActual]' role='measure' type='quantitative' />
      <column caption='TotalTimeScheduled' datatype='real' name='[TotalTimeScheduled]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(DepartureTimeActualDateTime),Carrier)' hidden='true' name='[Action (HOUR(DepartureTimeActualDateTime),Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/andrewenfield/work/github/bonvoyage/data/flights.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCode</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCity</remote-alias>
              <ordinal>2</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCode</remote-alias>
              <ordinal>3</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationCity</remote-alias>
              <ordinal>4</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepartureTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeScheduled</remote-alias>
              <ordinal>5</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>393</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureTimeActual</remote-alias>
              <ordinal>6</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1037</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelay</remote-alias>
              <ordinal>7</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DepartureDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelayCapped</remote-alias>
              <ordinal>8</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeScheduled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrivalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeScheduled</remote-alias>
              <ordinal>9</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>736</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalTimeActual</remote-alias>
              <ordinal>10</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1162</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelay</remote-alias>
              <ordinal>11</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelayCapped</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ArrivalDelayCapped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelayCapped</remote-alias>
              <ordinal>12</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>13</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>14</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeScheduled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeScheduled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeScheduled</remote-alias>
              <ordinal>15</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeActual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TotalTimeActual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeActual</remote-alias>
              <ordinal>16</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirport</remote-alias>
              <ordinal>17</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLatitude</remote-alias>
              <ordinal>18</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OriginLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginLongitude</remote-alias>
              <ordinal>19</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationAirport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestinationAirport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationAirport</remote-alias>
              <ordinal>20</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLatitude</remote-alias>
              <ordinal>21</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestinationLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DestinationLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestinationLongitude</remote-alias>
              <ordinal>22</ordinal>
              <family>flights.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>23</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.480198' measure-ordering='alphabetic' measure-percentage='0.381188' parameter-percentage='0.138614' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Carrier:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ExpressJet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SkyWest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;JetBlue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spirit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='FlightDate' />
        <field-sort-custom-order field='Calculation_3516959494370541571' />
        <field-sort-custom-order field='OriginCode' />
        <field-sort-custom-order field='OriginCity' />
        <field-sort-custom-order field='Calculation_3516959494367801346' />
        <field-sort-custom-order field='DestinationCode' />
        <field-sort-custom-order field='DestinationCity' />
        <field-sort-custom-order field='Calculation_3516959494367354881' />
        <field-sort-custom-order field='DepartureTimeScheduled' />
        <field-sort-custom-order field='DepartureTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494374559748' />
        <field-sort-custom-order field='DepartureDelay' />
        <field-sort-custom-order field='DepartureDelayCapped' />
        <field-sort-custom-order field='ArrivalTimeScheduled' />
        <field-sort-custom-order field='ArrivalTimeActual' />
        <field-sort-custom-order field='Calculation_3516959494379470854' />
        <field-sort-custom-order field='ArrivalDelay' />
        <field-sort-custom-order field='ArrivalDelayCapped' />
        <field-sort-custom-order field='Cancelled' />
        <field-sort-custom-order field='Diverted' />
        <field-sort-custom-order field='TotalTimeScheduled' />
        <field-sort-custom-order field='TotalTimeActual' />
        <field-sort-custom-order field='OriginAirport' />
        <field-sort-custom-order field='OriginLatitude' />
        <field-sort-custom-order field='OriginLongitude' />
        <field-sort-custom-order field='DestinationAirport' />
        <field-sort-custom-order field='DestinationLatitude' />
        <field-sort-custom-order field='DestinationLongitude' />
        <field-sort-custom-order field='Carrier' />
        <field-sort-custom-order field='DepDelay' />
        <field-sort-custom-order field='DestCity' />
        <field-sort-custom-order field='Flights' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='AvgDepDelayByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByCarrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='OptimalFlight' type='sheet' worksheet='TotalFlightsByHour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='OptimalFlight' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AirportArrivalDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average arrival delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ArrivalDelay]' derivation='Avg' name='[avg:ArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' scope='cols' value='Average arrival delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average arrival delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:ArrivalDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AirportDepartureDelays'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:13]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' ordering-type='Field' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:13]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:13]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' value='452' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='ASC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='cols' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day of week'>
              <formatted-text>
                <run>Day of week</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelayByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average departure delay, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepartureDelay]' derivation='Avg' name='[avg:DepartureDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]' scope='rows' value='Average departure delay (minutes)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average departure delay: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]&gt;</run>
                <run bold='true' fontcolor='#000000'> minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[avg:DepartureDelay:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='MapWithRadiusFilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='airport_delays' name='federated.0pfv4211ega3oh17lckf50a9x4eu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected CodeCityAndAirport' datatype='string' name='[CodeCityAndAirport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;'>
              <calculation class='tableau' formula='&quot;LAX - Los Angeles, CA (Los Angeles International Airport)&quot;' />
            </column>
            <column caption='Maximum Distance' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
              <range granularity='5.0' max='200.0' min='0.0' />
            </column>
            <column caption='Delay Type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Departure&quot;'>
              <calculation class='tableau' formula='&quot;Departure&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pfv4211ega3oh17lckf50a9x4eu'>
            <column datatype='string' name='[Airport]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[ArrivalDelay]' role='measure' type='quantitative' />
            <column caption='CodeCityAndAirport Identifier' datatype='integer' name='[Calculation_4577416469211852804 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_4686839867435659276] == [Parameters].[CodeCityAndAirport Parameter] THEN 1 ELSE 2 END' />
            </column>
            <column caption='Distance' datatype='real' name='[Calculation_4577416469212676102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(&#10;(&#10;SIN(RADIANS(LOOKUP(AVG([Latitude]), First()))) * SIN(RADIANS(AVG([Latitude]))) +&#10;COS(RADIANS(LOOKUP(AVG([Latitude]), First()))) * COS(RADIANS(AVG([Latitude]))) * COS(RADIANS(AVG([Longitude])) - RADIANS(LOOKUP(AVG([Longitude]), First())))&#10;))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Distance Filter' datatype='boolean' name='[Calculation_4686839866503639046]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4577416469212676102] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='CodeCityAndAirport' datatype='string' name='[Calculation_4686839867435659276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code] + &quot; - &quot; + [City] + &quot; (&quot; + [Airport] + &quot;)&quot;' />
            </column>
            <column caption='Delay' datatype='real' name='[Calculation_4686839867444486165]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Arrival&apos; THEN [ArrivalDelay] &#10;ELSEIF [Parameters].[Parameter 2] == &apos;Departure&apos; THEN [DepartureDelay]&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column caption='Departure Delay' datatype='real' name='[DepartureDelay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_4686839867444486165]' derivation='Avg' name='[avg:Calculation_4686839867444486165:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4577416469211852804 1]' derivation='Min' name='[min:Calculation_4577416469211852804 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Code]' derivation='Min' name='[min:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4686839867435659276]' derivation='None' name='[none:Calculation_4686839867435659276:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4577416469212676102]' derivation='User' name='[usr:Calculation_4577416469212676102:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4686839866503639046]' derivation='User' name='[usr:Calculation_4686839866503639046:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4577416469212676102]' ordering-type='Field'>
                <order field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[Calculation_4686839867435659276]' />
                <sort direction='ASC' using='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_4686839866503639046:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' value='Average delay (minutes)'>
              <formatted-text>
                <run>Average delay (minutes)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' />
              <shape column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:ok]' />
              <tooltip column='[Parameters].[Parameter 2]' />
              <tooltip column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]' />
              <text column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Code:nk]' />
              <lod column='[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average delay:&#9;</run>
                <run bold='true'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Delay Type:&#9;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distance from selected airport:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4577416469212676102:qk]&gt; miles</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]</rows>
        <cols>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SelectedAirport'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='271' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by carrier</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' direction='DESC' using='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='cols' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017: &#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt; flights</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]</rows>
        <cols>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TotalFlightsByHour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total flights, by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
            <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
            </column>
            <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
            </column>
            <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
            </column>
            <column caption='DepartureTimeActualDateTime' datatype='datetime' datatype-customized='true' name='[Calculation_3516959494374559748]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;yyyy-MM-dd HHmm&quot;, STR([FlightDate]) + &quot; &quot; + RIGHT(&quot;000000&quot; + STR([DepartureTimeActual]), 4))' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='real' default-format='*0000' name='[DepartureTimeActual]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestinationAirport]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCity]' role='dimension' type='nominal' />
            <column datatype='string' name='[DestinationCode]' role='dimension' type='nominal' />
            <column caption='FlightDate' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Origin Airport' datatype='string' name='[OriginAirport]' role='dimension' type='nominal' />
            <column caption='OriginCity' datatype='string' name='[OriginCity]' role='dimension' type='nominal' />
            <column caption='OriginCode' datatype='string' name='[OriginCode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='Attribute' name='[attr:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='Attribute' name='[attr:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494374559748]' derivation='Hour' name='[hr:Calculation_3516959494374559748:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[Carrier]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='level-members' level='[Carrier]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]'>
            <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_3516959494374559748:ok]' />
              <groupfilter function='member' level='[hr:Calculation_3516959494374559748:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;PHX - Phoenix, AZ (Phoenix Sky Harbor International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_3516959494367801346:nk]' member='&quot;SEA - Seattle, WA (Seattle Tacoma International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_3516959494370541571:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (Carrier)]</column>
            <column>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[Action (HOUR(DepartureTimeActualDateTime),Carrier)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]' scope='rows' value='Number of flights' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' value='Origin'>
              <formatted-text>
                <run>Origin</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' value='Destination'>
              <formatted-text>
                <run>Destination</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' value='Day'>
              <formatted-text>
                <run>Day</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]' />
              <tooltip column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Hour of day:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total flights in 2017:&#9;</run>
                <run bold='true'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>From: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367801346:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>To: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[attr:Calculation_3516959494367354881:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[sum:Number of Records:qk]</rows>
        <cols include-empty='true'>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BestAirport'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_19' value='bottom' />
          <format attr='vertical-align' id='dash-text_20' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='80080' id='5' param='horz' type='layout-flow' w='98476' x='762' y='19280'>
            <zone h='80080' id='3' type='layout-basic' w='80476' x='762' y='19280'>
              <zone h='18691' id='11' name='AirportDepartureDelays' w='80476' x='762' y='62126'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18543' id='14' name='AirportArrivalDelays' w='80476' x='762' y='80817'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42846' id='15' name='MapWithRadiusFilter' show-title='false' w='80476' x='762' y='19280'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='189' h='80080' id='4' is-fixed='true' param='vert' type='layout-flow' w='18000' x='81238' y='19280'>
              <zone custom-title='true' fixed-size='45' h='4240' id='17' is-fixed='true' mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='paramctrl' w='18000' x='81238' y='19280'>
                <formatted-text>
                  <run>Airport</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='68' h='6080' id='13' is-fixed='true' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='18000' x='81238' y='23520'>
                <formatted-text>
                  <run>Dist. from airport (miles)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='41' h='3920' id='18' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='18000' x='81238' y='29600'>
                <formatted-text>
                  <run>Type of delay (color)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='701' h='56720' id='16' is-fixed='true' name='MapWithRadiusFilter' pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' w='18000' x='81238' y='33520'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9120' id='19' type='text' w='18000' x='81238' y='90240'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000'>Data</run>
                  <run> Airline On-Time Performance Data - </run>
                  <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000'>Source</run>
                  <run> US Department of Transportation Bureau of Transportation Statistics&#10;</run>
                  <run bold='true' fontcolor='#000000'>Dates</run>
                  <run> All flights in 2017</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='18640' id='20' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the best airport</run>
              <run>&#10;&#10;Different airports have different on-time performance. &#10;&#10;To use this visualization, choose the airport you&apos;d normally use. The map automatically updates to show all airports within the specified distance. The color of the airport circle shows the average delay in minutes for that airport (either departure or arrival depending on the choice in the </run>
              <run bold='true'>Type of delay</run>
              <run> drop down). The average departure and arrival delay is shown in bar charts below the map.&#10;&#10;</run>
              <run bold='true'>Note</run>
              <run>: If the map doesn&apos;t change when you choose a different airport or distance, you can fix it in one of two ways, depending on whether you&apos;re viewing this on the web or in the Tableau Desktop application. On the web, click the small refresh icon that appears above the &apos;Find the best airport&apos; button at the top of the page. With Tableau Desktop, make sure the push pin image that appears on the left side of the map when the cursor is in the map does not contain an X. If it does, click the push pin. (The X indicates that the map is &apos;fixed&apos; and won&apos;t change when different selections are made.)</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bon Voyage' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Book' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='178' />
        </style-rule>
      </style>
      <size maxheight='1450' maxwidth='1075' minheight='1450' minwidth='1075' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98896' id='10' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='552'>
            <zone h='3311' id='11' type='title' w='98512' x='744' y='552'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='95585' id='8' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
              <zone h='95585' id='1' param='vert' removable='false' type='layout-flow' w='98512' x='744' y='3863'>
                <zone h='6966' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98512' x='744' y='3863' />
                <zone h='88619' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98512' x='744' y='10829'>
                  <flipboard active-id='2' nav-type='caption' show-nav-arrows='false'>
                    <story-points>
                      <story-point caption='Find the best airport' captured-sheet='BestAirport' id='2'>
                        <currentDeltas>
                          <dashboard name='BestAirport'>
                            <zone id='20'>
                              <formatted-text>
                                <run fontcolor='#000000' fontsize='22'>Find the best airport</run>
                                <run>&#10;&#10;Different airports have different on-time performance. &#10;&#10;To use this visualization, choose the airport you&apos;d normally use. The map automatically updates to show all airports within the specified distance. The color of the airport circle shows the average delay in minutes for that airport (either departure or arrival depending on the choice in the </run>
                                <run bold='true'>Type of delay</run>
                                <run> drop down). The average departure and arrival delay is shown in bar charts below the map.&#10;&#10;</run>
                                <run bold='true'>Note</run>
                                <run>: If the map doesn&apos;t change when you choose a different airport or distance, you can fix it in one of two ways, depending on whether you&apos;re viewing this on the web or in the Tableau Desktop application. On the web, click the small refresh icon that appears above the &apos;Find the best airport&apos; button at the top of the page. With Tableau Desktop, make sure the push pin image that appears on the left side of the map when the cursor is in the map does not contain an X. If it does, click the push pin. (The X indicates that the map is &apos;fixed&apos; and won&apos;t change when different selections are made.)</run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='MapWithRadiusFilter'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Latitude:qk]' field-type='quantitative' max='4134368.347865303' min='3968745.0915516447' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Longitude:qk]' field-type='quantitative' max='-13112753.958976304' min='-13367726.603564436' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                          <datasource name='Parameters'>
                            <column name='[Airport Parameter]' value='&quot;Seattle Tacoma International Airport&quot;' />
                          </datasource>
                        </currentDeltas>
                        <capturedDeltas>
                          <datasource name='Parameters'>
                            <column name='[Airport Parameter]' value='&quot;Seattle Tacoma International Airport&quot;' />
                          </datasource>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Find the optimal flight' captured-sheet='OptimalFlight' id='1'>
                        <capturedDeltas>
                          <worksheet name='AvgDepDelayByCarrier'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                          <worksheet name='AvgDepDelayByHour'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                          <worksheet name='TotalFlightsByCarrier'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                          <worksheet name='TotalFlightsByHour'>
                            <filter class='categorical' column='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]'>
                              <groupfilter function='member' level='[none:Calculation_3516959494367354881:nk]' member='&quot;SFO - San Francisco, CA (San Francisco International Airport)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </filter>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='OptimalFlight'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_18' value='bottom' />
          <format attr='vertical-align' id='dash-text_17' value='top' />
        </style-rule>
      </style>
      <size maxheight='1250' maxwidth='1050' minheight='1250' minwidth='1050' preset-index='9' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flights' name='federated.1fkph2z1nbvnw41fs75fi1ma4cro' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkph2z1nbvnw41fs75fi1ma4cro'>
        <column caption='DestinationCodeAndCity' datatype='string' name='[Calculation_3516959494367354881]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[DestinationCode] + &quot; - &quot; + [DestinationCity] + &quot; (&quot; + [DestinationAirport] + &quot;)&quot;' />
        </column>
        <column caption='OriginCodeAndCity' datatype='string' name='[Calculation_3516959494367801346]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[OriginCode] + &quot; - &quot; + [OriginCity] + &quot; (&quot; + [OriginAirport] + &quot;)&quot;' />
        </column>
        <column caption='FlightDateDay' datatype='string' name='[Calculation_3516959494370541571]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[FlightDate])' />
        </column>
        <column-instance column='[Calculation_3516959494367354881]' derivation='None' name='[none:Calculation_3516959494367354881:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494367801346]' derivation='None' name='[none:Calculation_3516959494367801346:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_3516959494370541571]' derivation='None' name='[none:Calculation_3516959494370541571:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='87680' id='10' param='horz' type='layout-flow' w='98476' x='762' y='11680'>
            <zone h='87680' id='5' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='80476' x='762' y='11680'>
              <zone h='87680' id='3' type='layout-basic' w='80476' x='762' y='11680'>
                <zone h='21916' id='1' name='AvgDepDelayByCarrier' w='80476' x='762' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22566' id='8' name='TotalFlightsByCarrier' w='80476' x='762' y='55516'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21920' id='14' name='AvgDepDelayByHour' w='80476' x='762' y='33596'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21278' id='16' name='TotalFlightsByHour' w='80476' x='762' y='78082'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='189' h='87680' id='19' is-fixed='true' type='layout-basic' w='18000' x='81238' y='11680'>
              <zone h='65280' id='9' param='vert' type='layout-flow' w='18000' x='81238' y='11680'>
                <zone h='4160' id='11' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]' type='filter' values='relevant' w='18000' x='81238' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='12' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]' type='filter' values='relevant' w='18000' x='81238' y='15840'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4160' id='13' mode='dropdown' name='AvgDepDelayByCarrier' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494370541571:nk]' type='filter' values='database' w='18000' x='81238' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='417' h='34000' id='15' is-fixed='true' name='AvgDepDelayByHour' pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' w='18000' x='81238' y='24160'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='22400' id='20' param='vert' type='layout-flow' w='18000' x='81238' y='76960'>
                <zone fixed-size='240' forceUpdate='true' h='19840' id='18' is-fixed='true' type='text' w='18000' x='81238' y='76960'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000'>Data</run>
                    <run> Airline On-Time Performance Data - </run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.transtats.bts.gov/Tables.asp?DB_ID=120&amp;quot;'>https://www.transtats.bts.gov/Tables.asp?DB_ID=120</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000'>Source</run>
                    <run> US Department of Transportation Bureau of Transportation Statistics&#10;</run>
                    <run bold='true' fontcolor='#000000'>Dates</run>
                    <run> All flights in 2017&#10;</run>
                    <run bold='true' fontcolor='#000000'>Note</run>
                    <run> Average departure delays by hour calculated only from hour/carrier combinations that had at least five flights (to avoid extreme small sample size outlier averages).&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='11040' id='17' type='text' w='98476' x='762' y='640'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='22'>Find the optimal flight</run>
              <run>&#10;&#10;Different airlines and different times of the day have different on-time performance, even at the same airports. There are different numbers of flights at different hours of the day. &#10;&#10;To use this visualization, choose the origin and destination airport. The charts will update automatically to show the average departure delay and number of flights. You can optionally choose to only show the results from a particular day of the week.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='AvgDepDelayByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgDepDelayByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalFlightsByHour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[hr:Calculation_3516959494374559748:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367354881:nk]</field>
            <field>[federated.1fkph2z1nbvnw41fs75fi1ma4cro].[none:Calculation_3516959494367801346:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='OptimalFlight'>
      <viewpoints>
        <viewpoint name='AvgDepDelayByCarrier' />
        <viewpoint name='AvgDepDelayByHour'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalFlightsByCarrier' />
        <viewpoint name='TotalFlightsByHour'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='BestAirport'>
      <viewpoints>
        <viewpoint name='AirportArrivalDelays' />
        <viewpoint name='AirportDepartureDelays' />
        <viewpoint name='MapWithRadiusFilter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Bon Voyage'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='MapWithRadiusFilter'>
      <cards>
        <edge name='left'>
          <strip size='295'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[CodeCityAndAirport Parameter]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[avg:Calculation_4686839867444486165:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804 1:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Code:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportDepartureDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AirportArrivalDelays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Airport Parameter]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[min:Calculation_4577416469211852804:qk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[usr:Calculation_4686839866503639046:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SelectedAirport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Airport:nk]</field>
            <field>[federated.0pfv4211ega3oh17lckf50a9x4eu].[none:Calculation_4686839867435659276:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='278' name='AirportArrivalDelays' width='384'>
      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
      BYCIXBQz7bOx2ZJ7u8yTkx2kpGXgziuirP15Hq5swF9XyYEbdlKUMU2l6tyndEYgQv9pOPbL
      Upkxyl2Mp109ravZ/jA1w+49wtkxNGckCgARuUiGnt+e5l7B6kUHqW6L0HkyDBlT9QKHARxu
      tlZVTXAn429XVmEJeak2zgyx33AslfTRJtEoKABE5JJ02ewkGHAl/scgUbt6IiNvWTmlmdNX
      lvUcgIhceqI+XmyOT5mc2jf4TLOE7XJw3ZIsAGr/5cAw9w8QDYWITuLpKABE5JIRi4bpaD/A
      jgd34ANgETe4PpszgfoaqV2uZbfGh519NTzydBOhgduHu2h6/knu2/jfOTyJr8b4I4pWEfks
      aazcyCG7nUgE7HaIRAZ299ip2HA3Q/WINFZupDHhEju3b/57lmdO3nv3x2Jc7UrL5/sVh9he
      20bAU81Gz6/JLVzK/Jmn+eCDd2nz9UwrdTIzwRjAcB1lwy1TAIjItLI5knp/7ymOfWukPTWL
      62+5ldLifNIT1fARq1aErlNRSDijfupMtF3Zpffx46x97KqqwR+x8Hoa+iy148ov5baKYrL7
      bDuj+5+xIGPuoP2NZtnnzp8/f360DRQRkakWI9TVxcenYthsNmbNmk3KvBSSp+ByXQEgImIo
      DQKLiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhK
      ASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQA
      IiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG
      UgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG+v+ZxPEl
      SyKLJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='278' name='AirportDepartureDelays' width='384'>
      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
      BYCIXBQz7bOx2ZJ7u8yTkx2kpGXgziuirP15Hq5swF9XyYEbdlKUMU2l6tyndEYgQv9pOPbL
      Upkxyl2Mp109ravZ/jA1w+49wtkxNGckCgARuUiGnt+e5l7B6kUHqW6L0HkyDBlT9QKHARxu
      tlZVTXAn429XVmEJeak2zgyx33AslfTRJtEoKABE5JJ02ewkGHAl/scgUbt6IiNvWTmlmdNX
      lvUcgIhceqI+XmyOT5mc2jf4TLOE7XJw3ZIsAGr/5cAw9w8QDYWITuLpKABE5JIRi4bpaD/A
      jgd34ANgETe4PpszgfoaqV2uZbfGh519NTzydBOhgduHu2h6/knu2/jfOTyJr8b4I4pWEfks
      aazcyCG7nUgE7HaIRAZ299ip2HA3Q/WINFZupDHhEju3b/57lmdO3nv3x2Jc7UrL5/sVh9he
      20bAU81Gz6/JLVzK/Jmn+eCDd2nz9UwrdTIzwRjAcB1lwy1TAIjItLI5knp/7ymOfWukPTWL
      62+5ldLifNIT1fARq1aErlNRSDijfupMtF3Zpffx46x97KqqwR+x8Hoa+iy148ov5baKYrL7
      bDuj+5+xIGPuoP2NZtnnzp8/f360DRQRkakWI9TVxcenYthsNmbNmk3KvBSSp+ByXQEgImIo
      DQKLiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhK
      ASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQA
      IiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG
      UgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigF
      gIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKG+v+ZxPEl
      SyKLJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='358' name='AvgDepDelayByCarrier' width='384'>
      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
      JM5gj594f+zKNEmEW56nqskAoCD/pnEuzdVPASAyVmKfEAOwXsO0IVa7MecOAHT+emlaDz3H
      uh31AFjzV/D5rNRxLtHVT0PkImMk8u7bBIDu+Z6D0afy0sTa2V/1I2q9iRfWmruE768q0ss4
      DHqNRGTCCrUc4J92VCeCFchdspZ/KMtRxTZMep1ExkjKXziwAtGL9O1M0cdyGGI0Pfdjdndf
      EOZkxWOPDjE7SAaid5rIGLGk25kFDH0NK3xw8p0xKM1EFuPQrm+z15Po8nEULuObjyxGN9C4
      dBoEFhkr5+OJQeDA67w96FVecdp8JwC4zn7tGBVsYvHt/3F35Z//4GM8qcr/sikARMZK2o3M
      cwAEePWNQeb4x9v5z87KLffTmWNWtIki3n6A7bWJNlTussdYVaJ7Jl0JBYDImEnnroUuAJp+
      VctA16m2HarBC2AtJC9TPbR9Nf+2Z5rnP+iGeVdMASAyhrIWfAEHgOHmf+06kHS/n1Dz82yu
      9gLgKvsC/e4UYXpBPMcSF3nNL5mjAcwRoLuBioyx0NHneLzKnfjF5qK4YDacPoG767sBnOU8
      taECzWfpI9LM9761s3vK58XkP7iRVSW6JfRQ1AIQGWMZBQ+xeWVp4kpfw4e7oaG78rflL1Pl
      P5iUmVx3Cau3t58dtaJMFmoBiIyXWIgW79t8Yp1J/MxHTM+6A1emqn4ZOwoAERGTUheQiIhJ
      KQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJS
      CgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiU
      AkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIial
      ABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkp
      AERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIK
      ABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZP6/wHMPRDM
      EEVnpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='AvgDepDelayByHour' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZRc1Xnu/ewz1tBV3S11t2aBEJIREmAGOQHHtgwCY7DjgL8YzPWE893P
      IsNyPt/EhuXlmGDiZCXXsWNnxTesJMsYg2+MryewGY0tMMRmBjNKCCSkbqkl9VjzOWfvff84
      Q1fPVXVOVZ1Sv79/1F3dXb1bXX2e807Py6SUEgRBEMSSgjHGlHYfgiAIgmgPJAAEQRBLFBIA
      giCIJQoJAEEQxBKlowVACNHuIxAEQXQsJAAEQRBLlI4WAIIgCKJx2iAAEvmJUTz+1LMQM0YQ
      ht7Yg6eefwVSApACrz7/FH7wgx/i+Vf3t/6YBEEQJzgtF4BXn3sM//6t7+Duex8C51MCUM6P
      4v/86C48/utfQwIYeu153P/I8zjnnLPw2L134rWh8VYflSAI4oRGa/U37F9zKv6/Xdvx77fc
      EjwmJcdD99yNc999OfY9+WsAwAvPv4gL33c5Tj5pAO999wX4zQsvY+Oq3531fDTITBAE0Rgt
      F4BlfSsgBZ/22OCrz+Gw1Y1Ltp0cCMB4wcK2dBIAMLBmFUr73oSUErZtB18nhJj2PkEQBFE7
      LReAmUiniO/9+KfYcMb5eOzR/8Lg0SP47Yt7YZgmHOl2+VSKRSgqg6IoME0z+FrHcaBpbf8R
      CIIgOpL2Xz0VHX/44Y/C4RKCV5BJpdHf3wu5uhtPPvcK1l20HU888Qw2bLyg3SclCII4oWCt
      dQOV+OVPf4BXDx7D2Ng4upf14q3bL8T552wCAAhewU9/fB8uv+L3wSs5/Od3/zeKtgBS/fj4
      h/8Apjq9Zk0RAEEQRGMwxliLBaA+hOCoVGyYpglFYbM+TgJAEATRGIwxFuurp6KoSCbVdh+D
      IAjihIQmgQmCIJYoJAAEQRBLFBIAgiCIJQoJAEEQxBKFBIAgCGKJQgJAEASxRCEBIAiCWKKQ
      ABAEQSxRSAAIgmgKY8VRHJk83O5jEAtAAkAQROTY3MbfPngj/u7Bv0bJLrX7OMQ8xNoKgiCI
      zqRkF3Fo/E0AQMHKI6kn23wiYi4oAiAIInIsbgVvV5xKG09CLAQJAEEQkWNVXfQtEoDYQgJA
      EETkFO1i8LbNaW1rXCEBIAgichzuBG9TCii+kAAQBBE51RFAxSm38STEQpAAEAQROU5V2qfC
      KQKIKyQABEFETqkqAqAicHwhASAIInKq8/6UAoovJAAEQURO9UW/TBFAbCEBIAgicmwx1QXk
      UBtobCEBIAgickpWdRcQRQBxhQSAIIjIqU4BURdQfCEBIAgicqgI3BmQABAEETnVd/3VU8FE
      vCABIAgicqzqFBBFALGFBIAgiEiRUqLikB10J0ACQBBEpAgpYE/bB0ARQFwhASAIIlJcAZjq
      /beFDS54G09EzAcJAEEQkSKlgC2mBEAIASFFG09EzAcJAEEQkTIzBWRxC1xQJ1AcIQEgCCJS
      uBTTCr9CcAgp23giYj5IAAiCiBQpxbTef1vY4JJqAHGEBIAgiEgRUsCpqgFwwSGoCBxLSAAI
      gogULjisqi4gRzhUBI4pJAAEQUSKm/+fyvk71AYaW0gACIKIFH8GIG10Be9zSV1AcYQEgCCI
      SLG4O/lraiZ01QCAaYNhRHwgASAIIlKK3jKYpJ5EQksAID+guEICQBBEpDje0JemaDA1EwAJ
      QFwhASAIIlL8CCChp6CrOgBMawsl4gMJAEEQkeJf7N0IgFJAcUZr9wEIgjixKNl+DSAVeACR
      JXQ8IQEgCCJS/Lt9UzNhc4oA4gwJAEEQkTJdACzvMYoA4kgbagAShXwOjpiaFLStMoaPHMGx
      kbFgfpDbFoYGBzEyNtn6IxIE0TB+z7+m6NQFFHNaGgE4VhGP/PwB7H70cVx93fU4bU0GY8P7
      8d3v3Y2egQHkRo5iw5nvxMUXbMEPb/sWCkYGuZHDeNf7rsYZG1e38qgEQTSIXwNIGSnYwo0A
      qt1BifjQUgHIjw1D6VmDc7eeBM7de31FS+D/+cjHMdCbgZUbwv+67SGcvU7FmNmPT15zBSaH
      9+GOn+7GGRs/3MqjEgTRINUpIFP1IwBKAcWRlgpAz4oNeNeKDbj/0PPBY93LVwIAyoUJ3Hn7
      f2Lb9ksxPnYc69dtgsqA7uWrweCGlEII2Pb0VXOWZYEgiPhQrLgRAJMKFKgAgEKlgGKx2M5j
      EXMQiyLwwddewPd+cA/e8d4rsX3bKdjz7CNgjHkfZVAUt1TBGINhGMHXcc6hqmobTkwQxHw4
      0r1J60p0QcB1AeXgSCaT7TwWMQdtF4DC2BC+/6OH8OFP7sLqvgwAoDvbgyP7DkJiK0q5EQjH
      9RKfEoUp5nqMIIj2UeF+CigBU3NTPxWnTH+rMaSlAnDkjVfx1Euv4bXXD+GQ8wBGDm1AnzqC
      MmN4/Fc/BwD0rT4FF5yzCfb9u3HXPSqO7H8FZ739slYekyCIBpFSwqqqAfhuoBanVG0caakA
      dPevxJlnpnDmmWeCMQbdSCGbOhUfXXMa/J3RZjINpibxkY9/AvveOIBtW7diw3rqACKIToAL
      HpjBGZoJw2sDtRwSgDjSUgFIdnVjXVf3rMfXdmVnPWamMjh967ZWHIsgiIjgksPhDhgYDNUI
      5gAsmgOIJWQGRxBEZHDhwBEOGGNuG6g/CMapDTSOkAAQBBEZbgrIdiMAzYShGmBgsLlDe4Fj
      CAkAQRCR4QjHtYJgDAktAVXRwBiDlAJckgDEDRIAgiAig0sOLhwwALpqwNQSUJgCW9i0FziG
      kAAQBBEZQgg4gntFYB2aooKBQUgBQSmg2EECQBBEZHDhuBEAc2sAumqAMWVaeygRH0gACIKI
      jLJThoQMUj+GqkNhjAQgppAAEAQRGcEuAG8ZvF8EphRQPCEBIAgiMgIraM8GeioF5FAEEENI
      AAiCiIzqZTAA3FZQpky1hxKxggSAIIjIcIS/DtJ1mWGMQfXe9j9GxAcSAIIgIqNo+RFAOnhM
      U9x6gE0poNhBAkAQRGTMjACAqXRQyaKNYHGDBIAgiMgoejWApHfRBwA9iAAoBRQ3SAAIgoiM
      6oXwPv5OgApZQscOEgCCICJjqg00ETwWWEI7ZAkdN0gACIKIDCcYBJuqAejeUBhFAPGDBIAg
      iMgI5gD0qRpA0nubtoLFDxIAgiAiY6oGQCmgToAEgCCIyJirCExzAPGFBIAgiMjw7/KNKgGg
      CCC+kAAQBBEZC6eAqAYQN0gACIKIBC54cJc/bQ7AcwalInD8IAEgCCIShBQQUkBhSjD9CwCG
      ZgCgCCCOkAAQBBEJDrfBBQdjStD7DwBJPQmAagBxhASAIIhIcIQDLrm3CtIIHg+6gGgfQOwg
      ASAIIhJsYUMIVwCqIwC/IFzhlAKKGyQABEFEgs1tOJ4AzN0GSgIQN0gACIKIhOoU0LQisGqA
      gQU1AiI+kAAQBBEJXDgQngBUm8GpigqFKZCQJAAxgwSAIIhIcIQDLjgUxqBPKwJrUBR12pwA
      EQ9IAAiCiISSXQIAmHoSCpu6tGiqDpWpkFKAS4oA4gQJAEEQkeDvAtCr9gEDbgSgKgqEFNQK
      GjNIAAiCiAS/y8eo8gEC3IUwClM9AbDacTRiHkgACIKIhLmWwQCAwhS3CCypCBw3SAAIgogE
      e451kIA7CawqKqWAYggJAEEQkTBfBGBoBlRFA5ecpoFjBgkAQRCR4Hgbv7SqITDATQGpiup+
      DqetYHGCBIAgiEgoWl4EYKRmfcxQfUM4KgLHCRIAgiAiYa5lMD6+IVyZBsFiBQkAQRCRMNUG
      Or8A0FaweEECQBBEJMxXAwAQ7AewKAUUK0gACIKIhPm6gIBqS2hKAcUJEgCCICKhaBUAzFME
      pp0AsYQEgCCISFioBuBHBX6UQMSDNgiARCGfgyNk8IhdKWNocBATuULwGHcsHB4awsh4rvVH
      JAiibvwhL1NNzPpYsBaSIoBYoS3+KdHhWEX86qEH8ctHf4Orr7sep63OwKkUcMe3vwWtazmG
      B4/ggx+9Fuv7U/jRbbcip6WRGzmCHb9/Nc44ZXUrj0oQRJ34HT5ztYH69hC2ICuIONFSAciP
      DQPZVThny0ngjhsBvLnnOWj9p+O//cG7cXjvk7hn96/x+7+zDqPGcnzymisxObwPd/x0N844
      5cOtPCpBEHVgcxsWt6AwJbjbr8aPCigCiBctFYCeFRuwY8UG3D/42+CxsaNHceqWcwEAAyef
      Bvzi+xgZTWH9us1QGdC9fDUY3LsGIQRse+oOYub7BEG0h4pThhQCjCmwLRulUmnax5l0s82l
      SnHWx4j20VIBmAshBMCY954CBYCQEix4jEFR3BcPYwyGMbVqjnMOVVVbel6CIGbjVGwISGiK
      inQqjURiehSQTrhFYAE+62NE+2i7AHQvX4YX9g8Cm9dicvgAKsnl6OnuxhOvH4TEVpRyoxCO
      AIAqUZhirscIgmgtNrcgpYDKVOiKNuvvMqEnAQAlu0x/szGipQJwZP8ePP3Sa9j7+iAO8Qcx
      cmgD3nbWWXjo4f/A/VoRrz37BHZc+XGsWJuFdf/DuPteDUf2v4Kzzr+0lcckCKJOLG5DSAld
      VeecBDZV0/s8qgHEiZYKQPfyAWzblsC2bdvAGINupGCmevHRT16LNw4cwluu/gROWj0AAPjI
      xz+Bfa/vx+lbtuCUk9a08pgEQdRJxSlDSA5N0aGrswVA1zwrCIesIOJESwUgmenB+kzPrMfT
      2WXYdsayaY8lUhls3XZGq45GEEQIuOCQUrrrH5XZdTk/AqhwsoKIEzQJTBBEaNwIQEBVVGjK
      7PtKfzaA3EDjBQkAQRChsbgFCQld1ecUAF3VoTAFXHDaCxwjSAAIggiNP+Clq8Y83XoKFKZC
      AuCC1kLGBRIAgiBC4/v8G+psGwgAQWpISokKFYJjAwkAQRCh8XP7CX3uIS+NaZ4fkIRNraCx
      gQSAIIjQlBzX3iExhw8QMCMCoK1gsYEEgCCI0FRst71TV405Px4IACR1AsUIEgCCIELjF4GT
      c6yDBODOB3hFYIeKwLGBBIAgiNA4ns+/rs49W6oqXg1AUgQgrSJE7nC7jwGABIAgiAgoeqse
      54sAqlNA5SW8GF4KB+UHv4jif34MYuJQu49DAkAQRHgqwTawuYvAClMCj6ClPAgm88fg7P8V
      ZO4w+ODT7T4OCQBBEOGpLLAO0kf3XEKXcg1ATB4CrLz39lCbT0MCQBBEBFheWkebpwYATKWH
      SlaxJWeKI+LYHkC663DF5GCbT0MCQBBEBPgRQEpPz/s5QQpILN05AH7sleBtSQJAEMSJQC0p
      IP9jS3kxvDj26tTblAIiCOJEoOKlgBYWgIT3uSeGABwr5LF/bLTmz5eV/LTOH1k4BtnmqWgS
      AIIgQuNf1I0FBMC3iXZOgC4gLgS+88yTuO2ZJzFZqa2tVYzuA6wCoOqAagCCQ+aGm3zShSEB
      IAgiNBW+cBsoACQNtwjszwx0MiXbxrFiARZ3wIWo6Wv4yOuA5FD6TwPrWgFIDlk41uSTLgwJ
      AEEQobC5DZvbUJkarH6cC18cToRJ4LxVgZQSCU2HuUDnUzXi8LMAAHX12VDSfYCUbR8GIwEg
      CCIUrg2EhKIoUOZYBuOjeykgWziQXitkp5K3LAgpYWoqdHX2DuS54Mf3AADUlWeAZVcDaH8r
      KAkAQRChqDgWIAFN0edcCO9jnEB7gSfLrv11UjOgKYtfRqVTgRjZBzAVyvKNULpWuo/nqQZA
      ELMYPDaJZ/ceafcxiBoo20VISGiKBpXNLwAnUhdQ0XYL2V3m3CswZyJGXgOcMlgiC5ZaXhUB
      HG5rNEQCQMQOLgT+53/+F/7ujl/hzeGJdh+HWATf2kFTNagLRQDergCLVyDR2SmgCS8CyJrz
      F72rEcf3AFKAda8DS/ZC6VnnPj45CMjaisjNgASAiB22IzAyUUSp4uDYeKHdxyEWoWSXIKWE
      oRpBq+dcGJorAJ1uBielRN5y+/ezicUFQEoJftSdAFb7N4MxBSxTlQIiASCIKSq2Ay7cO8Ri
      pbMvFksBv69fZSoUNv8lJfACskvo8AAA+YqbxsoY83c9TSHBh18EACgrtrn/JnsBLQnYJcjS
      WLOOuSgkAETsKFUcONy9K8oVl65vTKdQckqQkNBVA+oCEcCUG6jbNdSpSAA5yx3+StciANxy
      awAAVE8AoJpgqV73+XLtq3XV1sA6AyklXnnlFdx///3Yv38/OOcwTRNnnXUWLrnkEgwMDER9
      TmIJUbF5MFxTsZaudXCn4Hf16Kq+cA2gyguocy//ACBRsNyop5YUkBg74FpAmxko2VXug5oJ
      pWsAfHIIYvwA1FVnNvPA81K3ADiOg1tuuQX5fB47d+7Exz72MWiahnK5jGeffRZf//rX8e53
      vxsXXXRRM85LLAEsm0N4KaBCmVJAcacWI7jqj3d6G6iQQMGrAXQZxuKf7xnAKb0bAMN1S2WK
      Cua1goo2toLWLQDlchnvfOc7sXXr1qD9SUqJZDKJnTt34l3vehd++9vfRn5QYulQLFtBDaBQ
      phRQ3LEc93dkLDAFDLgRgsIUcMnhCGfBaCHOFCwLXAoYqgqjhilgfvQlAIDatwmsKkXGMisA
      AHKyffuB664BdHV1Ydu2bWCM4eGHH8b+/fvx9NNP47rrrsPdd98NXddx7rnnNuOsxBKhYvHg
      7XLV20Q8sbhvBLfw3TADCy76/hL5TiTnmb+ldAPqIkNgUgqI43sBAMqKrdM+pvSsBwCIiUNt
      mwUIVQTevXs30uk0vvvd7+Lmm2/Go48+ikqls8M7ov0Uqjp/ckV6PcWdku1Nxc6zEN5HYQp0
      xRWJit25v9cpAdAXnwJ2yoHfjzpw+rQPKV1eBFAcAdokiKEEIJlM4he/+AWEEOjv7wfnHEoN
      Y9EEsRD50lTap2JTBBB3atkFAACKogZbwSq8NgvlODLp3eR2mSbURaaAZeGYu/lLM6H0njTt
      Yyy7JvgcOO1JdYa6Wn/0ox/FxMQEdu3ahePHj+OSSy6BrutRnY1YohSr8v7VYkDEk1qLwApT
      pgSggwvBfgE4qeuL2kDwY64BnLJsIzAjQlIyqwAwyOIopNMeQQwlAD09Pdi4cSMeffRRGIaB
      np6emnwxCGIhqvP+VASOP/7FXFMWvvlzBcCY9jWdiL8ApttMLvq54pg/AfwWYOaQnGaCpfsA
      yLbtBw4lALfeeiv27t2LF154AV1dXfj+978Px6G+bSIc1Xn/YtnueOvgEx1/GUzKWLgGwFhV
      EbiD7SCCFlBz4aK3lBL88PMAAKX/LbNvjqssIUSbhsFCCcD+/fvxkY98BH19fWCMoVwukwAQ
      oSlVpl5DXEhYDtUB4oqUMujrX2gdJOAXgTs7BSSkDCKARY3g7JJbAGYM6sozZn+cKVB8T6A2
      LYhvaBLY5x3veAduvPFGDA8P4/Of/zxOO+00mGYt3hgEMT/V/j9CSJQrDkw91EuVaBIScqoG
      oC58QZxWA+AdKgBCoORZQWcWEQBZPObaPKgGlN6TZ32cMQaWae9imFB/VZdeeinOPPNM7N27
      FwMDAzjttNOoBkCEJl+VAhJSomw56G7jeYiFsXjtRWB/VqDSpqJnWLiUNU8B8+P7AGGDpVeD
      JeZ+BfsRgGhTBBAqBfTNb34Tqqpix44dOP3003HzzTfTHAARmsLMCID8gGKLmwJyL4iLCQCA
      oAjcqZbQtuAo2hYYgPQiAiCOug6g6uqz5v0cfy+AzA1Dita/zhs2g/vVr36Fl19+GQ8//DCW
      LVuGfD6P4eFhmgMgQlM9CSylpFmAWCOrIoDFjdH8zynbnRkBlG0bQkokNA0JbeGuJ370ZQCA
      snzTvJ/DMqsApkCWJwCrCCSykZ53MRpOAQ0NDSGfz+Pw4cMoFAowDAOf/exnaQ6ACAXnYlrr
      JxeSWkFjjJTeTmDUFgGYgSNoZwqAPwSW1BdeBSntMsToGwAY1FVzFIA9WLofYAyyNAZp5cE6
      QQAYY7jqqqvwtre9DQMDA0HhlzEGKSXVAYiGqXhOoLqmQNdUFMs2+QHFGDktAlhcAIwgBdSZ
      op633J81a5pQFhKA/DBk8TigJ6D0nDTv5ympZe5iGCvvRgHeruBWEaoI/POf/xyPPfYYAIBz
      jpNPPhl/9Vd/BVXtTJc/ov2ULQdCSmiqgmzKRLFs0zRwrJlqA60tAujsxfCTZTdy6TJMLHSb
      y0dfB+wSWHYNlEUu6krPeoijL0FMDkId2BLhaRcnlABce+21+MQnPgEAmJycxL/8y7/Q3T8R
      ikLZgpSAqWvo7jJxZDRPS2FijM3twNp5MTtoAMHOYLsNBc8oKNi12UAI3wJ6xenzfo4Py6wE
      jr4EOdH6VtBQApDP51EquU6AnHO88cYbKJfLSKUWnggkiPkoVdwIwNBV9HS5d4u0FjK+2Ny9
      kKtMq+nmb2opTGfWACbK7vWue5FNYHzYFQClf/E7eiW7GhztaQUNJQB33303nnjiCQDugMSO
      HTuQqGFFWjVScOx/7RW8vOd1dA+swXlnnwVTVzE2fAiPPfE0MsvX4vy3vRW6St1FSwHL4ZBe
      Cqgn7b6WSlZntgwuBfxirq7qYAsshPdJeYZoRbvY1HM1i8my5wS6wC5gKRyI0X0AAHXGDoC5
      cE3hOlAArrnmGlx55ZXB+4qi1J0CGtr3W/zkwWdx2SXvwIGXnsCP7ivigzvPwHdu+0+8473v
      x6EXH8X9NnD5O88Jc1SiQ8gX3RSQoano9iIAWgsZX0rehTyhJaDWIACaNwnscKfjGka4ECj4
      ReAFbnRlaRyyNA7o6WDpy0IwfxZgcqjl/yehBOB73/sefvrTn0LT3Kc55ZRTcMMNN9RVBC7m
      J7DqlE045ZQN6NGL+NGvDuLw/tewcst2vHXrZmw5aTn+9Ts/Bt55zpymYGQUdmJR8obA0gkd
      6YR7sSBDuPjiD3S5Jm9s0d9TkALiFoQUUMLNorYUR3BUvJRXWjfm/Vn5sVcAqwDWvRYs3b/o
      /wlL9QOKClkeh7QKwd7gVhBKAJ555hl8+ctfxtq1axt+jlNOPw/3PvA/8Y09z2Do4BD++H98
      DvlDTyHr7cs0EmmYntpKKWHb1VOiYtr7ROczkXfvKHVNgcLcP5x8sYxyuTNzxic6E4VxAO4+
      YKtiQTqLXOyEe8Gv2GWUSqWO2gtcsCyULBsMQIIp874mxfCrACSw7FSUHQksUu+QahpQDEir
      gPLkMbCu1v2fhBKAM888Ey+++GIQshiGETiD1spLTz6MVWddhD/YeT6OvvESfnLvvbjonPUQ
      BVdpheDgXuVdUZRpZnOO4wTRB3FiUPEuIN1dCSzLundCFVsgmVzce51oPUx1/9Z1VUcqmYK2
      yJL0TCoDAHCkAzNhBuZwnUAZgCU4GGNYlsnAnOfaUxp5BQKAvmILzBpet9JYi4KehCyNwRRF
      qC18rYe+et5333148MEHAQDr1q3Dn/zJn9SXAposoLdvPVRVRaanF+WJSQwMDODeX/8XKm/f
      hqP798BI9YQ9JtEh+Pn+rqSBlJcCohpAfCl7d7eGZtZkA+MvjeGCd1xar2RbcIRAUtPnvfgD
      Ux1AtbSAAgBTDbDUcsjSKETucE2F46ho2AsIcIvA11xzTagDbDv/nfje9/4P/uOFx1HM57Hz
      8iuQXbEaZ6x7Dv/2b/8O2xH44FUfDvU9iM7B9/1JGBpMw315khlcfPG7gAzVgFJDEdivAdjc
      goBo6tmiJufZQCxkAifLE5C5IUBLQFl+as3PzbKrgJG9kLnh0Oesh4YE4De/+Q2OHDmCYrGI
      J598Mnh8/fr1+LM/+7O6IoB0zwA+8d8/BcuyoWk6VK/dc8elV+B3y2Woug6d0jxLAiklcgXv
      jyxhIJty/9AmC505NboUqHUhvI8/CWxxq+MigHwNHUD82B6AO2A9q8CSvTU/t5Jd484CTBwM
      e8y6aOjKunXrVmzatAmKomDHjh3B47quN+QGypgye5EMY0hQ3nfJUfLu9ruSOkxdA2OAwwU4
      F8HNAREfal0I71MdAUjZWRHAWMltUFgoAhDH3QKwkl0NVkc3j5JdAwCQucOhzlgvDQlAJuMW
      cgYHB/HYY49BCPcXuWzZMlx00UUd1dtLxAvf9sHUNWiqAlPXULEdFCs2MinaNhc3/DZQ3+d/
      MabaQG2IDhMAfxNYT2LuG1MpJfiR3wIA1IH68vgs628Ga+0wWKhbqq9//esYHx+HYRgwDIOs
      oInQ5Dzjt0zKgKoyGLoKSJAhXEzxB8GSem32L37XDxcOuOgsl9fJxWoAUkAcexUAoPRvruu5
      fcM4mR+GbOGynFDJ9TVr1uDCCy/Exo0bozoPscQpeBf6rqQBXVWR0DVMooIidQLFknpTQAwM
      hmrA4lbHbQXLecvgu815UtN2ycvhM6grz6zruVmyBzDSkE4FsjQK1rUi5GlrI5QA9PX14cYb
      b8SyZcsAACeddBI+/elPkx000RASUx0/CUODojDomj841Fl3i0uFeovAYAy6JwCdtBheSBkU
      gTMz65Ue/PgewKmApfvrKgADAEtkwfSUuximcBzoBAF47rnn8Bd/8RdYvdoNXzRNo5WQRMNw
      LlD0rCBSCT2oAQBArtg5F4ulRCMRgKmZKFj5YI9AJ2A5DizOoTCGxDypbnHsFQBw2z/rtHNg
      ZhYskYUsHIMoHEOrbqFDXa23bNmCo0ePolQqoVQq0UJ4IhRly/F2AajQVRWaqiBhugJQolmA
      WDIlALW5APspIPdrO8feo8JdAVAVBV1z1ACklFMW0H2bG2qEYRmvDtDCQnCoCCCVSuGhhx7C
      Qw89BABYu3Ytdu3aRSkgoiH8NI+uqVAU9w8oobuvJVoKEz+EFLB47fuAAXdtrBHsBe6cG8aK
      w2FzDk1RkJxrGbywgwig0a1eSvdacAAydyTESeujbgEoFosYHR3F2rVr8aEPfQgf+tCHpn1c
      Som9e/di06ZNkR2SWBr4aZ6k6baAAkCX1/pJS2Hih5Ai2O1r1FoDQNVWsA4qAh+n9E8AACAA
      SURBVOetMhwhkNKNOW0gpFWEmHQ3eqkr518CvxDMM8AU4282ftA6qVsANE3DHXfcgd7eXlx0
      0UVYt24dNE1DqVTCK6+8gnvuuQenn346CQBRN/mSe0FIGBpUz2Qs6aeAKhQBxA0pRXARN9Ua
      U0CsKgXUQUXgojcD0GWac6Z3ZOEYUMkBiR53xWMD+MNgIs4RgGEY+MxnPoMnnngCt99+O44c
      ORIUfjdt2oQPf/jD2LBhQ+QHJU58/A4gQ1Oheq+ppOcHVChTBBA3hJRBBFBXG2iwFrJzBGDc
      WwU5V/4fAPjQMwAAdfmpQIMOp8q0xTCipg1rYWmoBqBpGs4//3ycf/75sG0blmUhkUhQ7p8I
      hZ8CMg0NqlcD8Kd/yRE0fojqCKCeGkAHFoELFVfo5psCFqOvAwCUFac3fOFmiR5ANSGtPGR5
      0p0NaDKhJUbXdaTTabr4E6Gp3gbmh9l+CqhQ7jzzsBMdIXjdXUDu53ZeETi3wAyAlGLKAqL/
      tIa/BzO6wBJZQHDI/NGGn6ceQgnAnj17kM/nozoLscSpWFNW0D7+TgDL5qDrf7yQkODS826q
      pwjspUg6qwjsNSjoc6SAKjnIycMAU6CEEAAYabBENyA5ZL41dYBQbaBvvPEGvva1r2HlypV4
      z3veg7PPPhvGAk55BLEQuZJ3l5Waeg2lTG8pTMmCkBIKyGgwLjSSAgKAlOcb5PsIdQI5b/3j
      XCkgkRuGLBwFjC4ovSc1/D2YqrsWECOvtcwULpQAvOc978GFF16IPXv24Gtf+xrGx8dx+eWX
      46qrrqIVfkTd+F1AXYkpAehKum+Xrc7bIHWiY3ELjnCgKlrNbqBAVQQgOqOzS0qJvOV5VJmz
      f05x7GUA7gQwq0MI50LJrnZnAbyW0mYTSgAOHTqEu+66C88++yy2bduGyy67DE899RTuuuuu
      WfMBBLEY1T5APv7bFdsBXf7jhcPd35emaGB1RGZTNYDOKAKXHQcWd6DOMwTGj3oDYHU6gM4F
      81tBJ4cgpWy6tX4oAXjkkUewbt06XHPNNeju7gYADAwMYGiotZ7WROcjpQy6gFLJqbustBcN
      FCs2pCAJiBOBEZxqop7MnO7tBfYFJO4UvV3AuqIiMUMApJQQwy8AAJTl4WeffFtokTsM1x4x
      xgLwwQ9+EM8991ywFjKbzeLcc8/Fli2NjUITSxcpp+weupJTf2Rp7+1SxYGgFFCs8HP4CT1Z
      VwRgdFgEULJtOEIgbWizp4ArOYiJQYApoTqAfPxpYJk/6v5RNLnkFUoA/uM//gNDQ0M4fPgw
      tm7dikKhgHPPPTeqsxFLCCElLMftAvIdQAFAYQyGpsJyOIplG0mTlg7FBdu7g9fV+i4jnVYE
      LlhuA0JS05Gc4QQqcochS2OAnoay/JTQ30vpXgswxfUDEjagNLe9PlQb6PDwMP74j/8YW7du
      xac//WkUi0U4TmeEdUS8EEIGw17VXUCKwoJWUN8qmogH0yKAOnLVeoe1gRa8AvDMiz8AdwOY
      sKFkVrotnCFhejLYJdAKU7hQArBy5UqMj4+jUqngtttuw/j4OHVqEA0hhAwu8F1VNQA/AgDI
      Dyhu+DYQulJf67efAnI6ZC3kpL8JbI4WUH58DwBAXXVWNN9MNQMBEBOHonnOBQglAB/72Mdw
      8skn47rrrsPAwABuuOEGmPNsyyGIhRBSwrJnD4IpCps2DUzEh3LVNrC6uoBU9xphcxtcxl8A
      /Aigy5h9bRPeBLDSF5H5pWqApQfc527BLEBDNYC9e/fijTfemPaYoigYHBzE6tWraSsYUTdC
      SJS9O3w/5QP4AuClgMgPKFYEAqAn6koBuREAgyMcCMHRsvVXDeIbwWVn3NxKqwgxdgBgDEqD
      OwBmwhiDkl3l7QU4HMlzLkRDAjAxMYFDh2aHJ7QRjGiUQtmChOv+qVbdQCiMBREBCUC8qHcd
      pI87N+B6CXVCZ1fB9wFKTPc7EpNDkJUcYGahdK+L7Pux7Krg+ZtNQwJw3nnn4bzzzgMAjIyM
      YHBwEKeeeioKhQLd/RMN4W8DM3QV1TeTjE2lgIpUA4gVFbtqDqAOfMGwhQ3RASmgSe/GdqYV
      tBg/APAKlN71YOnlkX0/fy+AzB2GFBysiZ1Aoa7W9957L26++WZ89atfBQD80z/9E4QQkRyM
      WFr4Q2DppAFlRjrB7wrKlyjCjBOOcCMyvU7/e0NzB8ccHv8isJASOa8InJ4pAP4AWP+WSL37
      mT8MVjgO8ObWvUKd+uGHH8aXvvQlbN68GclkEuVyGZZFhTqifoJtYLo2K5/szwWUrXhfLJYa
      Ra8NNOn19deKqbpFY0fEvwhccRw4QkBTFKT16ZEOP74XAKCuOD3S7xlEAIVjQJNbZUMJwMkn
      n4wf/vCHGB0dxQ9+8AMkk0lyAyUawvcBSprarAggmAOgGkCsaGQXgPv5fgrIiX3GIG9VIKWE
      qWnQq3aeSCkgjnomcP3ROh+wZC+gJwG75A6ZNZHQbaDd3d3o6+vDxMQEPvOZz1ANgGgIv8Uz
      aeqY2VBCayHjSaNFYH8OgAsn9hGAPwWc0DSY1UuvrIJ7cdZMKA3uAJ4Xpri20Gh+IbihIvCB
      AwcwOOjalfb19eEd73gHAODgwYPo6elpuoMdceJRKHm91kl91usnmzanfQ4RD6yqOYB6MVQD
      ZaccDJPFlbxVgQSQ0PRpEYDIHwUkBzO6Ab2+CGhRFBVK1wD42P6mt4I2JABDQ0N45pln8PTT
      T+PUU09FNptFqVTC6Ogotm3bRgJA1E3Z6wIyjdkvSf8xyxEQQkJR6PUVBxpNAflfU3bKsV8L
      WW0DUX1dk8VRQAiwRDeY0RXp92RMgZJdC47HISYORvrcM2lIAPyF8DfddBP+6I/+CAMDA5BS
      4rOf/Sxs26ZpYKJu/C6gTHJ2Dcm3hihVXFdGo8kGWcTiOMIJLt6GVn/dz+iQvcAT3hDYTBsI
      WTgKQLo7fOtYhlMrzEsriSb7AYVyA924cSNuueUWvPe978Xrr7+OSqVCNQCiIfz0zlxun1NL
      YTg4F4BGAtBupBQQUoCB1T0HAHTOUpj5ZgBk/hgAgKWWNyXj4e8FkBODTV0ME+pq/Yd/+Ic4
      55xz8MADDyCXy+ELX/gC9Dkc8whiMfwuoHRi9uvHjwoqtgNOS2FiARc8mAMwGqgBmB0QAciq
      GYCsOWMKuOAJgDe1GzXBNHBpDGji/1GoCMAwDFx22WW47LLLojoPsQSRcsoKOjVHCsiPACyb
      Q5AAxAIuORzugDEGo4EUSLAVLOZ7gUu2Z1FeldaWUgbFWZaMbgK4GiWzCmAKUB6HtAtgegJS
      SjhcQI8wAo4kX0MW0EQYuJBBBNA1RwTg1wCKFRsOj3ff+FLBjQAcAKyhCKATtoJJABNl93yZ
      GRGALI8DABRvg1fUME8AZGkcqOQgpcTjLw/iplsfRj7CbrhQApDL5fBv//ZvuPHGGzEyMoKf
      /exnUZ2LWEJwIWA77oV9ri4gXVOhqwqkRGAZTbQXRziwuAXGgKQ+2yd/MfzOoTingACgYLsX
      22lOoFJATHoRQFfEMwAeTNU9W2gJUTgOISTu/OVLeH7fMJ7fNxzZ9wklAN/85jexbp3rgrds
      2TLs3r0btk3TmkR9OI4IIoC5uoCAqeIwbQWLB0IKCMnBwKAp9WeSEx0QAZQdGzbncyyDl5DF
      4wAAlu5r2vcP9gNPHIQjRLAQqTsdXZdlKAGYnJzE9u3bkUgkUCqVUCwWYz/aTcQPh4sqK4g5
      mggYaC1kzODCrQEADEZDXUDxjwAmvfRPQp9uUQ6rANglQJva3tUMlJ71ANzNYI4jgkn4bDq6
      wbNQReAPfOADuOmmmzA0NIS//Mu/xM6dO8kLiKgbLiRsh4Nh+jIYHwZMWUKTH1AssBwLXHIk
      NKOhOQA/anBivBfYHwJL6Tq0KgEQ+aMA4A6BNWEGwMdvBRW5YThcBK/9KCOAUALQ19eH66+/
      HoVCAZlMBv39/TQFTNSNw4Wb22dAaq4IAFOdQAUSgFgQWEErjbV9Jw3XQdR3FI0j/iawhKZP
      iwBk3s3Bs0RPU4bAfPxhMJk7jGLFRsXmMHQV6WR0rfahUkA/+clP8Pjjj+OUU07BwMAAXfyJ
      hvC3gaUTxrw2D74fUJQdEETjTE0BN3Y32gltoEUvAkgb5jSHWn86lyV7gTp3IdSDbwstcoeR
      L7hCmU7ode1fXoxQEcCOHTvwjW98A0II9Pb2IpPJ4OyzzyYhIOqi4vn8m/rc/c2MsWAnAKWA
      4kHJu3NP1bkLwKcTJoH9KeBZu4ALXgE42dvUax1LLXcjjEoe4yNu2qk7nUCE1/9wEcDo6Ci2
      b9+O4eFhvPLKKzhw4ADNBBB1M+lt+sqk5r+b9GsDJSoCxwLfxbPebWA+/tfZMa4BTHpTwD2z
      fIDcKWCle01Tv7+S7gdUA9IuYHzEFZ1s2ozy+h8uAnjrW9+KzZs3B+8bhkF3/0TdTPkAzf9y
      7Ep4w2AUAcSCku13yNQ/AwDE3wxOSon8HMvgpZSBRz9LNa8FFACQ6AYz0pD5YYwOHwKgozcT
      rfV0KAG477778NRTTwEASqUSstksvvSlL0FV6xtVloJjbHQUtmRYtmwZdFUBd2wcPz4CI9mF
      3u5o7VaJeLGQD5CPX/gqUAQQCyzu1QAaaAEFgITmCkdcU0BcyqAGkKr2N5McsjwBYKpI2ywY
      Y2DZ1ZD5YUweeR3AW9CViPYmO5QAXH311bj66qsBAOVyGX/9139d93NI4eD+H3wPBydtpBMq
      1m85FxecdSp+/J1bMc4SyI8dxUUf+DC2bmiO6RLRfgrePuBUYv6OCr8GULHiWzRcSljBLoDG
      umD8OYByTAVASIGiN9TaXW0Dwe1gTWPTIwC4raBi6BlM5D1Tuq5orfZDCcBrr72G48fd3JRl
      WTh8+DAsy0IyWXtYePzgHhwsJnDttddA9YTt+IGXcFzrxR/9tw9i8shr+O49u7F1w9VhjkrE
      mHwNKaBMyr3Q5IrUBRQHSrbbItmIDQQA6KoGBgYhOLhwoDYwTdxMuJCBEVzaqLrochuyNAqg
      eT5A1fizAJPSLbZ3RzgEBoQUgH379uHll93FyIwxfOpTn0IiUd8Bjw4eAFM4/vd3boWW7MaF
      Oy/G+NgITlr/FqgM6O5bA8jHAABCiGlWEzPfJzqTQslPJzCUSqU5P0dl7oR5sWyhWCxSranN
      FMoFAIAKbd7f2UI4NgcYAxcchWIBehP76RtholJGhTtQGYPCefAzytxxdxJY0VFhKaCBn70e
      RGIAQgITwk2Dpw2lof/v+QglAP39/Xj729+Ori73cI8++iiEEHXVAIQQMLt6cPmFl+LogRdx
      x50/wCXnrsfUZnAWLJlhjE2bNOac111vIOJHyWsDzXYl572B6EonwQA4QkLVDRi0FKatcLip
      uJSZrvumDwCy6SxUpsCRHKquImFEvFc3JCNeAThtmEgmk8EkMJ8oogSApZYhkUw1dQ4AAPiy
      tShDRUXqYAzo7W7s/3s+GhIAKSWklHjggQcwMDCAVCqFSqWC22+/Heeee25dF+V0dy+0cY6e
      bAbZLWcj+dgzyGZ6cPSNQ5DYilJ+FNx27/7muuujO8HOJx8shJ+/wNWVMMAUBtvhcLgIagJE
      e/AHuHRVb+hv0LWCYFObxWL2d+xPAacNAwpjwfmkPwTWNQAoatPPzTIrYStpVKR7jkzKjEcR
      +IYbbsDzzz+Pl19+GaZpQgiBCy64oO59wOs3nYGfP/Lv+NmDAs7om+hduwWrNmxG+YHd+Nn9
      Og6/8RLO/J33NHpMogOopQvINDQojMGyeWAdTbQP38LBt3SoF111L2iOcGI5DZwPhsAS06aA
      3V3A3hQwa/76W5bogaVnUZY6FIUFtbCoaFgAvvjFL+LOO+/Ejh070NfXB1VVYZr1q5OWyOCj
      n/gk9u3bD2XdWmzadAoUheGjH/8E9r72BjZv+gBO3bCu0WMSMUdKGfT2pxfoAkqZbghsc0FL
      YWKA375pNmoFoepgTKlaLBMvfCO4rhmzTf4UsJJujfUNS3bD0npQkQY0hSGTjEEXEGMMqVQK
      Y2NjGBkZwUknnRTqEIlUFlvPOHP6Y+kszjjrrFDPS8Qf23GN4BgDTGP+1GHS1MAYg21z2A4t
      hWk3/gCXqTaWj9YVN3XEvS6guJHzagCpGe7GwRBYV39LzsFUA4XkWnCo6E4YMOaxS2mUUDHM
      Bz7wAdx1110YGxuL6jzEEsPhAo4QUBhDwpg/BZQ0dWiqApsLVGgrWNuZmgNo7I7U1EwoTAGP
      aQrIXwbfPY8NBOtqfguoTzFzKgCgK+L0DxCyC+jBBx/Ea6+9hj//8z8HYwynnHIKPv/5z1Nn
      DlEzFZvDsjkUxpCcYx1kNaauoli2aRgsBoRPARmuAMj4pYCklMh5NYBpy+CrhsCUJk8BVzOW
      2QpgMNI9AD6hBODaa6/Fxz/+8eB9xqZaNgmiFiyHw3I4FIUhmVj45ZhJmRjLlZEjS+i24nDb
      3QcM1tAyGMC9VkwthYmXADhCVA2BVf18dgmyMgmAubsAWkRZ6wEwiKwavW9SKAF4+eWX8a1v
      fQsTExMwDANr167F5z73OYoAiJpxvKKupipILpACAhBECOVKvC4YSw0uBYSUYIxBVxpPS8TV
      EtoWHGXHAQOQqZoClk4ZspIDmNJ0H6Bqxgru6z1b2APgvZE+d6jb9R/96Ee46qqrsHnzZlx/
      /fXkBkrUje21dSoKC7Z+zUfCs4ooUQqorTjCBhcOFKY0bAcNxHcvsM35nDYQ0ioAVhFQdbDU
      spadZ7LgCmSq+CZkxPbZoQRAURSsWbMGjuNg1apVGBoaQrkcLzUn4o2/6Dqha/NuA/NJe+si
      c8X5LxhSSghJbaLNxOEOhOCeADQeAQQpIBEvO5ey48AWHLqqTksByfxRABIs0QPWghkAn9Gc
      e03NyImgCB0VoX6KnTt3wrIsnHfeedi1axc2bdoU6ZgyceJT9mwg5loGP5Mub2FMcQFL6GcO
      PYm/e+BG5Cv5aA5IzMIRDrjkoSMAf5tY3PYCF7wW0KSuzxgC8xfBrG7pefxJ+SxykQtAqBrA
      2972NoyMjGDt2rW4+eabsXLlSkoBEXWR84zgahGAlJ8CmmcpjMMd3PnsHTgw9gZeH9mLM1ef
      Hd1BiQCLW3CEA5VpQRqnEfzoIW5bwfxVkDM3gQl/GXyydekfzgXyJQsMEt1sAmJiEOqq6Oaj
      Qi+EufPOO7Fu3ToMDg7iyiuvxKWXXkoiQNRMySvodi0wBeyTWmQrmM0tFO0iGBiSDe6qJRZH
      CA4hBTSFQVMab/iI61awQpURXDWy6O0CbmEBuGQ5sG0OFRwJZkFMDkb6/KEEYPfu3fjiF7+I
      9evXY3JyEl/4whewc+dO6HpzHfKIE4eiVwPwN34thF8kzs8jABVeQdEqgDGGZanl0R2SmIYj
      HHDBoWjhagB+F5AVMwGYdxl8zvMB6hpo2VkKZQsVm0NnDrpYCdKLQqIilACcdtppOHDgAFRV
      hZQSiqLg8OHD6OnpQTabjeqMxAlMoQYfIJ8uTyTK89QALMdC2S6BMQUZk15/zaLiVCCkgK7q
      IbuA4tkGmvMaWdIzbSDyrhOo0oJNYD6ligPL4UhAIMksiMkhSK8FNwpCCYBpmrjrrruC93Vd
      xz//8z/j4osvxsUXXxz6cMSJj1/gSiywDcwnZS68F3iyPAEuOTJGtuEBJWJx/K4dLeQWLzOm
      KaDJKidQH8kdbwqYgWVat562WLbhcAFDsZFgFuTEIQASQAwE4Oqrr8b73/9+DA8PY82aNahU
      KnTnT9SFb+vgt3guhF8ozs+zFnLMW9XX28Ie7aVIYAQXogAMAJri/j7tGFlBCCkxWfEjgKoU
      kJUH7JI7A5Bs3RSwf4OU0iQUJt1CtJRRXf/DtYHu3r0bn/vc5/DFL34RlmXhK1/5CoSgHmyi
      dvwdv7V0ASW8nQBcyDkdQcc9n5ZsojvaQxLTKPm7ABrcB+zjRwAluxD6TFHhCAGLczDGptUA
      ZCXnDoIpWksFYHTSXUyzrK8f0EzAKkCWJyJ7/lACcN999+Fv/uZvcPrppyOTyaBYLMKyyKeF
      qB1/qjedXDxlkzA0qCqDwwUq1hwCUHQFoC/dGqvepYrF3b/xsGk2P4KIkxdQ2bFhOe4u4Gor
      aFmeAJwymGaCJXpbdp6JghttLevtBfNqD/5WsigIJQCrV6/GL37xC+RyOTzwwANQVZU6gIi6
      KHgh7mJOoABg6CpURQH37tJmkqvkAABdZibaQxLTqNjRpIDiWAOwHA6Lc6hMQVqvEoDSKCAF
      WHIZmNq6daRjOTcCyGQyULzuoyiHwUIJwLXXXot8Pg/GGF588UV85jOfISM4omaklMFUbya1
      uNWtqWtQFQbHEbDmiADGSiMAqAbQbMqBFXQ4AfDnACweHwEoO3ZgA5GsupkVeb8FtLXRZTAF
      nEnB/L3/H9qW90Ndtz2y529IyoaHh3H8uDsUcfbZZ+Pss92Jy3w+j/7+fhoEI2qiUmUEV8um
      I9NQoSoMFZujbM9OG0yWJwEA3S206l2K2H4KKMQMAOBuBQPc9t244K+CTGja9FWQ/jL4FraA
      AlMpoJ6uBNQ1W5Fcc06kz9+QALz88st47LHH8NJLL2HdunXIZDIolUqwbRtf/vKXSQCImrAd
      DiEkNEWBWYMAJA0dqqrA4e4ayWnPxW1MlMbBwNDTwiLdUiS6IrDnBhqjCGBykU1gSvealp5n
      wnMC7c00x2OtIQHYsWMHduzYgS996Uv41Kc+hYGBAUgpcf3118O2bZhm9JtriBOPkuXA4QKq
      WlsEoCgMhuZ+XmnGLEDFKcPiFaiKSjWAJhNVG2jKcO06SlZ8zOAmvCGwLnPGEJi/CrKFPkBC
      SEzk3f/r7nRzBCBUDWDNmjW444478Oqrr+KBBx4I6gEEUQuWzcGFuwwmodd2L+J3C+VL0wWg
      ZJdQcSpQFQ1poyvysxJThF0H6aMyFQwMAiI2i+H9XcDVQ2AAAguGVu4CLlsObIdDrWFXRqOE
      EoBrrrkGq1atwm233YaXXnoJN9xwAwyDJjCJ2qj4EYCiQNdqax5Ie/MC5RlLYYpWARWnDFVR
      kTbSkZ+VmMIf3PIHuRpFURQoTIGUElzMLuq3g6K3CKbLmLELuDgKgEHJtE4ACmULXEgkDA3J
      GgYlGyGUrCQSCVx11VW46qqrojoPsYSo2BxcSOiaUpMVBDA1MDZzJ0CukoOQAl1GFxIhc9PE
      wvgpGz+F0yiGakJVNHDBUXEqQVdQO5kou22X2aq9JtLKQzoVdxCrhdFloeTaQKRMs6Y26Uag
      De5E2wh8gLwJ31rwU0WVGRHAZHkcAJChKeCmE1kKSFGgMAYJCS7bHwFIKZH3uoCmTQEXRwFe
      AdNTrbWBKFvgQsDU1ZpvkOollACUSiXceeed+MpXvoKRkRH84he/iOpcxBKg4rVy1mID4dPd
      5f5h+t0RPmOeDcRysoFuOn4ROOwdu6boUBUVQohYLIWxBUfFsaEwhtS0IbAxwLEAzQTTW5de
      nMiXISWQSZvQ1Obcq4d61n/9138FYwwjIyPo7e3FvffeC9tu/y+S6AwCH6A68pumFwGUZwyC
      TXgC0JNs3Zj+UsVv2zTVcJ0puqpDYSqE5MFsQTsp2jZsIaArKkxt6o7bdQGVYKllYC10mfUj
      5K4abFIaJZQAHDt2DBdffDEymQxs20axWCQzOKJmgm1gdbzA/WKYbyHhM+kZZHXRHoCmYwVt
      oOEiAIWpsSoCl20bXAjoqoKkNnVTMjUE1tro0h8C6043rzYSKrF06aWX4qabbsKhQ4fwuc99
      Dr/7u79LXUBEzRTKUzWAWpmvC2i06FtBUwTQTGxuw+YWFKaEFgBDNdwisOSx8AMq2JYnANMj
      AH8XsNLVulWQAIIZgGxcBeD3fu/3sGXLFhw+fBjZbBbr16+nOQCiZvzdvvW8wP16QW7GToCx
      ousDRDYQzYULx93+xxSoIfYBA4CualAVBUIK2KL9qeOCZUECSOkGVGUqOeJPAbNs6xbBAFNG
      cMsyzetqCyUAP/vZz/DrX/86eF9VVZx++um44ooryBWUWBR/mreeFjdfAKq9gGxuI1fJkQ1E
      C7C4DSEFVEUNvRGMMQWq9xxxsIT2h8AyM3cBt2EKGGhNDSDUb3Dfvn143/veh76+Przwwgs4
      duwY3nzzTTz88MO46KKLojojcYLiRwD1dAF1BZPAUxFA2SmDCw5d1ZGiKeCmUnHK4FJAZeEF
      AABMNT57gedaBQkAwqsBKJkWp4D8GkBX81JAoYrA4+PjWLZsGTZu3IjNmzdjdHQUO3fuxMGD
      B6M6H3EC4+/2rUcA/JkBy+ZwuNtwkCtPwuYWDM0MPZxELAwXHFJKNwIIsRDeJ9gJEANDOH8Z
      fLURnBQ8mAJmnh9/q/BbnZvlAwSEjADe97734W//9m+xbt06vPnmm9i1axeGhoawYcOGqM5H
      nMAUPD+fekJcXVOgqQqEkKhYDrSkgaJVgCMcZNQsUi3s016KVJwyhORQFR16BAKge5bScWgD
      LXgt7NV7AGRpHOD+DEDrbi5shyNXtKAoLL5F4LPPPhv/8A//gGPHjqGvrw/Lly9HqVSiTiCi
      JoIuoBqN4ADA0FTomrsVrGQ5SCcNTFYmIKRA2kyHXlNILIwfASiMQWXhlz8ldM8SOgZdQFNW
      0FU2EMXjgORgyR4ws3XpxWLZhpASpu6+3ptFKAE4cOAAbr/9dkxOTkJVVaxZswa7du2irWDE
      okgpgxpApo47HF1ToWkKrDIPWkH9XcAZk2wgmo0bAQioihZNDcCzlC7b7a8BFCxXhKYZwRVH
      ACHcCeCQ9tf1MFmsQEqJpKkHFujNIJS03H777di+fTsymQyuvvpqlMtlKArZCxGLY3lGcJqq
      1HWHo6sKNEWBlAiWwvhDYDQD0HwsbkFCwlD1SGoAfhqp3Skgy3FQtFwb+Mo9NwAAIABJREFU
      iHT1MvjCMUxNAbfOrG6yUIGUbodcbAVACIFt27ZB13WcccYZOHLkCEqlUlRnI05gSpYDISV0
      VYFeR8Ro6CoMTQXnIugEGvFmACgCaD5+qiaKiz9QtRWszSmgom1DQsLUNBhq9RCY1wKabu0u
      4PG8t5gmadS0LKlRQgnA+eefj0KhgI0bN+K6667D8uXLaRsYURNlyx0o0rX6cpy6pkLXVUgA
      luNHAK4TKEUAzcc3bQvrA+QTly6gyUoZXEoYqgqj6oZE5j0biBbuAQCmBh3TSaOpw7WhkngD
      AwPo7+/HlVdeiUsuuQSpVIry/0RNFMs2hJDBHX09+OZxfg1houQKQE+LB3WWImXHjfDD7gP2
      CQSgzXMABctyc+6aHgiAlHJqF3CLbSAmi833AQJCRgBPPPEE7rnnHjDGkM1moWnN8awmTjxK
      FbfLQVMVqHVa3fpzA34X0VjJ9wEiAWg2Ze9CHdXyFt3bKtbuSeCi7TnTGjNsIDyPqZYbweVb
      IwChrthbtmzBLbfcgkKhgN7eXvT29mLHjh1UCCYWpVRxICVgGirMOnOcviFcoWSDC45ceRKM
      MbKCbgFTC+EXb7cdnSyBMaB3AS8bIyYRQM6bAq4uAEMKiNxhAK3dBSylnBoC62pu51EoAdB1
      He9///ujOguxhChZUz5A9eY4fUvosuWgZBfBJYehGDBUmgFoNr4VdEJbOAVUsRzcdOtu6JqK
      v/l/L5y3kOmngKw2F4F9H6Bus+rnEo63CwBQulpXBJZwl8EAQE+TBSDUrfo555yDk046CQBw
      0UUXYcWKFXT3T9RE4APUwLJr/2vyJQvjpTEIIZA0UkFHCdE8/HbNxaaAj08U8cbhcRweycHm
      8+8ICeYA2igAUsogApi2CtLKA04F0NOAkWnpefLl+qfkGyHU1fq2227D7t278ctf/hLpdBrf
      /va34Tjtd/Uj4k8jRnA+XSkjeA5/GXxSTyIRg6XiJzpF210In1zEFmFoJA/AtTI2FujySgRt
      oO1NAflGcMnqGQB/EUwiC6a1zt1YCInRSbfY3kwjOCCkAOzZswe7du3C6tWroSgKKpUKCQBR
      E/kGfIB8EoabTihWbIwXxyAhkTa6Al8ZonlM1QAWjraOjRUAAP296QX32frTxE6b9wHkvSng
      7ionUOktgmGJbqCFry0ppxYeNdMIDggpANu3b8c//uM/Yt++ffj7v/97nHzyyZHOAUgpIaWM
      7PmI+NDINjCfTNJ9jRXLdjADkE100zKiFlCpcR3k8LgrAH3Z1IK/l6k20DamgDDlA1RtAyHy
      RwF4Q2DK7Aig+MQTmPzJXZA82nWWJctG2XKga0rQ8NAsQhWBL7/8cmzevBn79u1DX18fzjvv
      vIb/CI8f3IMf3vNfuOaPPo60KvHyk4/hoV8/g2S2D1d+8Ar0NLkdimgdUkoUfB+gVP2/V180
      ypaDkcJxAEA3LYJpCZaXqlnIB0hKiaNeBDDQu7A7qx9JlLzUUjuwOUfFcaAwhi5zpg2E2wI6
      87omikWMfPN/AVwgdcH50Pr6IjuP3wKaMvVpLanNINSzf+tb38KPf/xjrFixAtu3b294Cxi3
      ivjxTx5AaeI4uATK44dxzyPP4SPX/nf8zmn9+Mm9u8Mck4ghZX8bmFn/PYj/NfmShcmK6wNE
      LaCtwb9TTxnzX9iFkDjmRQCrli/soKmrOhgYhBRtWwzvp38Smgatas2lyHm7gOewgXCOHoUs
      V6CkUmARux/4qyDTSQOq2tyoNlQE8MlPfhIvvvgiHnnkEXz729/Gli1bsGvXrroHwh7/5f1Y
      fdYFKLzyOADg8KE3sfmst6E7bSJ95u/goWe+B8C9s+BV4ZYQArbd/l2iRP34KSBTV+v+HSa9
      GkChbGHMcwLtSSyj10IL8F07NabN+/9dqjgY8YqYyzOJBX8vUkgoigopJcpWuS2tvONFN/pI
      6QaYnLqm+Ckg2bVy1s9QOXjIdQnNZiEMAyLC157fApo2daDJ17hQAqCqKlatWoWNGzdicHAQ
      Q0NDEGL+lq+5GB3ci2ffLOCT156Fu195AgBQLBWga+7otappMD1/7pn1AKoPdC6FoA1Uq/v3
      6EcAhbKNiZIbAaSNNL0eWoAfARiqMe//d9myMVkogzGgvye14O9FZRp0RQcXDsp2KZgMbiX5
      ylQEoIK5562aAUCyd9bPYA+70YG+ehUkY27lNiL8IbBs2oT71M17XYcSgFtvvRVPP/00tm/f
      juuuuw6rV6+u++7/id88CkcCd/3wh9hz8ABKP7oHv/OWZSiPu21kjm3B9la1KYoya86A7Cc6
      D3cXgNfl0JWse4FQwrShawpsh+NoznUCHciuoEVELcDyTNtSifS8/9+5Uh4Ol8imTHR3JRe0
      +jAdE6qiwhE2pCLb8jssejYUXaYZNLFI24FVdgVA710Htbo9VEqIoSEAgLFuXeRnLnh/G5m0
      2fT/j1BXzyuuuAIf+chHoKoqJicnsW/fPmzatKmuYbB3X3YVfo8LABLO8WG8+z070INJ3PXz
      72PwrI04+OKvsXzNqWGOScQQv82tkS4gTVVg6hpsh6NYdqDobhcQ0Xx8186F2kAPezMAA73p
      RZtCVMVdLl/GlNNoq/GngNNVHUDgNqSXXpzlAyQlHC8C0FZGbxI36tUAlmejMdxbiIYFQAgB
      zjkeeughPPzwwxgcHMTb3/52bNq0qa7nMRJJuBonseWst6I7nYSpJHHFpW/Hz+/9GczMcrz/
      svMbPSYRQySAXMm9kDTSBaSpimstUAIgNJhaIhgoIpqH5VhwuA2VqTAXyNUf9QrAK3rTWKwp
      UGWuAEDKttlBTHoZhmlTwOVJgFcAPQlmZqd/gRCwh1yPIH3NmsjPM1Hw/jaaPAUMNCgABw8e
      xFe/+lWUy2Wcc845AIA//dM/xbnnnhviKAxnnX9B8N6G096KDae9NcTzEXGlYrlGcP6C93rR
      VCWwkJZCQ5dpRLKgnFgYR7hRm6KoYGz+35vfAtrfs/AMgPtcblpXQgbP30qklJiYIwIQRbe9
      mKWWAzMyGnx0FLJUAjNNqL3Rth9LKZHzBKDZRnBAg22go6OjOHr0KC688EK8973vxZo1a2gI
      h6gZ3wbC1LWG2tyCCAAAhI6Uno5kPy2xMBavQEJCUzSoyvwOrlMzAIsvUdcUHbriFpTLduu3
      CUopUfbcC3qql8FPujl+llwGsOk/q33ES//090NJRHuRdrhAqdIaHyCgwQjgjDPOwNe+9jU8
      9thj+MY3voEXX3wRY2NjSCaTOO2000gMiAUpVnwBUBsadNFUJagdSG6gy8xAa0P3yFKjZJcg
      pScAbG4BsB2OY+P/l703j5LjPM97f19V9d6zr9j3leACAgRJkBQpybK1S4nsOLYs24olJ8c3
      sXNyc53cc5zrkzhxnMTOvSeR18SyHTtxZNmStVESRXEnCHAnCIDEDgxmX3tfqur7vvtHVfXM
      YHoGmJ6eHpDs5y9yurq6Cl39vd/7vs/7PB6tsr9z6SEw8HsApolGY6+BL7DUmoLtu2/NNYMP
      jGBa+uG6bMcZvAaA2dMNNc4+LQZXKrK+1elSMtr1Qk0BwDAMuru7+eQnP8nHP/5xMpkMr7zy
      Ci+++CK7d+9uuoI1sSQCL99o2KqpBCSE8KmgAq0s2mPtzU1HAxCUaCxz8QygUHbIFMoYhqC7
      bWnBOABDGJgi0ANqfAlIakXeDwBtc3bzyp8wF7GOBc+WO+KJxIVWofLhSlWhSHe2rH4JaMV5
      s2EYtLe388EPfrAe19PEewABAyhkmZhGbT+gRNRPj1WYjga7Nb1XUfIzgLAZXrTkVig55Io2
      lmHcVACAtdUDcqSk6DoYQszPAAIjmJZ1847XSuEMeeWh0Pr5r9UDJdulUHIQeJPAq42meH8T
      DUdgeB0N11YCAiouYlpZtEWbOkCNgOvTNA1hYizSBJ7OlHClIhkP3/QCtpauYOlS0AAOY/q7
      ea11xQryeiMY7Ti4k152YK2rfwAIdv+xSIhQDdnxctEMAE00HEGTKx4NY9ScAXi1Vy3DdMSb
      OkCNQNEtolk6AxiZzgKwrvPGDeAAa+kKNlP0dfejMYygnCPtyhTw9TMAulhCTk2BYRDauLHu
      15OuMIAi0ICqZjMANNFwrMQNLECFIaFCtESaQ2CNQLBAh8wQxiI9gIAB1HcTDeAAgY/DWgyC
      TRW8622PRmcDgFNCl9KAWOAF7I6PgZQYLcm6M4BgvhVkI/pazQDQRMORL9fuBhYgeK9WoWYG
      0CDcjBdAEAC6Wm+u/j/3fIU1kIQOfADaY7MzC9otegFACIzEfJlnZ3AI8AfAVoHsMpOdowNU
      97MvRDMANNFw5H0WUDK28gCAspoZQINgV/yAl5gCrmQAyygBmV4AcNcgA5guekGnMzZLudSl
      NEgbwgm4rr/kTnj0UKu/H7EKWv3Zghdkk7FwQzKA5vRMEw1HqVy7DlCAgAUUNVpJLKFNfytD
      OhIz9M6hTN/IDtJxJZPpAgLobwshpy+BtD0pBSuGsCKetMJ1C1uFBSQb2wOQSpHyewDt0dmM
      RVcooJ0LrtUZGABWRwICIOMHgEbMAEAzADTRYGityfgsoAqVswYEwSMR6kDwzllEA2Qn0rz+
      9Rc48NHDdGysn5vUaiKY1I2FFgYArRXZdJpCycESLuEn/yWFwinQEswwItIC4YTHq491YLRu
      QCR7MBK9hHzjlXI5h7bznv2iGVr1HbAtJUVfa3/eDIDvA7CAAeS6lQwgtAoMIJh1A2trkANi
      MwA00VBoDWXHywBWwnMuq4x/wnfeBLDWmnNPnmT66jijb117xwSAiheAFfU06rVCp6/hXnsR
      98IPGR2aoFD8DFFh05Z9G0ImWAmw8x6rpjCNTnk76LneXyLaBoke8hd+QP7so4hoO6HbP0Po
      rs+uahCwpUvOLiOAjrkloMAMvnX9vONVPo+cmQEhsPp66349WmsyvhdAMwA08a6E0pqiXwJa
      CQsoVfJ2YsWyU08vjoZA2i7TA971d2xeaDd4qyLg6YdmrlJ+5j8hrzyHmr5UeX3a3oHEpC0Z
      p+sjv4655X6MRA/azqMLU6jcODo3hsqOoAsz6MwwujRDuJgGNK7WqPwEIj9B+an/gNG7D2vD
      SgQml0betnGVImaFqspAiFjnvONlOoPK5RHhMFZv/QNAIAMh8FhAjUAzADTRUHjWf34AWAEL
      KOt6aXq+5LzjnMCy42mK6TyhWJie7fXXk683VGEa99z3KQwcA0BcfhoncMsKxTG6d2NtOcrM
      9HZ4PkVvXz+h/Y9U3i/CCUQ4gdG+ed55ve9N03LhCXjhS8j1d5M4/HnKT/4mcvhV1MhJWMUA
      MOVbQbZdR+dUfgZgXE8BHRsFrbF6ehB11gACcFxF2ZEIIVZUHl0OmgGgiYZCKV0Rg1sJCyhV
      mgISKGXgSEVjEub6YPTsIFppOjf3YIZu7Z+gLqUpfutXUMOvUUr2QyRJPN6Nte0hrI1HMLcc
      RcQ7EYbF5KOvAakbGsEH8Mo7gkjYa8DaaIyePZhbH0QOv4qceHv1bgxIl7yeRkdsTgNYa3TB
      c5kT1/UAnAFPBC60cXUawGXHpVR2EQJa4s0A0MS7EEpryitwAwuQLs2AEQYVIV+0GyKdWw9o
      rZm+6mUvvbvW3+DotYccfRM1/BpE23Fa+sHOkTzyBWJ7P7bg2MoMwE1qAAWYrwWkMXv2VD5b
      a71qfYCUHwDa59T/kWWvXyEMRGJ+mccd9743a5UYQLYjKdkuhiFqMkqqBc05gCYaCjknA6i1
      BCSVZKYwiTC8VmKutDZWgrWgmM6TGp7CsAw6t9S/jlxvyKFXATC33I/bsRWASKg67XbMdwLr
      X8YMAMwPABowunZAOIEuTFcasquBab8ENK8BbOfBKYBhec3p4O9a41wbBCC0CjaQ4JUzbVcS
      DVsrKo8uB80A0ERDEbiBhUNmxdVruXCVS1kWwfAW/sI7KADMXJvELTnE25O09t3aE8xaa+Tk
      WQCMvtsrhvDVJoEdVzKZKiCEZwW5HAReDq7yvkeR7EPEOsDOIcfPrOQWFoXSupIBdMbmXG85
      h7YLYIQw4rNNYF0oIFMpMIxV8QGGWZn0RmazzQDQREMR7P5jYWtWe2WZKLslcuUsQngZQFBS
      eidg8pKnJd+5pRejAWqPK4KdQ42/BcLA6NmN7XoLVLUAkM6VKTuSSMiidZnli+vloIUZqpSB
      1NSFldzBonCkpODYCCGu8wJOgVtChGMwxwtYZjKoXM5jAPWsDm03lQsooI3zt77Fn8Am3m0I
      duvRsFVzbdeRNiW3AKZ3rnS+8TLCtUBJxehbXiNx3f5Na3w1N4bKjqKLKY/p07VzyUngqWwR
      25UkoiFal8lhD85nyzL4hC6j7wAAcvj1FdzB4ii6DiXHxRIGbdHZEpCaOwU8R/DOnZhA2zZG
      SwtG2+pIj2TyjR0Cg2YAaKLBCNLceDRUsxR0rpzHUTbC8Hb+JVve4B23BjKjM5QLZUKxMG3r
      bn0TGzV5DqTt0SFj7UuWgCZTeZTStCejvlvbzSNshhEIHOmgUACYvfu8a5g4i9ZqhXeyEEXH
      oeQ6WIZBIjxbclnMCMb1fYBD69atWlN6OuuzklobIwMBzQDQRIMRzABEQha1/o5SRc+sA+Gd
      K19qvJdsLZi8NIqWirZ1nUQb+COvFXLsNADmhoOgZ+WgqwWAsTkMoOUukEIYFX+BoMxkdG6D
      UBxdnEFnRmq+h8WQKhbRQEskQmiOquesEcz8Br0z5KuArhIFFOaIJDZoBgCaAaCJBiPQAYpF
      au8BZEqeDIQwvXOV3iE9gImL3kLWv3fjO8LDWPkBwOjejUZTlov3AMamvQCwobtl2Z9jCAPL
      9BrBQZAR8R4v85C2l4nUGTO+Cug8CiizQ2DXG8E4gx4DaDVcwALMM4NpEJoBoImGInADS0Rr
      l7vNlNMACJ8FFEjo3spwyw6Tl0dBCLq29t34DWsM7ZRQ0xfBsDD778CRNlK5WIZVVQ56PBX4
      ACw/szGFQdg/Z8n1yiDCCmN07wRYFSZQ4ATWGZs/s6B9YTrRMsv00VLijo2BEKumAgpzAkCz
      B9DEuxWzTeDaFTyn/UYd76AewPS1CZSrSHQkSXa33vgNaww1dQFdziOi7Rjtm3Ck929tGmbV
      wB0Mga3rWn4GIISB6ZeA5rqCGX4fQI6eqrvcR7o8awU5F4EOkJGYnQKW6TQqX0CEw5gdq+M/
      rZSusIAapQMEzQDQRIMxKwNR+y4n5evQ9PhsjKCxfKtCa83IGY/907mlB3MFE9CNgpx4G5SD
      0b4JIq2UpS8EZ4Qxrls2HFcykcojgJ725U0Bg1cCCvkloPIcX2Bz3Z0AqIm3qdCD6oRgCGxu
      BqCdIroUTAHPUj3l5CS6XMZIJDA7Vmd2w3YlZcfFNETDhsCgGQCaaDCCxXq5TJG5mPEDQG+L
      N6hTLDuoW1gQTivN1BWvtNC3+51S/z8FeHRMIQRF21swI1ZkgR/wTLaEIxWxSIhkDRIGQghM
      /5yOmpMBdO2EcBKdn6jrRLCrFOlSCQG0xWZ329rOoaUDVtQzsQmOH58ApTA7O1bFBxi8Z9hx
      FJZpNEwIDpoBoIkGI2jYJmrc5SglyRS9HsCmLq8hZzsSpW7dAFCYyZEdT2NYJp1b3hnyz3Lk
      JABm717Am74GvwR0nVvteCqPVpq2ZIREDRLfhjAIGQszABFpwWjz5iXkWP36AEXHwZGSkGmS
      nCsDXZgGt4ywop6BjY+gARzauLFu17DgmmwX25VYptHMAJp4d0JrTTZwA6tx3N2WNrYsYwiT
      nlYvHS/ZLlLWnyteL4ydHQSt6djUTaRBVn8rgS7nUOlBbwLYH8gqVDKAKOZ1Xrij0zk0no1h
      pIbejmmYFWZRcY4xvDDDGMFEsM9IqgfydhlHScKmOX8GoDjjeQFHkjA3AAx77K3VbAAXSw62
      I/0MoBkAmngXQimNvUI3sIJToOQUsQyTde0eVa/sSOQtmgForZm87JUvOjf1YKyCkXi9ISfP
      eXIIiW4Mnw4Z6PR4GcD8e5hMeYt2V+tCv9+bgSGMSgnoemN4s2+/d00Tb9etEZwqFT0jmFCI
      qDW72Gq/tChiHfOmgJ3hYQCs/tVjb2UKNkprkrEwoRo1smrBrf80NvGugas8wwuAaI1m6CWn
      RFnamIZFd4uXAdiuvGV7AE7JZuaaxyzpfwfIP4A3fYtWGL37EDGP9RLszCNWdEEQG5nOAbCh
      p3Z2UyAHUXLny3oYcyaCcesj+ZEpeedpjUTnzaKojLfQzzWCUeUycnwcDIPQ+tWT784VvdJX
      o3wAAjQDQBMNg5S6EgBqVTzMlTM40iZiRehp9RanQsnBvUVLQJmRGcq5EpFElI4Nt778g9Ya
      OeLp75jduyt/r/gBm2EMMbtsKK2Z8GcAepbpAzAXQQCY2wOoXIMVRefGPKG2OmCqGMhAXzcD
      EOgAzTGCccfH0VJiJJMYyeXJXC8HE34W1dpAIThoBoAmGghXqkoTOFajH3AwBdwWbSceCSGE
      d95bNQCMnfMkBDq39lKz9kUjoRVq6iIwS8OEWT/g66eAldJMpr3Fq69zeTLQcxGc174uAGBF
      PH8AQA6+XPP55yLlD4F1xedfb8UMfs4MgDsyAlJitrdhJGq/vxsh8Mlu5BAYNANAEw2EVArH
      9TKAWhtdM74OUFusDcRsILkVPQGUVBX6Z/++Te8I+qcuznjSC4bl0TB9BBo94eumgB1XMpX2
      FtTe9toXyEALaC4NFEAYFmaPx0Sql0VkIAOxwAu4MgQ2qwPkjvkuYP39CGv15jdmAiG4BpME
      mgGgiYbBkcrzPKV2N7CUL9bVEmlDIIjfwgEgP50lPTKDYRl0vQPcv2C2/i9a18/TwwmUQMPX
      ZQDT2SKuVCSioZob+7B4CQjA8AOAGj2FVivL9LTWpP0ewIISUCAD4fcAtNazInCrqAEEszIQ
      jbY2bQaAJhqGctlFA5GwVTPTIeXXgbv8Sc2AdngrTgOnh6dQrqSlp41E5/IlEtYCMhgA69gG
      c3T/i463Q42F5u9QKz7ArfGaHd5goSnMXJj9HhVVpQfBztX8GQBl6ZJ3bMzrjWDcwAvYnDcF
      7Iz4FNBVnAGA2QygkUJw0AwATTQQgQzESszgMyVvCKw12oYQs9K5JefWUwQd8c1fenas7u6x
      XtBaI0ffBLz6/9yS1WJmMEMTWQC62+OErNqXk9kewEKmj9G9GwwLnRtDZVcmDZ0ulVBKEQ2F
      iMwp6ejiNGgJoTgi7JeytMb1M4DVpIAC5Pz5mGYPoIl3LfKlQAeo9jR3puBxtYMMICgl3Wol
      IKdkM3VlHISgd/fqDRDVFW4ZNX0ZALNn97yXFmsCBw3gWmcAAixVAhJWxAsCsGJp6EyphNKa
      eChMLDRnCKwwDUoiwglEyCsNyVQKlcv7NpCrV8JzpSJXsjGEaKgQHDQDQBMNRH6FOkBKq0oG
      0Bb1hOCCZnL+FisBZcdT2PkS4Vj4ljd/D6BLKXRqAMwwRv8dlb+rcplSeVYLaC4CGeh1XSuj
      SAZicLas/j0GDmFy5I1Fz6FuwjksXfKMYJLhCNaceQadnwQtEdFW8DMAd9Tzbza7uhCx1VuY
      CyUHKTUhyyAcaqxQYDMANNEwzOoA1ZYBlN0yZbeEZVjEwwmEEJVy0q1mCjN2dgitNJ2be4g0
      eFdXKwLVTaNjm7cQ4u2CJ3/7P5N9y+sNzC0BSamY8HsAvR0ro0gGgcWRTtWF3Kgog56tOhFc
      dsv82Yv/jb9+/S8rukXVMFMKfACuM4LxGUBzp4ArE8DdXYjw6jVnM4UyrlREw1ZDZSAAbn1d
      2ibeNQjcwGp9yHPlLI50CJlh4n6a3uKrT2ZvoQxAa11x/+rZtfj0qNb6lqKGyvG3ADC6d4Hw
      FsH8C8cpvHkS+76FbmC2K5nxNex7O1aWAYTNIADY3gJ/3T+L2bkdhIlKX0OXUojY/Kzq9MhJ
      fnD2uwgELZFWfmzfxxZ8hta6YgRzvRNY4AMw1wjGHQokIPoXfE9aawZTAzjKYfscumwtyBdt
      XKUIWSaRGifka0UzA2iiYai4gdU8BZzFkTZhM0zMT9Mjt2AGUEoXyIymMCyD7kXcv7Sdxz7+
      e6j8VIOvrjq0VpXyitl/O0IItFIUj59AC3D9lSJYqMH7N09lvQDQv+IMwMssbGlXNYE3evch
      Ii3owgw6N77g9TN+81qj+cprf854drTq56SqTAFrrStTwIbfW9Ja44x457ieAaS15sLkOf7V
      o7/Kl575zxWGVK3IFW2U0sQiVuV5bhSaAaCJhmGlLKBMKYPUkmgoWqEjxv1+QsCiuBUwPTCB
      dFxaetpJ9rRVPab87O9gH/99St/+p3V3u6oJ5azfYBUYgQT06Cj2lSto00D6QXtuCSjwAUjE
      VjYD4J13NgOopuskrAiiYwtoWaGqzsX5ibOAF6BKbok/efGPkGqhU9y0nwF0XF8CynhsnyAD
      0I7j2UACVt/8IF5yi/zh8/8FW5bZ2rW90r+oFUH2moiGavbJrhXNANBEw5DOrczzNF0MGEA9
      FT2aYHIyGKS5FTDw6gUA1t22GcNc+BNT2RGcc48BIIdfR6evNfT6qkFOX/J21uEE5vqDAGS+
      8yi6XCZy8E5klxfI4uHZnfPlEW8mY3Nv24oXruC8Jbe0aDPX2vY+71oHTsz7+3RhiuHMIBEr
      yq/96G/Q37KON4Ze5cvH/2DeuRwpmSkWMISgJzG3ZKW9GQPAaPUYWyqX8wKAaRLevq1yZMkp
      8m+//68Yzgxx14ZD/KOj/6QyxVwrglmK/jWYFWkGgCYahkLJ2+nUSgOd9NP0jjn13yCbKDvu
      LbGTdm2X6UD9c2/14SE5dhoqwmYa9+ITDbq6xaFGvV212bsfIQxkNkfxxZfAMIg+cLTCzpnb
      Axib8Yay+juTK5Y5ChZRqSR6EfvHChNo/My8MtGlyQvk7Txt0Ta0xdCoAAAgAElEQVS2dG7j
      5458EUMYPHPxCU77xjYA6bJXroqHQoTM+bX2Sg/AnwJ2x8Y8F7CODgw/W1Ba8bdv/jWXpy/S
      Gm3j5498ccFkdC0INi+ticZOAcMtHgC01rfEj7qJ+qAUSEHXXALyFs2OORIFsYiFEJ4mjXML
      CMJNXhzBLTnEO5PEO6rv6NyLT3n/4VNZ3cvPoquUKxqJQGcnKP+UTp9CZbNY3d2E9+2pBIC5
      C16wc+1ui6+4mV3pAbjVewDgTyeH4uj8JHpOjT8o/2zv2knIDHHH+oM8uP0RpJb8+ctfJlv2
      htUCDaBkOEJorq2lUwA7D2a4In/hDHhZWWhdP/jB4tTISb771rcQQvCz9/wCPcn6DIfNZLyy
      VGsNdporxZoHANcu8vQPvsPv/97v8Ud//GcMjM4AmrdfOcbv/e7v8id/8Ve3VHrfRG1QSle4
      +rWygNJ+AGiNztbVY5EQAoHtKFx3bQOA1rPev52beghVuU9dyiAHXgAhiNz7DwGQI6+j/fmG
      tYBW0s8ARKX8Uzh2HIDo3QcR0Siu9JrsEdNbqLXWFQnj/s6VyyTP7QEstukTLf3eAm3nUFUC
      wP7+273jhOCnD/0c7bEOBlMDfPPU33jfjW8E3xKJzpsBUDl/9x9OIvx6vjvui8CtX48wDDKl
      NH964g9xpM19Wx7k6Lb31Y3BFciY1OKnvFKseQAYHThHOdLL57/wRT75gUN881uPU0yN8ugz
      r/Mzn/8i9+7u4hvff2atL7OJFcKVCtuVCFG7EFxgBt8Wba/8LR4NIQyvBGS7a7uL1kpX5J8X
      o3/K0TfRuXFEvBtr78cQLevALVc0+NcCujCJKkyCFcHs3YfMZimdPAlCEL/vXpRWONeVgGxH
      Mu3r1/S01+4DEMAyQhjCQGq5KI9fmCFM3yISP0souyUG0wMIBDu6d1WObY228XP3fAEhDB57
      +1HOTbxNqjTbAJ67eFdkoOMdYEU8BtA1LwOw+vuRSvKV1/6C0ewIvck+PnfPP1jx/c5FsMHt
      am28XeiazwFs3HknG3cCWjMzOUqiLcnI4FV233mEtkSExJ338sTrXwV8rRI5+yNXSuE4t5YE
      QBPVUSy7OK5ECIEhqOl7yxS9DKAl0lp5vylAIHClomw7OE5jedRzUZgOzN8NOrf2Vr1H5/wP
      AI3YeC8y1Iqx5UHkqa96TeHNDzX+ogE1cR5KaUj2IaNdlI6/iC6VMPv7MTZuJF9Ko9GEzTBa
      aRzHIVsoky2UMQ1BV2t0xb9DKSWWYWFLm5JdIm4tcr6e/XDhcdz0ELrvTi5NXqBg52mNttEW
      aZ93HXdvOMKhDffw8uAJ/vj477N3/U8C0BaJzDtOZvxsItqOq00oFHEnfVroun5evHqMpy88
      gWVYfPbuz5OwknVdd9L+LEUyajV8PVvzAADglHJ8/1t/y7WMyed+5ie4evJpQpZHxzKtEJHo
      bNo5F83+wDsHZdvFdiSmEMQj1rK/O1e5vheAoDXSWnl/NGQihOcLbK9xI3jykreQtPS1E4qF
      Fl6LtJGXngIE1o4PoLXG2HIUeeqryNE3sZziPAXORkH6DWCjdz8ag/zzxwCIHT4E4TC2r7Nk
      GaFKXy6TL5Er2oQsk46W6Mr/3bXXB7ClTcEu0BHrrHqYCKShx9/C2PURzk2cRWnFhrZNJMMt
      C67jp+7+OS5OnWcwNUDG+QFtiUO0R2PzjgtkoIl2oLVGFfLImRQIQabF4s9f+jJKS350z8e5
      c/3ddX3GXKnIFm0Enh1ko5/fNQ8A0inwl3/6Z/Ttu5cv/t27sUyDRLyFUspjGLiOjePrdxuG
      scCP1FpFk4Ym6gjh4EiFYQhakzHCyxytL5WKKK0Im2GSsZbK+0OhEKZhULJdNMayz1svaK2Z
      uOBN//bv2VTZtMyFHD4NxRlEopvQpsMY4TB68xGcUAzSA5iZgYr0cSPhjnsBwOrbj5HNYp86
      DZZJy/sfIRQOo4SXdYetCOFwGMuwSOUdtIaOZJREHXRyhBQVsxltqEW/R9WzEyecgMmzhMNh
      BlJXANjff6Dqe9aF1/MTB3+a//bC75LJnyQW3kpXIjnv2FLJG8Yz2zYQDocpZ7PoYhEdi/IX
      l79GqjTD9q6dfOaun6r781XIldBaEwlbxKKRhj+/a94DGDz3BoVILwf3b2Fmeop0Jse6zVu4
      ePplhiamePXEM3St37HWl9nEChHYNgohiNQgeJUuplBKEQ/HiVqztdK5ekDBoNlawCnZpIe8
      haRnZ3X5Z/fK86AlRt9tGHFvhyuibZgbDnnSw1efb9j1BtDSQU15cwvmujspvPACKEV4+47K
      AFTBN4SPhWIIX6NhzDeCX6kIXADBHEG4KoqgleMS3RjJPuTEWZRb4tLUeQB2++ylanhg28Mc
      3HAYUMzkXqBtjhaV1royWWz4DCB3dAyN5nhvjteHXyVsRvj5I79IIlx/S8hsoYzWXi+r0TIQ
      cAsEgFC0lY6E5Ikf/pAf/vCHvPzGW4STfXz6x47y+KPf4fI0fPxDR9f6MptYIUq2i+MqTEPU
      RAPNlrMorYiF4kRD83ecwVzBWkhCa62RMzNkRmcoZYuEoiHa1y80f9da4154HABr28PzXrO2
      eM+3vHai4XRQnRlG56c8HfzkOgoveb678XsOVywQXRmUgGa/t5Epfwagq07DS0JUKKbVJKEr
      h5lhz6rSKTAx+DJj2VHCZph1rYtLbofMEH/3zp/BEBFsZ4wTV56cLbVohS54gTuYAnaGhhhP
      aH6wy2t8f+r2z8xrMNcTmXwZrTWxsLUiQ51aseb1k/U7buMnd9y24O/b9x1k+76Da3BFTawG
      Aq2eeDSEYSyfPpcupdBokpHkAl/aSgbQ4ACgtSb76HfJfvs7TOz3Grh9ezdhVDFGUTNXPLP1
      UAJr6wPzXjM33w9GCDl2Gp0dRbQ1zj9AzVwBt4jRuR1VNLEvXgLDIH7vkcox8zIAnz0z4fsA
      dNeJuSIQi/oCXw+jdx+cf4wzp78OwPq2jfOowdXg6hitiYOkcsf5mzf+N3duOMT6tg2g3AoF
      NzCDL4wM8rcHbAph2Nt3Gx+/7dOrJtqXypU8eepYmPB7MQNo4r2BYHGupfwDc72AWxe8VskA
      GlwCckdHSf/13+DOpBi/4nHJu7f1VV0s3As/BDRm/4HKtGkAs3sXRvsmsPPI8TONuPQKAgE4
      o3s3+RdeBCmJ7NmD2T1rixjMAJhzMoBgCGxdnTIAIWZ7AEuVgADM9XcBcG7wVQB2dO+6oR5P
      ulQiGdtPJNRHwSnwJyf+AEc6IB1UUAJKdqOV4vH4NS53KaJWlH909JcJmatXlw9mABKx8Joo
      wzYDQBMNQSB41RKv7ceUKWUA6IgvZIeslStY5pvfRheLqL712Il2DNOge3v/guO0cmfLPzs/
      WNGbn4ugLBQc1yjISW+Iyui6jcKxFwBIvO9BxByyRfG6HkCx7JDKlTCEoLtt5TMA4GUAUV/g
      r2AXljzWaN+CMiNcs7xnaVcwG7AEUqUiQgju3PRxIlaU06Nv8uT5x3CvnQA7h4h3IZLrODd5
      lidjgwgEnz308/S2rK4VZDAD0GgryADNANBEQ7BSHaBM2UvTq2UAQQDIl1amCOosY5DMGRoi
      /8wzYFnYt9+LlJpEVyvxKrr4OjuKGjsNRghr+yNVz2duOgII5LWX0Ha+thtYJrRbRo14Mspu
      IYo7MoKIRondc8+84+baQQohyBZtCmWHcMiko7U+tFUhZktASxm6gGfaUureyaAVQSDY1bN4
      AzjAVMH7Nz3Qv5tPHfgMAH/z+v9i8Nh/BcDa9wkK2uVPTvwhZVlmfybB+zY+uJJbuimsVCBx
      pWgGgCYagrJduw6Q1pppXze/WgYQ889ZLNfmCaC15vTlcf7Nnz3DhcHpmzo+/bffACmJ3nYb
      GZ+z3rt7ffXyz7WXAI3Rs6dSZ57KFPmjb77C8KSnU2OuP4hIdKELkw0rA6nUNXQ5DdE2Sme8
      CeboXXdiJucHsesN4VPZEqWy6wWAZP2mV8P+jr5cxRh+LoQZ4lqsA1sYdMQ76YwvbLrPhdKa
      VEUGOs5H9n+CHV27yNp5/redR0fbCB/+B3ztjb9iYOYK7UXBp4a6CSXqw3BaDFprUnnvXtvW
      yDWuGQCaaAgyBW8RqVUHKPACbo8t9NcNLCZzNbqCSaX50tde4uTFMf7oayc499wZBt+4xNTV
      cQqpPE7RRjouSnnyA861axSePwamSeKjHyXlyyJXM3/RWuFe+AEA1tYHEGYIqRRf+tqLfOf4
      ef7zX73gOYNFkhjde0Ar5LUXa7qP5UJNvO0ZoYc6Kb19BYD4ffcuOC5oygY79JmsZ6zenozW
      tXEZmM0sxQIKcDXsLc67evYsIAVcD6kUedt7NlqjUSJWlJ85+FkiCE6F4rx6+0/wxvQlHjv7
      KIaCj58J0ddZXcm1ntB4LCBYuwCw5iygJt4bCHbntRiHaDTTPlWvGtsjKAHV6go2NJFheMrb
      iZ8bTfHEo5OsE7MTmWbIItoSI5KMEknGEMMD0LqFeE8Hbs6gkMoRSUbp3Nq78Nrzk8ihVwCw
      dv4IAJeGZ3jzkjd9en5wmrGZPP2dSaxdP4K8+jzuuccI3/dLq9oU1FpXMg03bSGnZjCSSaK3
      LRxEK/o1+Ziv2T8y7f1b1WsGIEDQA7iZAHDJ14PaHrqxEqktJXnHCwBdsQRaa7ZePcYHClN8
      N9bBV4Zfxxw9hVQuRwYt9o+ZWEcWt/KsF7TWlU1LywoNdWpFMwA00RBU3MBqYAFJJcmWMwgE
      XYnuBa9XmsA1soBePjtc+W+N4LQVZm9/EjtfopQtIh2X/HSWvL/wAdC1BxTwqLe4t/Z3EI4t
      rOPKgeNg5xFtmzB69qCU5hvPncWZo1z63MkBfvyR/Vgb76FshlCZQXRubJ4/bf2hUb6zVnnY
      Aa2J3n0Qs2Xhon59CWh0KhgCq6+BScDkuRENFGapqRvGTqGVrNpYD1B0bAq2jSEELZEIOj2A
      /dpf8GEnz5stfQz6KrPrWzfwsVwUgxFC66sP89UTWnuDYLB2PYBmAGiiIQgYOskaWEBFp4DS
      Hi2vWrq/EltIqRRvXPB244c3d/HG8AzDGro/fJh9m7vRSlPOFSlli5Rmsox/9RsUUznYugPZ
      2oldKBOKhbntw4cWnFtrhXvxhwBYOz8ACK5NZHjp7WEs0+D+2zby7MkBjp8Z5NMP7cVsWY/R
      tRM1/hbulecI3/7jy76fm4ZykeNvozW4MxYYBsmHH6566GwA8BapyTrPAASI+CUg+wY9AEfa
      FOw8Ia3YMnLS0/OPLB6MMuUyGmiNRAiZJsUX/zuUM8T77+ALj/xL/tPT/wHLCPEL9/wise/9
      IUoIQhtWfxZDaU3Wf2abJaAm3tWoaJ7XkOpO+zMA8XCiqv1ei6+jXksGMJ0q8PbAJELAz37i
      EH/51BleOD3Id45f4MB2r6ZvdbaQ6GyhmBlDXnkNhKD/73+e0IaNSJ85ZFVpbutiCjn8OgiD
      0M4fQQjBt4+dpWS7HNzVz+d+7A6OnbrGhaFpxmZybOhuxdr6IPb4W8grz6EPfGbVykAqNQBO
      Ae1YyHIEq7+P8K6dVY8tS58F5C/Qo9OrkwEEGcaNSkC5co7x3Chb3DKhcgaVGsDsWzhMGiAw
      gmmPxpBjp3DffhSMEJH7f4ld/bfzrz/yH7DMEB0FwWiphIhGMdvbFz1fvVAsO5Rsl7Bl1twb
      WymaTeAmGoKgPl8LCyhwAktGWqoO5YRDJobwJKGXQ+XUWvPKyxcoO5IN3a1sXNfOx4/uxjIN
      Xn57mCujqdljXZfM334TpCTxwFHCmzYhDIEVtqou/uDZLOrCFCLZi9F/B6PTOZ59YwDDEPyd
      h/bS3RZn75ZutIYXTnuetAFNVA69AnL1jJCkb5UoSxGQBrG778ZYRIjMnpMBlGyXVLaEaQg6
      650B3IQUBMBIZpiyW2aHW0Lg+SovhSAAdMZilF/4XZBlrG0PYW6+HyEE69s20pvsQ05MoMtl
      jEQcs2Mh2aDeCDZFsYiFaazNUtwMAE2sOqRSFY5+LTudmcoUcEvVDCAatjANgeMqys4yuPxF
      m+ffGADg4K5+TMNg35ZuDmzrxXYlj75wvnJs8fU3KL/9NiIaoeUTH7+p87uXngTA3HAYYZh8
      54XzFG2XPZu62L+1B9MweODAZgBOnBnClQqjYxsi2YsuztxwYasVWmuPAQTIfAwMk/iRe6oe
      q7Si6HgUyogVJZUrYbuSWCREa53r1rMBYOkS0JlRb3ZhR9Jruit/mG0xpH014eT468jLz4IV
      IXzfP1rQN3AnJkBrrJ5eRGj1d+TBDEAiFsY0Gz8FDM0A0EQD4LieEqhpCKKR5WcAqYoRTFvV
      kkjYMjEMLwOwlxEArp65xiVf0uDgLt9/wjD49EN7EAKefuMqE6k8WkoyX/86SEn86FHCG29M
      EdROEffqMUBg7foQ6XyJ7794ASHgkw/sIeQLf923fwOmIbg0PMPQRAYRbcXccBgAefX51dGH
      Vy5yyJNRkIUooU0bCW3ZWv1QrVC++1bYCjORKmC7knjEqruHrRXYMarFfR201pwdfwvLCLFl
      xwe9exg7g5aLl/+CIbCWQU9tNbT/0xhVhsecQW8WwmpAAxhmKaDJaGieRWUj0QwATaw6XFch
      lcY0DELm8nnjKd8Ksj1ePS2PRSws00AuIwAoV/L6qxfJIUjGwtyxY5bDf/v2PvZv6aFku3z7
      2DkKL76EfekyRjJJ603u/uXYKXR2BBHvxNx4D9987ixlR7Klr51Du2cXmK62OPu2dONKxYm3
      /AVo2/sAvAByg6nYWqDtnNcDANxsgvi992JEqpd/pJI40kEgiJhRZjJFzwegJVZ38bJZX2Cn
      EnSuR97OMZwZoifZy4Y9HwZAZYbR5WzV46VSXgagNR32FERbCftWkdfDGfbYYDcT4OuBwFKz
      NRnFNJsBoIl3KYq2g+sqLNOoMQPwSkCtVWQgwO8BGAJXqZv2BZ4emOD0gDdbsHtTV2VHDmCZ
      Bp94YDcAj710icG/+QZoTeLh92H13xw10z3/OGiFuekIWRnm8VcuA/DpB/cQua5ncHROGchx
      JebGw2CGUBPn0JnhBedeKdT0JXAKKMdE6zjxBx5Y/Ng5Hr1hK8ywT4WthxH89QiazK50kIvI
      Yk/mJkgXU+zq2YNo3wKhOJQzqJnLVY8vuS5l6WJqSULmCB/82UXptZUMoH919X8CrIQYUS80
      A0ATq46S7eIqPwAscw5AaUW66E0BdycXDlpB0AMwllUCuvTiOa76m8yjBzYteP3u3evYtq6d
      QtnhiXwUo7WVlo9+5KZYOVralfq/teMDPPXaFVK5Euu7W7i/ymcd3rOOSMhkYCzN4EQGkejB
      7L8D0LiXn7mp+1kO1Jg3ACbzMcI7d2N1Ly6lIJXEVY5n5GNF5swA1D8ABH4AjnJRuvr3eH7y
      LEpLLwAIUWH/qInqfYCi41ByHAwkrbEE4YOfrfodqnwelUqBZVWMcFYbay0EB80A0EQD4LgK
      6fcAlmt6IZUkb3uLTnIRrrdpGETDJlp72caNkJ/Ocu7cMGk8c5rbty8MLJGQxUePeE50L7Rs
      xvzIx7C6ltacCaCmr6DzE57GTuftfPe457j1iaO7q7Kg+jqT7NzQie1KXnp7GGGYmBvu9u7/
      2ovoRcohtUL6A2CyGCV+7xHEEmU5qWTFECZiRSszAF11UgGdC68EJLwMYJF7fmvsNAD9rd6k
      rtG7z7tOvzF8PbLlIo5SRJRN2z0/j1jkGXInJtBSYra2YrRWzzTrjYxvBt8MAE28q1EoOV4P
      wDQIh5cbAFyyZU8KutoUcIC4rweUvwlJ6Ksvn2ew5CIRbOptrVrO0FpzKD9Ep1MgbcV4qWeh
      I5TWGi0LuLmzaDkrYexefhqkg9m7n+cvFRmZztHdFueDh7Ytek0P3O5lBifODCKlwtr1Ie9c
      Qy+j/R5IPaClg5o87w2AFdqJHa7O/gng9QBcrwdgReb4AKxCCciKIPAmgVWVEpBUkqvTlxAI
      QobXMDbXed4AavL8Ajc1rTUzl48D0J7sILRv8f6NMzIKUmK2tWHE6x/crofWmhk/AHS01JdO
      uxw0A0ATq46iPwOQiIYwljnYJLWqZACL9QDAawSDN1yz5PkcyeAblxnwH/27dlavB+tCgfK3
      v8370xdBa77/0qUFg2bKHif95i+ROfNPSZ/6JWR5wrN+PPcYAO7GB/nWMY9K+vGju5c0w7l7
      9zqiYYuBsQwD4xnM3v2IWAeUs6jJC0ve03Kg8xOotD9zsPVuzI6lB56UlkjtghBIKZjKFDEN
      QVdr/RdJy1/UlZJVm8BT+UlmCjNEQzE6E142ZnbvAjPsNYLzk/Ovffoi4+eeBqCrvRexhGic
      6zeArf6+eV4IqwWpdEUfq9kDaOJdjbIfAK5vft4M8uUcjnSIWtGKWFg1xCM3ZwozdPIyM6k8
      EwhMQ3BkX/WR//yzz+EOD/OgkaYjGWFwIsOxN6/NO6Y8+TjK9mQkVHkMe/oZdPqax7E3I5zI
      bWVwIkN7MsoH71589w/eVO3ODR1+GchrRpq+dWSgJloPqOyoNwFsh4gf/dANF7uCU8CVLvFQ
      nFxBobQmGQtX9Jfqifk9gIUB4PL0RUpukbZYe0UC2ujchoh3eo3gzFDlWK0k9rEvkcZbXDuW
      2NVrrXFGRgAINYgB5LhqVgco2SwBNfEuRrboPei1uIEFFNBkpAWjCnUvQBAAlpKE1kpz+cVz
      TGiBjVd737Zu4Q5YptNkvvktALo/8VE+fJ/HCPrWsXOVYAZgxbcBQUYjMCPrcC8+CWhk1x6+
      d8Yrl3zw0LabGpp64HaPDfTC6UGU0ljb3+9dz7UTaLkys5vKvQ2+BIDS3cQO3X3D41+8+gIa
      zdbO7YxPF1BK0xqPrEoAiJgREOAqB1mlCXxm1Otd7OreM+9ZMLq970f5r4M3Se1eeoqZkOfV
      0BZdWmvHGWosA8iVqvKstiXWRgcImgGgiQYgV/SF4KK16ADNykAvFQACPaClegAzgxOkhib9
      8o9g/5buefTPyvU+8SRyehqzq4vkB97Pj96zg5Z4mKujKV6aoxwaar2b2Mafw0reRmzD5wi1
      HayIv70h93NpNEtLLMyHj1TX2LkeB3f1E4tYDIyluTae9lzCQnFUehg1XZ3muFwEEhChPfdj
      RJYOSo50ePnaCQCObLm/0gDubI0tu5l/MwhbYQwMpJLIKvMP5/3p5b19++f93ey/HQA58Rbg
      ifCVn/t/0colG/LkwztjS5SslMId9TK5RmUArpSUbBchmk3gJt7lqOgA1TADMDPHDH6pABDx
      m8uLlYC00lw+fhap4Zr/2B/Zt/DHLtNpcj94HISg9dOfxIjF6GyN8fCdW9DAt54/h/SNYYQZ
      Jbb+J2nZ9x+JbfgpdCmHHDmJEibfHd2A0pqHD26ltyNxU/fa1+GxgVypePGtIUS0HbNnD8gy
      8uqxmzrHUlDFHGriAiAI76+u/DkXl6YuMJweJB6Kc9eGQ4xOexnNzd5PLQhcwWx3fsZTsAuM
      ZUcxhcmO7vkN+WCqV42+WenBqNE3sUNJilYLhhC0RhbfZcuZGXSxiIhFG6IBBJAvesSIWCRU
      dRPSKDQDQBOrjuwK3MBytjd41BHvXJKDH5y7vIgpTDFTYPTsICktKOI13nZtXGgvmfvB48jp
      aaz160g8+FDl7x+9bxfxSIjzg1OcvDg27z3BVKkcOAHK5a3yJs6lwsQjIT5230L20GIwDMH9
      t3lsoGOn/Ebtjg8Anq7QSmUh7POvez2AUBRr/b4bHv/sxSdxlctdGw/TGe9i1DfNWd9dXxXQ
      uQhcwezrSl5Xpi9Sdkt0xDvpScyn7ZpdO71MqTCFmr6Effz3ACjv+RROKEnYNEksInQHswNg
      ZmcX4galonphJudNAbfEwqyi788N0QwATaw6VsJ2CEpA1awg5yI4d66KMbzWmoFXL+CUHAYR
      aAQ7NnTQfp0GuzszQ/b7j3m7/09+EiM2+/qGnlaO3r4JqTTfev7cgsU4sH7UGr5duB+JyYN3
      bF72YnnIHwq7NDLDyHQOc/O9YFjIqYto/9+iFmitKb30OEJIRLwLo3Vpx6uSU+TVwZcQCO7f
      +iBaw5QvXdC9CjMAAYJGfyBAF+D8xDmUVqxv21hxJgsgWvoQ0XYoZyk/9Vuo6UuIeDf2gZ/E
      UZqwaS0ZANzRUQCs3t5FFVHrjVTWo4C2xD1j+7VCMwA0seqosIBqcANbygt4LoKmZLUegFt2
      GHjlAmgq9M979m7AMOb/8HLf+z4qmyW8bRvx++9bcJ5PPbiHaNjitQujnLs2fzHWxRncwVe4
      7K7jTWc7Ycvko/fdXO1/Lnra4+zZ7M07PHdyAKNzB6JlHZTSFWvJWqDSadxrLwP4U8ZL4/To
      m6SLKTrinezt24/SmsmU1wNYjRmAABVXsOsygKD+v9+v98+FMMOYvXsAkAMvABC+9x+SE1E0
      mmQkjLWEY5h9zWN3NcIFLEDWbwC3JiLNDKCJxkFrvajQ1mohMIRfLgvIk4HwlEA74gvLNXMR
      BJeyvZA9MvrWNYqpPCVDMInAMo0F9E93fJxspfb/qao7wU09rRzesx6lNF9/9u15WYAcegVV
      TPHNwgOA4Mj+DWzpW76piCcR7ZWBXjg9iBQhrK0Pete4ElkI08Rq9QJxMGW8FB4/+z00msOb
      7iURTlKy3coMQOcqzAAEqOYJoJTivC/1sKe3eunKmGMIY3RuI3T7Z5gpellEV2zxnoVWqpIB
      NKoBDLNKoB0t0VX1fr4RmgHgPQStNc9ffoYvH/+DBTus1USwK1+uIbwjbYq+92syvHQpJSgB
      BT+sAMqVXH3ZG6SaSibQCDb0tNBxXfmn8OJL6EKB8K6dxO66s+pnCCH49EN7MA3BiTNDXB3z
      shOtNe75HzAku3nV3oUhBJ88untBhnGzuGfvekKWweWRGUgRoB8AABAQSURBVIYns544HCAH
      X15S9ngpGFELK1ECYWB0Ld2XmClMc2bsTUzD4uGdnuTylM8Aak1EiNUwz3GzCCZ83TksoLHc
      KNlyhlgoTt8iQm5mn58ZCIPw0V9BmOGKDHRbdPH5Ee04uGPjAFh91bWmVgPpvO9RUAMzrp5o
      BoD3EMZzo/zJiT/kuUtPM5mfaNjnlvwewHIXDls6FOwCAkHHIlLQAWIRCyHAcSVSzmY4qaEp
      Zq5NYIRMhnza49271i2QMo7efoDowbvo/PznEUvUgbev7+COHX0orfnm82e9LMDO4Qy/wfeL
      R1CY3LWrn50bls5YlkJHS4z9W3vQGo6duuYZysQ60dnRipH7cqCljfPWt9ClFCLSitGxdcnj
      Xxo4jiMdNrdvYWO7l40M+yJwHS0xQtbqLRvhKqYwgQHMhraNi+tBbTxM6O6fJXz/L2Ht8OYn
      AiOYjtgSUgtKo10XEYs1xAc4wLTfA+huX33ZiaXQDADvITx38WmKToEtnVvpTd6crPFKIeWs
      G9hyh4fKTqnCAmpZQgYCwDJNLMNAal2RntBac/Xl8yipaNvax5hfHjq8d2EDNLxlC73/4lcJ
      b9u65OeYhsHfecijHT57coCxmTxy4m0m0yVOlD1++t99394V6bvPZQO9+PYQMtKO0bcPtFyW
      S5jWCjl5juLf/h+Uf/gboFxCd/w9xBLBVCnJ85c9+YQjW45WLDjHZ7wA0NMeX1XaYjzkLYhB
      5qe15uLkOQB2dO+q6ggHIKwI0Yd/lci9s05fgRXkUgHAiEXp/qe/TM8//z8x29qWda3pXImR
      qSxKLZ+dlfHdwGKRtfECDtAMAO8RONLh+FXPEenhHR/EXKIpVk/YrkQqTcgylt0EztlZpJKE
      rTCJyNKNx0jIJGSZKKUpO14AKGWLjLx1DSEEdl8nk+kCbYlIVfrncnBgey97NnVhO5Jvv/AW
      p9/+Lt8pHKaoo+zd7FlKrhT37fea1JdHUgxPZrE2HwXAOf/YDd+rtUaXs5Sf/o8U/vKnvcao
      FSF8zxcJH/r5qmYoAYYzw5yfOEvIDPOAb0wDMObPAPSsIgMI5riCSe87VFoxMHMVgNuWaF5r
      rTl+epCzA5OVPle65HkGdyw1BAZE9+4letv+JY+5HtOZIr/6B4/zy//le/yP77+B6958X00q
      VdGV6mhZuylgaAaA9wxOjbzBcHqQtmg7d29aWgGynrAdidaeG9hyfU/zZW/X2R678YIdskws
      y/B+XH7P4dprF3GKNq3rOrjkeD/QO3b0rXiK1TQMfvwRb8H41vHT/OaFqzxevgsh4Cce2V+X
      pl5HS4zbtvaglOaF04OY2x4CYXrDTj4zqhq0kjgnv0L+f3wa57W/ALeEuf39xD/7V0Qe/BVE
      dOlM6pi/+7+t//aK4JrWmvFUoAK6ejMAAFHLWxBLfgkoV84yMHMFIQTbunYs+r5Mvszvf+Nl
      /u8/+iFvXZ0kZ9u4ShK2LGJ19vfVWvOn33ud0ekctiP5+rNv85++coz8EjIkc1G2JYWygxCz
      E+xrhWYAeI/g2OVn0Wju3HD3DSmV9US+5KC0JhIyl50BTPrqjjdzveGQQcg00Nr3H3BcBvzm
      74a7d/LGRa/Rd99tG+uyQB/eu56t/e0go5SHj4IKs7W/nbt3149KWJGIfmsIldyA0euVntwq
      U8Faa9zBlyn+9T+g/MS/Q+fGMLp3E/3obxP7xP+H2bn9hp9Xckq8NOBJP9y39YHK5LWUmqmM
      x6hZzSlgoFLiCTwIzk+exVUu3YkeWhap/4PXnL5zZx9Saf77t19lMpdHak3Usoha9Q0Apy9P
      8MwbV7FMg4/dv4tIyOT46UH+9Z89zeh07obvLzuSUtnFEIL2NRSCg2YAeE8gXUzxyrUXEQge
      3P5IQz+7UHZQShMOmcveeadLHgU0UH5cChHLImSZSKUolh3Gzg2Rn84Sa4tj9HcyNp3DMg32
      bFrcU2A5MITgkw963HPtJrz/f2BPzcyfanjoji0VbaCBiTzmOo+d5F56ah4FVWWGKT/1WxS/
      9ovIoVcQsXbC93yR+N/7M0J7Plypid8IZ8fPeNIP4QR3+cb04JXxZvwhsNWwgpyLYMgr6AGc
      H/f4/7t79lX6EdUghOCnPniA1kSEi8Mz/NUzp1BKkwxHiFr1Yy2VbJcvf/c1tIaH79zCL3zs
      IP/ipx+kPRnl7MAU/88fP8nZa0sP7NmuS9H2XNbWUgoamgHgPYHjV56n5BbZ2rmd3f4uslEo
      OxKlNZZpYC2zMZrxA0DrDcoWAJZlEAl5rmD5os3l4x5vfOOd2zk5OI0jFbs3ddFTJ9aF1op7
      Ct+jx/Susb8zwf231ZdHnoyFuXNHP65UPHtyoGISIweOg1tE2wXsk1+h8JXP4bz+P0FrzG0P
      E//JP/fKPUvsmBfej65kiYc33Ttvt10oO6RyJc8HoG11zUsCGmggCX15+hJAxQJyKazrauEn
      P+DNA5x4bQSnrGiN1I9nr7XmsZcucnFohtZ4hJ/+kdsxDYNDe9bxG7/wfjZ0tzA2k+ff/OnT
      nDgzuKh0R77o4LiKkGU0m8BNrC6kcnnG96c9suUo4SV2UauBUtlBa69Gv1z6YKrgSUG33WTJ
      KvAbmBicZOrKGIZlsvHgdt70tXvuqcL+qQVaa5yTf4V4+Q/4YuujHNwU45985t5V+TEfvX12
      KEx37YVIC7owhXPq6xS+9kXKP/wNdG4co2MrsU9/idin/usNaZ7VkLdznBr1lEKPbnto3qI5
      nSmiNbQlozVNcy8HkTk00KJdYCjlTenu6rm5jcuPHt7Bns1dKBfGL9m0LzEDsFxMpgv8zdOe
      4uiPP7J/XjDc3NfGv/3CBziwrYdc0ea3//cLfPP5s1UZQoEMdCIaXrZBUr3RDADvclxLDXB5
      6gJRK8pDOx5p+OfPPuyhZe/EKjIQ0ZubqA0E4c6eOIdWmr7dG3AjYc4NTmGZBnftWjn1VWuN
      vHqM8jO/A1py5+H7+PVf/Cj7t/as+NzVcOf2PpKxMOMzeS6OF7H80kz5qX+PGnkDwgkiD/0z
      4p/9KtaWB5Zk+CyF14deZaYwRXusg/19B+a9NuKLwHW3xVd9wZrLAhrODDFTnCZiRdnQdnPZ
      VThk8sWPHwIgOyUR+foELKU0//MHb5LKldi+roOP3rdzwfPc2Rrj1372YR65ayu2K/mT777O
      Hz/6Go47fzo9GAJb7WzqZtAMAO9iaK15/Oz3ATiw7s6GNn8DlB3v4a9mhr4UpJLM+GYw7TcY
      AgsQ1FMDNsa2+/Zw+uoE2YJNV2uMTT0rN/tWE29RfPSfg1vE2v1jRB7+VYS5eml8e0uUA9t6
      UFpz7NQQ1v5PghECIbD2fozE575O+PDnEUu4pd0ISiuevfgEAO/b8f7KIhxgxB8CW9/VUtce
      RzXE/DmAglOo6P/s6tlT0Qi6Gezc0MFte7tAw3efvXjT7JylcOryOM+eHMA0BD//0bsWnYWI
      RSx+5cfv5bMf8spD3z52jt/6n89X5FAA0v4MQPsaGsEEaAaAdzHydo5XfEOP9+/60JJ6+quF
      QAo6uUwdIFvalN0ShjBIhJduPGqtsN/8a8zLnnWii6DFHCVx4Q946aTHBPLkFVZG/5QzVyl+
      +59BOYu54RDRH/23iEUGk+qJowc8p7Bjp69h7vggsU99ifjf/0uiP/bvb6jqeTOYyI5xYfIc
      lhHi6Bzuf4CAAtqIHWtQArLdMhd9L+Q9vfuWnT2avS5WRDAyleOrT51Z0TWVbJc//e7ruFLx
      8F1buWP70nMehiH4iUf288ufOUIsYvHy2WF+/ctPMTiRAWDab6jfjEvcaqMZAN7FeG3wZdKl
      FF2Jbg6sq65vs9oI3MDi4eXtkot2gaJTxDSsJc3gtS8BXH7iN4i7nnlMCVgXP0Px9Dc5c9Zb
      RFZa/lGFaUrf+5fo9CBG53aiH/mPK9p1Lwe3b++lJR5mKl3k7YEprK0PYPYfqJt5+auDL1F0
      imzu2MLG9s3zXtNaMzETzACsLgMIqPSocnaWK34DeFvn4vz/arClxMalZ6t3ru+euMDFoema
      r+mxly5ycXiG9mSUv/+B224qGAkheN+dW/i1z72PztYYl4Zn+PUvP8Wbl8YqGclaM4CgGQDe
      tZBK8oyf1j+0/f2LjtCvNgI3sOXKQJTcImW3jGWYtEQXjuhrrVEzVyl+45/gvP6/QJjEEl6p
      yEhE2fKJn+Ky2MmUTNIWctkRz9R8D9opUHrs11CjbyKSvUQ/9jsYLY3xjgWvtnz7tl6U1hw/
      M1jXc7vK5ekLno3lQzvevyBLdFzFjK9b09O+ujMA4MlBCwTThSnGc2OEzDCbl9nUDiQg1m+M
      c9v2bo+6+ehruHL5KrgTqQJffdLLID7z8D76lkGDFUJwYHsvv/nFD7Clr43JdIHf/PPnePW8
      pz7a2drsATSxShjJDHNh8jymMHlg2/vWTHI20AFKxJYXAHLlHK5yiIZixK8zANFa4V58gsJf
      fx459DJE27Ee/lfkwt6Ec3JTD/Hbfow3t/5jFCa7xAXC3//HuDXo6WslKT35W8jLz0A4QfTD
      v4XZffMuX/XCUd8w/tipa6gVOoPNxZWpSwxnhoiHExzaeKTyd609SY2rYylS+RKGIehb5SEw
      gJAZRghR8QXua+mnO7m8Bnuq5JdYolG+8LFDJKIhTl+e4IlXluerrLTmfz1+kkyhzM4NnXzo
      8I2H6aphXVcLv/GFD3BwVz+FssO4n1E1S0BNrBqeufhDym6Jff0H2OArOq4Fak13s2Vvx359
      /V9LB/vYf6X06P/l0R979hL/8S+TCh2iOOJx8ov2/9/e2YM2EYZx/Hd3ubuYfoRW7ccgwZaa
      c7BFgh1qcelSRAUdBHEQB1EoVDp0EISOjiIIDjoJToqiiNbqIGJtNKhgW+sHUtPzg9pAWtMk
      x+Wa1+FiShfTkBxd/O3vO7zD87487//5/x2EEEz9cP8fugLfEMvzZO+cIffp0bqjFYUQ2K+u
      4kzfBkXD3zeCb1t36YUe0NnWRN0mjYXFDB/nElXbN2ZGcfIOO7YaNAa28H3hN2OxL1y8GWXw
      0ijDVx6TytjUBzQa67x/sboXwGpZMprK8+gBijkA9bqfttYGDvaEEcCNJ5NFBc56+BBP8PRt
      HFmSONHfVZHMN1ijc+54L/3dbkiQIku0NHjfUivFxvQF/uMp2VyW2FwUcFUdG4lVcOAsVz/+
      Nwx+c83q5G4+ncAaO8/K1+cgyaidR9F7h0Ct5fOth6giDyikMja/kmlmfybRVIXdx0ZQXl9g
      ZfYZ1oNhtB7TVc78Y0JWCIEzcw974jJIMvres6jG/vIPoEoEa/3sam/mxZTJ+KTJzlDlstO0
      ZTH+foZcsoN4qp2TL++yuLy2QKqKTKglyKkDkeKchZf4ZGVNRGK4ufwLIJEuWFcXXEAP7zOY
      mDaJzy9xffQdA0f2lJSzWrbDtftvyAtBX2R7VQz+dM3H6UMRIuFWMlYOI1SdqfRK+AOiuIBC
      SN3z2AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='BestAirport' width='384'>
      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
      nfwWszkHHRs3ojkTw+nvfsC23XvwwnPbceXSRYxNzWJN20p8f/Y7OEocz+/aBk3V0NCQASEE
      9fUNZbKmUwlkagyc/u4sYulG1NfWoKGhARQE69vX48K572G7Gta3r0cqbpTkJnhu927cu92F
      sbFRtKzbgk2r6nHl6g2oRgqrWptLteSiffN2NKZjaF7djrp0CqoR9+pm+5b1uHj5CmyqYm3b
      SsSTaaQSOjQjgUxNEkTVcbvrFt589120rWnDpR++w+DYLN547WW4uSlc+PEGWla1YfWqVhDV
      gEFzOHv+EhpWrEJNIoGGhgxACHZs24xvT5xELNOKPS/swvTwXfx4rQv733gDo/dv43rXbWze
      thN7ntvqf1eqgamhu7jTP4R169ajuakR6fom9HZexp37I1jfsQGNDXWoa2iACqChoREEBLFk
      DVa3tWGorxv3+gewas161CRiaGhsQMuqNnRfu4KB4TGsW9+OuKF7dbp63Tp0Xr2EvKOgpakB
      mZoYvv/+e2jJDNavXw9DU9BQX+/V0w/fnUBf/wCe2/ciOjo24e7NS+jqHcSbb72BmKYV84WC
      makR3H4winVtq1DXuEJIp6KhsaHUPzQQcxrnr9zAyjVrsaq1BYpmYGb4vldHGze049L3p6Ek
      GqHkxxbqprERNaWzshPpRtTFbJw9fwmtG7bByE+i++49NK1YhRPffIV1m3YgpinQEzXo6urC
      e2+9jrbVq4rt24nh5b07MTU2hBu3etG2bh1aW5pgJDPITfTj0o83sHnbbty5cQnTWRvr169H
      piaJhsYGXxtH6X0AQLImiYKr47239qOv9x5aVzQDBDASNWhb08r1hTgIIWior/f6OMszqN4I
      IWjftM3/rpMxrGxt8trczs3rfPIk0rXee968sR1aLIWtWzaCQkH7mtVIxRSvbzc3FGcmcV1F
      S1s71q5sQCrTgtVtq3G3+yaGRqfRvn4dWlev9upybOg+Ll6+hjXrN6Mw1oe7EybWrmxCY8tK
      XP7hDIanZtGxYSM2t7d5/S8TJz6d01ybWOjPK5oX3m2qHiklW9ZG6mtrUN/YAAKCupbVaEwQ
      PBgexcxcDtu3bQmtP/bOMuk4UnUrsGnDGiilcpmupCDYvWunp+fa29uhmnO4eOMONrav9eT7
      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
    </thumbnail>
    <thumbnail height='384' name='Bon Voyage' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAW4ElEQVR4nO3deXhU9b3H8c+ZJRtJCAkhLAFUZN+CbIEEAQnuiuJWbN3qpaVS1Gqt7VWr
      9tZ70dp6qxZr6y5WUW9xF0H2fQkgsoUQdggJSSAkkGS2c/8IBlEQHwSD+b5fz8PzkDnnzO83
      J0/mPXPOLI7ruq4AAOZ46nsCAID6QQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABhFAADAKF99TwDAkSpKizRlxmxJjiTJ4/UqpWmaevfprYS4mFMy5vaC9crbXqZhgwfKcY5c
      VllapKkLP9OVlwyX89WF+EHjGQBwminZuVn/eG6iioqLVVxcrJ3bt+nfb7yky0eM1OqCXadk
      zBhvUA/+4REdDEW+tmzWtPc1Y97SUzIu6hfPAIDTUHJqum67baw8X3rA/crT4zXx9bc1/v7b
      T/p4qWd0VedUR/OWrtUFA7sdsWzmzBkadvUdPPpvgAgA8APRunW6lhcX1v0crDmgV194TnMW
      5cqVV32zh+jWm36s2KjaP+v1uQu164DkqS7VR1Omqai0XGd36aE7bx+nhFj/V67do5ycYZo1
      Y6bOH9hNX9zVV+3drqVri3R/du9Dl7hanbtQL736ugr3lCmtZRvd8NNb1avz2XJdV++9+apa
      dspU354d6q7ZdcN6+dkJyhl5o1qlJmrZwtmaMWuutmzbIV90I2VmDdZ1V18uX13tXK1duUT/
      984H2lFYrNS0VurcsZ36D8rR2W3SJEk7N6/T3//xvDZv263ktBa6+daf6Zyu7U/+Tm/gOAQE
      /AAUrF+lv784SRcOH37okoj+eO8dWlFQqvt+/7AefOBe7Vy3SL958FFFDn3C+7b8z/W73/5a
      H85ZoStG3aQHH/hPlWxcoVfefP+oYwwZdp4WzJ2hQPjwJ8TPnzVL3QYMVlKMV5K0Pnee7rzn
      YQ295Co98cRfdMGgDN0zboxW5e+U4zjyhWv01D9fPOJ6t6/L1cQP5qtZ00TJdTXtkynq2L23
      br/zbt18/dWa/u9X9Mwr/65bf8HUdzTurt+rXbe+uv32O3RRziB98OZEFZdWSJLKi7bqZ7+4
      U92zLtSEvz+jay8Zqt/dNU4FO0tP1u62wwVwWtn02UI3O3uI+x+jR7ujR492rxpxqZtzwSXu
      9AXL3Uikdp0taxa7F4y4zj0YCNVtF6yucK+6MMdduXG367qu+8nrz7qP/OUfbuRL1z37vdfc
      +x/76zFGDru3XHWRO3t5ft0l/znuZvftKQvqfr537I3uGx/OOmKrd155xr3zvsdc13XdmooS
      d/jgQe7qLUWHlkbcZx//vfvYhNeOeXvXLZzq/uTnv66dQajGHXVpjjtjybovrRFx77/tRnf+
      oXm9PGG8+8hfXzriOl5+6r/dRydMPOYYODoOAQGnoeRm6Rp721h5vY4OVFRoRe4SPf3YI4p9
      4A8acE4X5X2+Sv2zzlWs31u3jS86XoMG9tTna9eqZ7vaQyVer19fPnLv9X3Tn7xHOTnnafqM
      WRrU62wFK4u18LPtunt839rFblBrV+Xr7j9lH7HVkKGD9NTkRyVJUfHJuvrioXrzrXf18K9H
      KxKq0cfT5ut/njt83qKqcp+mTZumTVu2KxAMqbKkUJVVB2qXlW1XodtMg/t2OvoUXVfrV61V
      3ysHqqioqO7iVm3O0pxPVx9nr+KrCABwGoqJTVCPnj3rTgJnDszSgIxOeuTJv2nSi0+rqiag
      aH/017dLSFQwFD7hcYcOG6bnf/UnhX91q5bOma2O/bLVJPZQZNyQqmq8ivYdeeQ4Nj5BwfAX
      rx5ydOWoH+mam+7SvrG3aMeK2Yppm6FO6SmSpIN7i3TDTbcoIytHg7P6KzY6SiWbV+vzDxdK
      kiLhsKLjonXs082uqqoDeuvV5/Xpu42OWNKx4zknfLutIgDAD0RaWjNVVpYr4kot01tp8pJF
      iriuPM7hk6d5q9fq/L5XnPAYLdr3UGt/mZav36HpM2fqvKE/PvzqH0+MWqXHKm/jLvXt3Kpu
      m7zVa9WiWWrdz03TO+ncnul67+OZKlz+sS6/9Mq6ZUsXzFTbXoP1wL131V22IyYgHQpAXHJL
      eUo2K39nqTq0Sqlbp+6shOOoeatm6tN/hH582XknfDtRi5PAwGnIPXyXJ9eNaNe2TXr8iSfV
      vWdfeR1HGZnnqmTjUk2bn1u35uLpk7VqV1jZfbt+h5G9yhk+VJ9+8q7mLsvX0MH9vrTM0UUX
      X6wJTz+hqkBIklRzYK+eevY5XXLRpYfXchyN+tG1evNfL2hObr4uzMmqW+bz+VRaUqbwoRPV
      +0uL9drb7x4ePaqRfjTifP3mzts1a/4SrflspZ56fLxm5ObVzWF4znBNfOFZbdtdVre3dm7N
      15uTP/oOt9smngEAp6HN65Zo4IBMSZLrumqa1kIDsofo9l+OkeNI/rgmemz8f+me396nSa3a
      yHED2lZYrvGPPq74qNpDNo7Hq6+9rVeSc5zHfUOH5Wjkjb9QRvZFSok78i7imhvHKH/zfRox
      YqQ6nNVa+Rs2KHPYFRp1xbAj1uvUd6iae55UcuZwNYk9fB39zh2uif96W9ded72aNUnQrsJS
      XXBeprR1X93sbhh3jxLS/qW3Jr6giDdKQ4ZdqMHnrKu7jl6DL9aNBVt0y/VXKb3NGQpWH9CB
      amnMuLu/9f5FLcd1Xff4qwE4HYWCNcpbn6eI41PHTh0V5fMef6PjcSMqLdurmNhYNYqL+/pi
      11Vx4U7tKCxSq7ZnqXnTJkdZJ6I7fnqdrrljvAZltPvK1Ue0MX+DIp5otWvXVj7PNwfJdSMa
      d+O1uuE3f1b/7m3rLg8GalRcvEdRMXFqmpJ8tNbhOHgGAPyA+fzR6tq9x8m9UsejlJSUYy92
      HKW1TFday/SvLat9POlqzoeTtCPUTAN7tvv69h6P2nc89qt8Xn3+WZ3ZrY96dOsshar17luv
      KX+fT107HDmePypardK/Pgd8ewQAwEkTPlCk8y8bpeZtz9YfH/6DvCfwqPyMM9vqnUmv6Mk/
      F8p1PDrz7E7624S/Kj76JDy7wRE4BAQARvEqIAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKj4JAg1FRUaFgMFjf02jQEhISFIlEFIlEjr8yTlh0dLQ8x/mQvJOBAKDB
      qKys1IEDB+p7Gg1aTEyMQqGQQqFQfU+lQYuKivpexuEQEAAYRQAAwCgCAABGEQAAMIoAAIfU
      VFfrq1+PEQmHFAh+wwlPN6KamsApnlnDEjjK/oqEQwqFv79XFrmuq5qamiPGLysrUyAQUOQY
      X5ESDATU0L48hQCgQavZX6zxjz2mN954Qxu37tCCRQuPue4H701SIFL7J75i8WJFXKlw/UrN
      XbH5mNtU792lj2bN/RYziSh38ZJjLl04f4FO5KuZli9efELbnWzV+4r0wZSpWrRokUr3VSgv
      L++Y6y5fsezQ/1xtLiiQJO3aulG79uw/obFdN6KCzVskSWXFu7RnX8W32Cis3JWr6n5ctGCe
      9pTu1YY1y1URiBx1/rnLltcFwHXDKti89YTmezrhZaBo2CJhdeieoZEXnS9J2lKQr9Lt+frn
      a+8pIdqnrOGXy3Ngq+Yv36CCHZt16VVSRcluvfrSi1q+tkCDepylKZMnaf2CBA268Cq5ewu0
      dO0mxSWkatS1l0qS5k6frl15a9VnyMVq5tuvaQtz5fU00qU5/TTpvalKatJE/bq218svvaSt
      ReW68rLhqior0uuTP1BlRaVuGD1GNVVVqqko1vsfTVfh3mplnJGiDYV7tH//fo25bazefOF5
      VYfDyhgwTMHyYu0p3Sm5CZoz40OtXLtJ199wnWJ89fd4zo2E1fqs9urZ4Uy5rqvdhRGV7t6m
      5asL5FVY3c7pr8riLdpRsl8l+/ZJkir2lmrpsqXavadMLVPjtWr5Em2M8qp7n/7aX7hZhWX7
      FZ+YoozunRQKVGnevAWKyFGPc/pp24bPVBWUQvKp81kttXTpUpXtq1D7VsmqDoa1fPF8HQxG
      dOBAlRrFxSouqalaN43Xhk3bFQxLg7L76YtvkT9QXqbtu3bLF5OgOF/tZaFIRG4krMUL5isQ
      kRKSUxUOHtS8uXMVDEbUuUNbLVu2TPvKK9Q7o1u97ffvimcAaPDmfDpFTz75pDbsKNGO4iIF
      KivUe8gluvXmq7Vpe74WrVyjn48ZrYEZXSRJCU2ba2Bmpm6++Xo1ivHpgiuv1U9vGKmNW9br
      o9nz1bFje20qWKXqYFiSNGjYMI395S+0Jne2pk7/WO3bd1Tpto3atHWbAhGP+vcdqE49M5TV
      f4BGXj5cjiNFJSQqNbmxwtX7tDK/UHt2blckUK0l+Ts19uc3a8/eGo36yU26KLOnPvnoE8W3
      6a4xY2/TqtxFKspfrZTW3TXymssOzXNUvd75f2HjujWaN2+eyiurVb5/v2qqqtS+S4b6Z3RW
      YUmJthWV6dzsLLVMbSJJSmiSorat22hAZl/5HEc9evVVv54dtHtPiTZs2aaWLVpo+45tkqTt
      W/J1VpfeOjc7UxvWr1Mg4igrK0vJ0SH5G6epTdsz1LdXdwWrq1RdE1DAdZSdna2khHhlZ2ep
      umK/4hMaK9rv0/7SXaqsOXy4qVHjZLU9o4369e1dd4dYXr5fFSU7FZWSroGZfXRgf7l8/jhl
      ZQ9SWlKU4lNaqE3bM3/Qd/4SzwBgwLk5F9Y9A1hw6DLH48hxHMlxFApFFHFdHaw8/CayQDig
      8KF3uzoeT+0/R4p2fGp7ZjtdndpUfo+jL84OlO8rUSjil98XrZatz9AV112jpNRUdc/oown/
      +4zG3H2HqoO15xgcx9Gi6e8pvWuW2iTFau+Xvjg9K7OPvB5HkitX0vadO9Usvb3yNhYpFKhW
      TSAsJaWq3zm1saoJBg6ft3BO4BvYT6KzO3etewbwhdpdXDuvSDgs13UVqDn8bu1QKFS3vuN8
      8TupfWTaOKmJenarvZ1+n08VBw+qJjYkefxSJCjXdVVeUaV2Po9CoeCRh8K+siscx9Hy3OXq
      mZklBb/dmwV9/miVl+3W3iS/QhHJ73XkOJLHqc1E8NCY9bzbvxPvQw899FB9TwI4GSorK4/y
      URCOvP4oNU1OliR5HEdpqc0UFZegJolx8vlj1T49Te9++LESm7ZQl44d5HEcxcX4NPn9GerY
      ubMSEpPUJCFWXn+0+vfsrKkzZqiiKqhOHdrLI2nZkiVan7dZI6+9Wt06d9T0T6Zqd2mlWjdL
      1JRPPlWzNmeqZ9eO2ltapBVrtqpTx3ZKSknVzOlTVVkVVpfu3ZWUEKdmzdPk9ceoaXKS1i1d
      pAW5uWqU2kbDBg/S3l0bNXf+El08YoQax8cpNS1VXo+jGJ80+cPZ6tK9q/zeU39P9E0fBeH1
      Rys+LqZuPycmJCgqppFion3yRcWoSaNorVqzTokpqWqe2lSSI58nrM/X5KtFerpiY+IUHe2T
      zx+j1s1TlJe/URHHr7TUFCU0TtaOTXnaUVymXhkZ2rZxrXbuLlKLtu2VltJYoaoKbdy6W61a
      pikqJk6x0X4lJibKkUeJiYmSHDVPbaK1a9YqKi5RzZs3l9/nVWJCQt38ExMbS5IaxSfK7/Uo
      ObW5otygSsr2qibkqk16SyU0TpTjSI0Sk+QeLNemHcVq1aLZSd/PMTEx38tHQTjuV1/2APxA
      FRYWNpiPglg4d756DchUjM9b31M5QsuWLU+Lj4JYv36dOnXqfErHCAertXhxrkJuRF2691LT
      pPhTOt6XNW7cWF7vqf/dEwA0GA0pAKer0yUADd33FYD6P3MEAKgXBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAY5avvCQAnS3x8vKKjo+t7Gg2a3++X1+uV3++v76k0aI7jfD/j
      uK7rfi8jAQBOKxwCAgCjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCK
      AACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYNT/A+ypkr41e44cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='MapWithRadiusFilter' width='384'>
      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
      Ael32aAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='OptimalFlight' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='SelectedAirport' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='358' name='TotalFlightsByCarrier' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='TotalFlightsByHour' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
